[repair] benchmark: manybugs
[repair] subject: libtiff
[repair] version: 2007-11-02-371336d-865f7b2
[repair] search: symbolic
[repair] debug: 0
[repair] ./fetch libtiff manybugs 2007-11-02-371336d-865f7b2
[fetch] benchmark: manybugs
[fetch] subject: libtiff
[fetch] version: 2007-11-02-371336d-865f7b2
[fetch] archive: libtiff-bug-2007-11-02-371336d-865f7b2.tar.gz
[fetch] directory: libtiff-bug-2007-11-02-371336d-865f7b2
[fetch] preparing source code
[fetch] golden_directory: libtiff-fix-2007-11-02-371336d-865f7b2
[fetch] clean-source libtiff-bug-2007-11-02-371336d-865f7b2
[fetch] /angelix-experiments/libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/configure
[fetch] make -j 72 clean
[fetch] clean-source libtiff-fix-2007-11-02-371336d-865f7b2
[fetch] restore-buggy libtiff-bug-2007-11-02-371336d-865f7b2
[fetch] /angelix-experiments/libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/configure
[fetch] make -j 72 clean
[fetch] restore-buggy entered
[fetch] buggy: libtiff/tif_dirwrite.c
[fetch] buggy_version: 371336d
[fetch] buggy_preprocessed: libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_dirwrite.c
[fetch] buggy_original: libtiff-bug-2007-11-02-371336d-865f7b2/diffs/libtiff/tif_dirwrite.c-371336d
[fetch] cp libtiff-bug-2007-11-02-371336d-865f7b2/diffs/libtiff/tif_dirwrite.c-371336d libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_dirwrite.c
[fetch] restore-correct libtiff-fix-2007-11-02-371336d-865f7b2
[fetch] restore-correct entered
[fetch] cp libtiff-fix-2007-11-02-371336d-865f7b2/diffs/libtiff/tif_dirwrite.c-865f7b2 libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_dirwrite.c
[fetch] restored libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_dirwrite.c with libtiff-fix-2007-11-02-371336d-865f7b2/diffs/libtiff/tif_dirwrite.c-865f7b2
[fetch] fetch done
[repair] [repair] options: --symbolic --log
DEBUG
--angelic-search-strategy
symbolic
--klee-timeout
7200
--synthesis-levels
alternatives
--ignore-trivial
--klee-max-forks
100
--klee-solver-timeout
100
--defect
if-conditions
loop-conditions
--klee-search
dfs
--ignore-unmatched-execution
--all-suspicious
--lines
346
--ignore-lines
--ignore-z3-exception  --timeout 14400 --show-suspicious-locations --group-size 1 --defect if-conditions loop-conditions
[repair-libtiff] options:  --log DEBUG --angelic-search-strategy symbolic --klee-timeout 7200 --synthesis-levels alternatives --ignore-trivial --klee-max-forks 100 --klee-solver-timeout 100 --defect if-conditions loop-conditions --klee-search dfs --ignore-unmatched-execution --all-suspicious --lines 346 --ignore-lines --ignore-z3-exception --timeout 14400 --show-suspicious-locations --group-size 1 --defect if-conditions loop-conditions
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/ppm2tiff_pbm.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/ppm2tiff_pgm.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/ppm2tiff_ppm.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split-join.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiff2pdf.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-logluv-3c-16b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-minisblack-1c-16b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-minisblack-1c-8b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-minisblack-2c-8b-alpha.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-miniswhite-1c-1b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-palette-1c-1b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-palette-1c-4b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-palette-1c-8b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-rgb-3c-16b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-rgb-3c-8b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extractz14-logluv-3c-16b.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_dirread.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/long_tag.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/short_tag.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/Makefile.in
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/Makefile.in
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_error.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_error.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_error.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_write.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_write.c
[repair-libtiff] instrument libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_write.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/common.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/short_tag.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/strip_rw.c
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split.sh
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/count
cp: cannot stat 'libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/count': No such file or directory
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/o-tiffcp-split-conjoined-expected.tif
cp: cannot stat 'libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/o-tiffcp-split-conjoined-expected.tif': No such file or directory
[repair-libtiff] restore libtiff-bug-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/ppm2tiff_pbm.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/ppm2tiff_pgm.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/ppm2tiff_ppm.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split-join.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiff2pdf.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-logluv-3c-16b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-minisblack-1c-16b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-minisblack-1c-8b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-minisblack-2c-8b-alpha.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-miniswhite-1c-1b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-palette-1c-1b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-palette-1c-4b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-palette-1c-8b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-rgb-3c-16b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extract-rgb-3c-8b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcrop-extractz14-logluv-3c-16b.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_dirread.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/long_tag.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/short_tag.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/Makefile.in
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/Makefile.in
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/tools/tiff2pdf.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_error.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_error.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_error.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_write.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_write.c
[repair-libtiff] instrument libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/libtiff/tif_write.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/common.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/short_tag.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/strip_rw.c
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split.sh
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/count
cp: cannot stat 'libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/count': No such file or directory
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/o-tiffcp-split-conjoined-expected.tif
cp: cannot stat 'libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/o-tiffcp-split-conjoined-expected.tif': No such file or directory
[repair-libtiff] restore libtiff-fix-2007-11-02-371336d-865f7b2/libtiff/test/tiffcp-split.sh
[repair-libtiff] the assert option not used
[repair-libtiff] angelix libtiff-bug-2007-11-02-371336d-865f7b2/libtiff libtiff/tif_dirwrite.c /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78 --golden libtiff-fix-2007-11-02-371336d-865f7b2/libtiff --configure                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile              --build /angelix-experiments/.aux/libtiff/scripts/build-libtiff  --log DEBUG --angelic-search-strategy symbolic --klee-timeout 7200 --synthesis-levels alternatives --ignore-trivial --klee-max-forks 100 --klee-solver-timeout 100 --defect if-conditions loop-conditions --klee-search dfs --ignore-unmatched-execution --all-suspicious --lines 346 --ignore-lines --ignore-z3-exception --timeout 14400 --show-suspicious-locations --group-size 1 --defect if-conditions loop-conditions
DEBUG    repair          tests: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78']
INFO     repair          copy libtiff-bug-2007-11-02-371336d-865f7b2/libtiff to /angelix-experiments/.angelix/validation
INFO     project         configuring validation source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     project         building json compilation database from validation source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: bear /angelix-experiments/.aux/libtiff/scripts/build-libtiff
DEBUG    repair          start to measure time
INFO     testing         running test '1' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 1
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 1
INFO     testing         output code: 0
INFO     testing         running test '2' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 2
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 2
INFO     testing         output code: 0
INFO     testing         running test '3' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 3
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 3
INFO     testing         output code: 1
INFO     testing         running test '4' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 4
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 4
INFO     testing         output code: 0
INFO     testing         running test '5' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 5
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 5
INFO     testing         output code: 1
INFO     testing         running test '6' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 6
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 6
INFO     testing         output code: 0
INFO     testing         running test '7' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 7
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 7
INFO     testing         output code: 0
INFO     testing         running test '8' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 8
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 8
INFO     testing         output code: 0
INFO     testing         running test '9' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 9
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 9
INFO     testing         output code: 0
INFO     testing         running test '10' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 10
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 10
INFO     testing         output code: 0
INFO     testing         running test '11' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 11
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 11
INFO     testing         output code: 0
INFO     testing         running test '12' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 12
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 12
INFO     testing         output code: 0
INFO     testing         running test '13' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 13
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 13
INFO     testing         output code: 0
INFO     testing         running test '14' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 14
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 14
INFO     testing         output code: 0
INFO     testing         running test '15' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 15
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 15
INFO     testing         output code: 0
INFO     testing         running test '16' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 16
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 16
INFO     testing         output code: 0
INFO     testing         running test '17' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 17
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 17
INFO     testing         output code: 0
INFO     testing         running test '18' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 18
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 18
INFO     testing         output code: 1
INFO     testing         running test '19' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 19
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 19
INFO     testing         output code: 1
INFO     testing         running test '20' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 20
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 20
INFO     testing         output code: 0
INFO     testing         running test '21' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 21
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 21
INFO     testing         output code: 0
INFO     testing         running test '22' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     testing         running test '23' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 23
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 23
INFO     testing         output code: 1
INFO     testing         running test '24' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 24
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 24
INFO     testing         output code: 0
INFO     testing         running test '25' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 25
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 25
INFO     testing         output code: 0
INFO     testing         running test '26' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 26
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 26
INFO     testing         output code: 0
INFO     testing         running test '27' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 27
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 27
INFO     testing         output code: 0
INFO     testing         running test '28' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 28
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 28
INFO     testing         output code: 0
INFO     testing         running test '29' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 29
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 29
INFO     testing         output code: 1
INFO     testing         running test '30' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 30
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 30
INFO     testing         output code: 1
INFO     testing         running test '31' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 31
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 31
INFO     testing         output code: 1
INFO     testing         running test '32' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 32
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 32
INFO     testing         output code: 1
INFO     testing         running test '33' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 33
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 33
INFO     testing         output code: 1
INFO     testing         running test '34' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 34
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 34
INFO     testing         output code: 1
INFO     testing         running test '35' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 35
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 35
INFO     testing         output code: 1
INFO     testing         running test '36' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 36
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 36
INFO     testing         output code: 1
INFO     testing         running test '37' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 37
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 37
INFO     testing         output code: 1
INFO     testing         running test '38' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 38
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 38
INFO     testing         output code: 1
INFO     testing         running test '39' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 39
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 39
INFO     testing         output code: 0
INFO     testing         running test '40' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 40
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 40
INFO     testing         output code: 0
INFO     testing         running test '41' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 41
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 41
INFO     testing         output code: 0
INFO     testing         running test '42' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 42
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 42
INFO     testing         output code: 1
INFO     testing         running test '43' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 43
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 43
INFO     testing         output code: 0
INFO     testing         running test '44' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 44
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 44
INFO     testing         output code: 0
INFO     testing         running test '45' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 45
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 45
INFO     testing         output code: 0
INFO     testing         running test '46' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 46
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 46
INFO     testing         output code: 0
INFO     testing         running test '47' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 47
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 47
INFO     testing         output code: 0
INFO     testing         running test '48' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 48
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 48
INFO     testing         output code: 0
INFO     testing         running test '49' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 49
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 49
INFO     testing         output code: 0
INFO     testing         running test '50' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 50
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 50
INFO     testing         output code: 0
INFO     testing         running test '51' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 51
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 51
INFO     testing         output code: 0
INFO     testing         running test '52' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 52
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 52
INFO     testing         output code: 1
INFO     testing         running test '53' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 53
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 53
INFO     testing         output code: 0
INFO     testing         running test '54' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 54
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 54
INFO     testing         output code: 0
INFO     testing         running test '55' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 55
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 55
INFO     testing         output code: 0
INFO     testing         running test '56' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 56
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 56
INFO     testing         output code: 0
INFO     testing         running test '57' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 57
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 57
INFO     testing         output code: 0
INFO     testing         running test '58' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 58
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 58
INFO     testing         output code: 0
INFO     testing         running test '59' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 59
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 59
INFO     testing         output code: 0
INFO     testing         running test '60' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 60
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 60
INFO     testing         output code: 0
INFO     testing         running test '61' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 61
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 61
INFO     testing         output code: 0
INFO     testing         running test '62' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 62
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 62
INFO     testing         output code: 1
INFO     testing         running test '63' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 63
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 63
INFO     testing         output code: 0
INFO     testing         running test '64' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 64
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 64
INFO     testing         output code: 0
INFO     testing         running test '65' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 65
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 65
INFO     testing         output code: 0
INFO     testing         running test '66' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 66
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 66
INFO     testing         output code: 0
INFO     testing         running test '67' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 67
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 67
INFO     testing         output code: 0
INFO     testing         running test '68' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 68
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 68
INFO     testing         output code: 0
INFO     testing         running test '69' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 69
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 69
INFO     testing         output code: 0
INFO     testing         running test '70' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 70
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 70
INFO     testing         output code: 0
INFO     testing         running test '71' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 71
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 71
INFO     testing         output code: 0
INFO     testing         running test '72' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 72
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 72
INFO     testing         output code: 0
INFO     testing         running test '73' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 73
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 73
INFO     testing         output code: 0
INFO     testing         running test '74' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 74
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 74
INFO     testing         output code: 0
INFO     testing         running test '75' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 75
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 75
INFO     testing         output code: 0
INFO     testing         running test '76' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 76
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 76
INFO     testing         output code: 0
INFO     testing         running test '77' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 77
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 77
INFO     testing         output code: 0
INFO     testing         running test '78' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 78
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 78
INFO     testing         output code: 0
INFO     project         configuring golden source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     project         building golden source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     testing         running test '3' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 3
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 3
INFO     testing         output code: 1
INFO     testing         running test '5' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 5
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 5
INFO     testing         output code: 1
INFO     testing         running test '18' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 18
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 18
INFO     testing         output code: 1
INFO     testing         running test '19' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 19
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 19
INFO     testing         output code: 1
INFO     testing         running test '22' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 0
INFO     testing         running test '23' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 23
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 23
INFO     testing         output code: 1
INFO     testing         running test '29' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 29
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 29
INFO     testing         output code: 1
INFO     testing         running test '30' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 30
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 30
INFO     testing         output code: 1
INFO     testing         running test '31' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 31
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 31
INFO     testing         output code: 1
INFO     testing         running test '32' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 32
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 32
INFO     testing         output code: 1
INFO     testing         running test '33' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 33
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 33
INFO     testing         output code: 1
INFO     testing         running test '34' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 34
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 34
INFO     testing         output code: 1
INFO     testing         running test '35' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 35
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 35
INFO     testing         output code: 1
INFO     testing         running test '36' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 36
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 36
INFO     testing         output code: 1
INFO     testing         running test '37' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 37
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 37
INFO     testing         output code: 1
INFO     testing         running test '38' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 38
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 38
INFO     testing         output code: 1
INFO     testing         running test '42' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 42
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 42
INFO     testing         output code: 1
INFO     testing         running test '52' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 52
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 52
INFO     testing         output code: 1
INFO     testing         running test '62' of golden source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 62
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 62
INFO     testing         output code: 1
WARNING  repair          excluding test 3 because it fails in golden version
WARNING  repair          excluding test 5 because it fails in golden version
WARNING  repair          excluding test 18 because it fails in golden version
WARNING  repair          excluding test 19 because it fails in golden version
WARNING  repair          excluding test 23 because it fails in golden version
WARNING  repair          excluding test 29 because it fails in golden version
WARNING  repair          excluding test 30 because it fails in golden version
WARNING  repair          excluding test 31 because it fails in golden version
WARNING  repair          excluding test 32 because it fails in golden version
WARNING  repair          excluding test 33 because it fails in golden version
WARNING  repair          excluding test 34 because it fails in golden version
WARNING  repair          excluding test 35 because it fails in golden version
WARNING  repair          excluding test 36 because it fails in golden version
WARNING  repair          excluding test 37 because it fails in golden version
WARNING  repair          excluding test 38 because it fails in golden version
WARNING  repair          excluding test 42 because it fails in golden version
WARNING  repair          excluding test 52 because it fails in golden version
WARNING  repair          excluding test 62 because it fails in golden version
INFO     repair          positive: ['1', '2', '4', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '20', '21', '24', '25', '26', '27', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '53', '54', '55', '56', '57', '58', '59', '60', '61', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78']
INFO     repair          negative: ['22']
INFO     project         configuring frontend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting repairable of frontend source
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  ANGELIX_USED_VARIABLES=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/frontend
DEBUG    transformation  trans cmd: instrument-repairable libtiff/tif_dirwrite.c
INFO     project         building frontend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     repair          running positive tests for debugging
INFO     testing         running test '1' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/1
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/1
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 1
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 1
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 1
DEBUG    repair          remove 1 from repair test suite (not instrumented)
INFO     testing         running test '2' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/2
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/2
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 2
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 2
INFO     testing         output code: 0
INFO     testing         running test '4' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/4
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/4
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 4
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 4
INFO     testing         output code: 0
INFO     testing         running test '6' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/6
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/6
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 6
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 6
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 6
DEBUG    repair          remove 6 from repair test suite (not instrumented)
INFO     testing         running test '7' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/7
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/7
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 7
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 7
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 7
DEBUG    repair          remove 7 from repair test suite (not instrumented)
INFO     testing         running test '8' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/8
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/8
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 8
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 8
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 8
DEBUG    repair          remove 8 from repair test suite (not instrumented)
INFO     testing         running test '9' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/9
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/9
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 9
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 9
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is executed multiple times by test 9
INFO     testing         running test '10' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/10
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/10
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 10
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 10
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is executed multiple times by test 10
INFO     testing         running test '11' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/11
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/11
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 11
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 11
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is executed multiple times by test 11
INFO     testing         running test '12' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/12
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/12
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 12
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 12
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 12
DEBUG    repair          remove 12 from repair test suite (not instrumented)
INFO     testing         running test '13' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/13
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/13
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 13
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 13
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 13
DEBUG    repair          remove 13 from repair test suite (not instrumented)
INFO     testing         running test '14' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/14
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/14
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 14
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 14
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 14
DEBUG    repair          remove 14 from repair test suite (not instrumented)
INFO     testing         running test '15' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/15
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/15
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 15
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 15
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 15
DEBUG    repair          remove 15 from repair test suite (not instrumented)
INFO     testing         running test '16' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/16
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/16
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 16
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 16
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 16
DEBUG    repair          remove 16 from repair test suite (not instrumented)
INFO     testing         running test '17' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/17
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/17
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 17
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 17
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 17
DEBUG    repair          remove 17 from repair test suite (not instrumented)
INFO     testing         running test '20' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/20
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/20
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 20
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 20
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 20
DEBUG    repair          remove 20 from repair test suite (not instrumented)
INFO     testing         running test '21' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/21
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/21
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 21
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 21
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 21
DEBUG    repair          remove 21 from repair test suite (not instrumented)
INFO     testing         running test '24' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/24
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/24
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 24
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 24
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 24
DEBUG    repair          remove 24 from repair test suite (not instrumented)
INFO     testing         running test '25' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/25
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/25
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 25
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 25
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 25
DEBUG    repair          remove 25 from repair test suite (not instrumented)
INFO     testing         running test '26' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/26
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/26
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 26
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 26
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 26
DEBUG    repair          remove 26 from repair test suite (not instrumented)
INFO     testing         running test '27' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/27
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/27
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 27
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 27
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 27
DEBUG    repair          remove 27 from repair test suite (not instrumented)
INFO     testing         running test '28' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/28
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/28
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 28
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 28
INFO     testing         output code: 0
INFO     testing         running test '39' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/39
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/39
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 39
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 39
INFO     testing         output code: 0
INFO     testing         running test '40' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/40
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/40
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 40
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 40
INFO     testing         output code: 0
INFO     testing         running test '41' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/41
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/41
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 41
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 41
INFO     testing         output code: 0
INFO     testing         running test '43' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/43
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/43
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 43
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 43
INFO     testing         output code: 0
INFO     testing         running test '44' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/44
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/44
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 44
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 44
INFO     testing         output code: 0
INFO     testing         running test '45' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/45
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/45
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 45
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 45
INFO     testing         output code: 0
INFO     testing         running test '46' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/46
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/46
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 46
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 46
INFO     testing         output code: 0
INFO     testing         running test '47' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/47
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/47
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 47
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 47
INFO     testing         output code: 0
INFO     testing         running test '48' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/48
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/48
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 48
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 48
INFO     testing         output code: 0
INFO     testing         running test '49' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/49
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/49
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 49
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 49
INFO     testing         output code: 0
INFO     testing         running test '50' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/50
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/50
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 50
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 50
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 50
DEBUG    repair          remove 50 from repair test suite (not instrumented)
INFO     testing         running test '51' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/51
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/51
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 51
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 51
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 51
DEBUG    repair          remove 51 from repair test suite (not instrumented)
INFO     testing         running test '53' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/53
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/53
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 53
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 53
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 53
DEBUG    repair          remove 53 from repair test suite (not instrumented)
INFO     testing         running test '54' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/54
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/54
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 54
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 54
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 54
DEBUG    repair          remove 54 from repair test suite (not instrumented)
INFO     testing         running test '55' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/55
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/55
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 55
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 55
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 55
DEBUG    repair          remove 55 from repair test suite (not instrumented)
INFO     testing         running test '56' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/56
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/56
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 56
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 56
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 56
DEBUG    repair          remove 56 from repair test suite (not instrumented)
INFO     testing         running test '57' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/57
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/57
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 57
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 57
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 57
DEBUG    repair          remove 57 from repair test suite (not instrumented)
INFO     testing         running test '58' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/58
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/58
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 58
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 58
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 58
DEBUG    repair          remove 58 from repair test suite (not instrumented)
INFO     testing         running test '59' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/59
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/59
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 59
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 59
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 59
DEBUG    repair          remove 59 from repair test suite (not instrumented)
INFO     testing         running test '60' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/60
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/60
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 60
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 60
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 60
DEBUG    repair          remove 60 from repair test suite (not instrumented)
INFO     testing         running test '61' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/61
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/61
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 61
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 61
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 61
DEBUG    repair          remove 61 from repair test suite (not instrumented)
INFO     testing         running test '63' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/63
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/63
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 63
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 63
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 63
DEBUG    repair          remove 63 from repair test suite (not instrumented)
INFO     testing         running test '64' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/64
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/64
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 64
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 64
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 64
DEBUG    repair          remove 64 from repair test suite (not instrumented)
INFO     testing         running test '65' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/65
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/65
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 65
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 65
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 65
DEBUG    repair          remove 65 from repair test suite (not instrumented)
INFO     testing         running test '66' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/66
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/66
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 66
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 66
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 66
DEBUG    repair          remove 66 from repair test suite (not instrumented)
INFO     testing         running test '67' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/67
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/67
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 67
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 67
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 67
DEBUG    repair          remove 67 from repair test suite (not instrumented)
INFO     testing         running test '68' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/68
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/68
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 68
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 68
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 68
DEBUG    repair          remove 68 from repair test suite (not instrumented)
INFO     testing         running test '69' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/69
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/69
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 69
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 69
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 69
DEBUG    repair          remove 69 from repair test suite (not instrumented)
INFO     testing         running test '70' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/70
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/70
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 70
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 70
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 70
DEBUG    repair          remove 70 from repair test suite (not instrumented)
INFO     testing         running test '71' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/71
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/71
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 71
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 71
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 71
DEBUG    repair          remove 71 from repair test suite (not instrumented)
INFO     testing         running test '72' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/72
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/72
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 72
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 72
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 72
DEBUG    repair          remove 72 from repair test suite (not instrumented)
INFO     testing         running test '73' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/73
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/73
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 73
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 73
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 73
DEBUG    repair          remove 73 from repair test suite (not instrumented)
INFO     testing         running test '74' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/74
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/74
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 74
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 74
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 74
DEBUG    repair          remove 74 from repair test suite (not instrumented)
INFO     testing         running test '75' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/75
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/75
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 75
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 75
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 75
DEBUG    repair          remove 75 from repair test suite (not instrumented)
INFO     testing         running test '76' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/76
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/76
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 76
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 76
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 76
DEBUG    repair          remove 76 from repair test suite (not instrumented)
INFO     testing         running test '77' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/77
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/77
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 77
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 77
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 77
DEBUG    repair          remove 77 from repair test suite (not instrumented)
INFO     testing         running test '78' of frontend source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/78
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/78
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 78
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 78
INFO     testing         output code: 0
WARNING  testing         ANGELIX_RUN is not executed by test 78
DEBUG    repair          remove 78 from repair test suite (not instrumented)
INFO     repair          running negative tests for debugging
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_WITH_TRACING: /angelix-experiments/.angelix/trace/22
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     project         configuring golden source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     project         building golden source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     testing         running test '22' of golden source
DEBUG    testing         ANGELIX_WITH_DUMPING: /angelix-experiments/.angelix/dump/22
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/golden
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 0
INFO     repair          repair test suite: ['2', '4', '9', '10', '11', '22', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     repair          validation test suite: ['1', '2', '4', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '20', '21', '22', '24', '25', '26', '27', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '53', '54', '55', '56', '57', '58', '59', '60', '61', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78']
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/1
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/2
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/4
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/6
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/7
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/8
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/9
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/10
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/11
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/12
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/13
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/14
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/15
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/16
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/17
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/20
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/21
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/24
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/25
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/26
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/27
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/28
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/39
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/40
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/41
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/43
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/44
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/45
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/46
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/47
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/48
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/49
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/50
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/51
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/53
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/54
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/55
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/56
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/57
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/58
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/59
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/60
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/61
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/63
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/64
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/65
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/66
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/67
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/68
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/69
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/70
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/71
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/72
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/73
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/74
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/75
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/76
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/77
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/78
DEBUG    runtime         parse /angelix-experiments/.angelix/trace/22
DEBUG    localization    all: {('I', (1037, 6, 1037, 9)), ('I', (756, 6, 756, 14)), ('I', (1015, 6, 1015, 11)), ('L', (1042, 19, 1042, 35)), ('L', (568, 15, 568, 22)), ('I', (1531, 6, 1531, 9)), ('I', (2211, 8, 2211, 21)), ('I', (2173, 7, 2173, 46)), ('I', (718, 7, 718, 16)), ('I', (1431, 9, 1431, 12)), ('I', (571, 11, 571, 25)), ('I', (727, 8, 727, 30)), ('L', (771, 13, 771, 15)), ('I', (1385, 6, 1385, 11)), ('I', (346, 7, 346, 47)), ('L', (2049, 17, 2049, 19)), ('I', (886, 6, 886, 11)), ('I', (706, 7, 706, 12)), ('I', (317, 6, 317, 23)), ('I', (1031, 6, 1031, 11)), ('I', (2065, 7, 2065, 30)), ('I', (1100, 6, 1100, 11)), ('I', (1004, 6, 1004, 11)), ('I', (1414, 9, 1414, 14)), ('I', (703, 7, 703, 12)), ('I', (1390, 6, 1390, 13)), ('I', (1524, 6, 1524, 11)), ('I', (713, 9, 713, 26)), ('L', (1437, 31, 1437, 34))}
DEBUG    localization    lines: None
DEBUG    localization    filtered all: {('I', (1037, 6, 1037, 9)), ('I', (756, 6, 756, 14)), ('I', (1015, 6, 1015, 11)), ('L', (1042, 19, 1042, 35)), ('L', (568, 15, 568, 22)), ('I', (1531, 6, 1531, 9)), ('I', (2211, 8, 2211, 21)), ('I', (2173, 7, 2173, 46)), ('I', (718, 7, 718, 16)), ('I', (1431, 9, 1431, 12)), ('I', (571, 11, 571, 25)), ('I', (727, 8, 727, 30)), ('L', (771, 13, 771, 15)), ('I', (1385, 6, 1385, 11)), ('I', (346, 7, 346, 47)), ('L', (2049, 17, 2049, 19)), ('I', (886, 6, 886, 11)), ('I', (706, 7, 706, 12)), ('I', (317, 6, 317, 23)), ('I', (1031, 6, 1031, 11)), ('I', (2065, 7, 2065, 30)), ('I', (1100, 6, 1100, 11)), ('I', (1004, 6, 1004, 11)), ('I', (1414, 9, 1414, 14)), ('I', (703, 7, 703, 12)), ('I', (1390, 6, 1390, 13)), ('I', (1524, 6, 1524, 11)), ('I', (713, 9, 713, 26)), ('L', (1437, 31, 1437, 34))}
DEBUG    localization    executed_positive: {('I', (1037, 6, 1037, 9)): 16, ('I', (756, 6, 756, 14)): 16, ('I', (1015, 6, 1015, 11)): 8, ('L', (1042, 19, 1042, 35)): 16, ('L', (568, 15, 568, 22)): 16, ('I', (1531, 6, 1531, 9)): 3, ('I', (2211, 8, 2211, 21)): 0, ('I', (2173, 7, 2173, 46)): 16, ('I', (718, 7, 718, 16)): 16, ('I', (1431, 9, 1431, 12)): 16, ('I', (571, 11, 571, 25)): 16, ('I', (727, 8, 727, 30)): 16, ('L', (771, 13, 771, 15)): 16, ('I', (1385, 6, 1385, 11)): 16, ('I', (346, 7, 346, 47)): 16, ('L', (2049, 17, 2049, 19)): 16, ('I', (886, 6, 886, 11)): 8, ('I', (706, 7, 706, 12)): 16, ('I', (317, 6, 317, 23)): 16, ('I', (1031, 6, 1031, 11)): 16, ('I', (2065, 7, 2065, 30)): 14, ('I', (1100, 6, 1100, 11)): 1, ('I', (1004, 6, 1004, 11)): 16, ('I', (1414, 9, 1414, 14)): 16, ('I', (703, 7, 703, 12)): 16, ('I', (1390, 6, 1390, 13)): 16, ('I', (1524, 6, 1524, 11)): 3, ('I', (713, 9, 713, 26)): 16, ('L', (1437, 31, 1437, 34)): 16}
DEBUG    localization    executed_negative: {('I', (1037, 6, 1037, 9)): 1, ('I', (756, 6, 756, 14)): 1, ('I', (1015, 6, 1015, 11)): 1, ('L', (1042, 19, 1042, 35)): 1, ('L', (568, 15, 568, 22)): 1, ('I', (1531, 6, 1531, 9)): 1, ('I', (2211, 8, 2211, 21)): 1, ('I', (2173, 7, 2173, 46)): 1, ('I', (718, 7, 718, 16)): 1, ('I', (1431, 9, 1431, 12)): 1, ('I', (571, 11, 571, 25)): 1, ('I', (727, 8, 727, 30)): 1, ('L', (771, 13, 771, 15)): 1, ('I', (1385, 6, 1385, 11)): 1, ('I', (346, 7, 346, 47)): 1, ('L', (2049, 17, 2049, 19)): 1, ('I', (886, 6, 886, 11)): 1, ('I', (706, 7, 706, 12)): 1, ('I', (317, 6, 317, 23)): 1, ('I', (1031, 6, 1031, 11)): 1, ('I', (2065, 7, 2065, 30)): 1, ('I', (1100, 6, 1100, 11)): 0, ('I', (1004, 6, 1004, 11)): 1, ('I', (1414, 9, 1414, 14)): 1, ('I', (703, 7, 703, 12)): 1, ('I', (1390, 6, 1390, 13)): 1, ('I', (1524, 6, 1524, 11)): 1, ('I', (713, 9, 713, 26)): 1, ('L', (1437, 31, 1437, 34)): 1}
DEBUG    localization    total_passing: 59
DEBUG    localization    total_failing: 1
DEBUG    localization    (loc, score) = (('I', (1037, 6, 1037, 9)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (756, 6, 756, 14)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1015, 6, 1015, 11)), 0.1111111111111111)
DEBUG    localization    (loc, score) = (('L', (1042, 19, 1042, 35)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('L', (568, 15, 568, 22)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1531, 6, 1531, 9)), 0.25)
DEBUG    localization    (loc, score) = (('I', (2211, 8, 2211, 21)), 1.0)
DEBUG    localization    (loc, score) = (('I', (2173, 7, 2173, 46)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (718, 7, 718, 16)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1431, 9, 1431, 12)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (571, 11, 571, 25)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (727, 8, 727, 30)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('L', (771, 13, 771, 15)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1385, 6, 1385, 11)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (346, 7, 346, 47)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('L', (2049, 17, 2049, 19)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (886, 6, 886, 11)), 0.1111111111111111)
DEBUG    localization    (loc, score) = (('I', (706, 7, 706, 12)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (317, 6, 317, 23)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1031, 6, 1031, 11)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (2065, 7, 2065, 30)), 0.06666666666666667)
DEBUG    localization    (loc, score) = (('I', (1100, 6, 1100, 11)), 0.0)
DEBUG    localization    (loc, score) = (('I', (1004, 6, 1004, 11)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1414, 9, 1414, 14)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (703, 7, 703, 12)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1390, 6, 1390, 13)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('I', (1524, 6, 1524, 11)), 0.25)
DEBUG    localization    (loc, score) = (('I', (713, 9, 713, 26)), 0.058823529411764705)
DEBUG    localization    (loc, score) = (('L', (1437, 31, 1437, 34)), 0.058823529411764705)
DEBUG    localization    ranking: [(('I', (2211, 8, 2211, 21)), 1.0), (('I', (1531, 6, 1531, 9)), 0.25), (('I', (1524, 6, 1524, 11)), 0.25), (('I', (1015, 6, 1015, 11)), 0.1111111111111111), (('I', (886, 6, 886, 11)), 0.1111111111111111), (('I', (2065, 7, 2065, 30)), 0.06666666666666667), (('I', (1037, 6, 1037, 9)), 0.058823529411764705), (('I', (756, 6, 756, 14)), 0.058823529411764705), (('L', (1042, 19, 1042, 35)), 0.058823529411764705), (('L', (568, 15, 568, 22)), 0.058823529411764705), (('I', (2173, 7, 2173, 46)), 0.058823529411764705), (('I', (718, 7, 718, 16)), 0.058823529411764705), (('I', (1431, 9, 1431, 12)), 0.058823529411764705), (('I', (571, 11, 571, 25)), 0.058823529411764705), (('I', (727, 8, 727, 30)), 0.058823529411764705), (('L', (771, 13, 771, 15)), 0.058823529411764705), (('I', (1385, 6, 1385, 11)), 0.058823529411764705), (('I', (346, 7, 346, 47)), 0.058823529411764705), (('L', (2049, 17, 2049, 19)), 0.058823529411764705), (('I', (706, 7, 706, 12)), 0.058823529411764705), (('I', (317, 6, 317, 23)), 0.058823529411764705), (('I', (1031, 6, 1031, 11)), 0.058823529411764705), (('I', (1004, 6, 1004, 11)), 0.058823529411764705), (('I', (1414, 9, 1414, 14)), 0.058823529411764705), (('I', (703, 7, 703, 12)), 0.058823529411764705), (('I', (1390, 6, 1390, 13)), 0.058823529411764705), (('I', (713, 9, 713, 26)), 0.058823529411764705), (('L', (1437, 31, 1437, 34)), 0.058823529411764705), (('I', (1100, 6, 1100, 11)), 0.0)]
INFO     localization    (loc, score) = (('I', (2211, 8, 2211, 21)), 1.0)
INFO     localization    (loc, score) = (('I', (1531, 6, 1531, 9)), 0.25)
INFO     localization    (loc, score) = (('I', (1524, 6, 1524, 11)), 0.25)
INFO     localization    (loc, score) = (('I', (1015, 6, 1015, 11)), 0.1111111111111111)
INFO     localization    (loc, score) = (('I', (886, 6, 886, 11)), 0.1111111111111111)
INFO     localization    (loc, score) = (('I', (2065, 7, 2065, 30)), 0.06666666666666667)
INFO     localization    (loc, score) = (('I', (1037, 6, 1037, 9)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (756, 6, 756, 14)), 0.058823529411764705)
INFO     localization    (loc, score) = (('L', (1042, 19, 1042, 35)), 0.058823529411764705)
INFO     localization    (loc, score) = (('L', (568, 15, 568, 22)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (2173, 7, 2173, 46)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (718, 7, 718, 16)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (1431, 9, 1431, 12)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (571, 11, 571, 25)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (727, 8, 727, 30)), 0.058823529411764705)
INFO     localization    (loc, score) = (('L', (771, 13, 771, 15)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (1385, 6, 1385, 11)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (346, 7, 346, 47)), 0.058823529411764705)
INFO     localization    (loc, score) = (('L', (2049, 17, 2049, 19)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (706, 7, 706, 12)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (317, 6, 317, 23)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (1031, 6, 1031, 11)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (1004, 6, 1004, 11)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (1414, 9, 1414, 14)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (703, 7, 703, 12)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (1390, 6, 1390, 13)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (713, 9, 713, 26)), 0.058823529411764705)
INFO     localization    (loc, score) = (('L', (1437, 31, 1437, 34)), 0.058823529411764705)
INFO     localization    (loc, score) = (('I', (1100, 6, 1100, 11)), 0.0)
DEBUG    localization    all_suspicious: True
DEBUG    localization    suspicious: 29
DEBUG    localization    top: [(('I', (317, 6, 317, 23)), 0.058823529411764705), (('I', (346, 7, 346, 47)), 0.058823529411764705), (('L', (568, 15, 568, 22)), 0.058823529411764705), (('I', (571, 11, 571, 25)), 0.058823529411764705), (('I', (703, 7, 703, 12)), 0.058823529411764705), (('I', (706, 7, 706, 12)), 0.058823529411764705), (('I', (713, 9, 713, 26)), 0.058823529411764705), (('I', (718, 7, 718, 16)), 0.058823529411764705), (('I', (727, 8, 727, 30)), 0.058823529411764705), (('I', (756, 6, 756, 14)), 0.058823529411764705), (('L', (771, 13, 771, 15)), 0.058823529411764705), (('I', (886, 6, 886, 11)), 0.1111111111111111), (('I', (1004, 6, 1004, 11)), 0.058823529411764705), (('I', (1015, 6, 1015, 11)), 0.1111111111111111), (('I', (1031, 6, 1031, 11)), 0.058823529411764705), (('I', (1037, 6, 1037, 9)), 0.058823529411764705), (('L', (1042, 19, 1042, 35)), 0.058823529411764705), (('I', (1100, 6, 1100, 11)), 0.0), (('I', (1385, 6, 1385, 11)), 0.058823529411764705), (('I', (1390, 6, 1390, 13)), 0.058823529411764705), (('I', (1414, 9, 1414, 14)), 0.058823529411764705), (('I', (1431, 9, 1431, 12)), 0.058823529411764705), (('L', (1437, 31, 1437, 34)), 0.058823529411764705), (('I', (1524, 6, 1524, 11)), 0.25), (('I', (1531, 6, 1531, 9)), 0.25), (('L', (2049, 17, 2049, 19)), 0.058823529411764705), (('I', (2065, 7, 2065, 30)), 0.06666666666666667), (('I', (2173, 7, 2173, 46)), 0.058823529411764705), (('I', (2211, 8, 2211, 21)), 1.0)]
INFO     localization    group 1: [('I', (2211, 8, 2211, 21))] (1.0)
INFO     localization    group 2: [('I', (1524, 6, 1524, 11))] (0.25)
INFO     localization    group 3: [('I', (1531, 6, 1531, 9))] (0.25)
INFO     localization    group 4: [('I', (886, 6, 886, 11))] (0.1111111111111111)
INFO     localization    group 5: [('I', (1015, 6, 1015, 11))] (0.1111111111111111)
INFO     localization    group 6: [('I', (2065, 7, 2065, 30))] (0.06666666666666667)
INFO     localization    group 7: [('I', (317, 6, 317, 23))] (0.058823529411764705)
INFO     localization    group 8: [('I', (346, 7, 346, 47))] (0.058823529411764705)
INFO     localization    group 9: [('L', (568, 15, 568, 22))] (0.058823529411764705)
INFO     localization    group 10: [('I', (571, 11, 571, 25))] (0.058823529411764705)
INFO     localization    group 11: [('I', (703, 7, 703, 12))] (0.058823529411764705)
INFO     localization    group 12: [('I', (706, 7, 706, 12))] (0.058823529411764705)
INFO     localization    group 13: [('I', (713, 9, 713, 26))] (0.058823529411764705)
INFO     localization    group 14: [('I', (718, 7, 718, 16))] (0.058823529411764705)
INFO     localization    group 15: [('I', (727, 8, 727, 30))] (0.058823529411764705)
INFO     localization    group 16: [('I', (756, 6, 756, 14))] (0.058823529411764705)
INFO     localization    group 17: [('L', (771, 13, 771, 15))] (0.058823529411764705)
INFO     localization    group 18: [('I', (1004, 6, 1004, 11))] (0.058823529411764705)
INFO     localization    group 19: [('I', (1031, 6, 1031, 11))] (0.058823529411764705)
INFO     localization    group 20: [('I', (1037, 6, 1037, 9))] (0.058823529411764705)
INFO     localization    group 21: [('L', (1042, 19, 1042, 35))] (0.058823529411764705)
INFO     localization    group 22: [('I', (1385, 6, 1385, 11))] (0.058823529411764705)
INFO     localization    group 23: [('I', (1390, 6, 1390, 13))] (0.058823529411764705)
INFO     localization    group 24: [('I', (1414, 9, 1414, 14))] (0.058823529411764705)
INFO     localization    group 25: [('I', (1431, 9, 1431, 12))] (0.058823529411764705)
INFO     localization    group 26: [('L', (1437, 31, 1437, 34))] (0.058823529411764705)
INFO     localization    group 27: [('L', (2049, 17, 2049, 19))] (0.058823529411764705)
INFO     localization    group 28: [('I', (2173, 7, 2173, 46))] (0.058823529411764705)
INFO     localization    group 29: [('I', (1100, 6, 1100, 11))] (0.0)
INFO     localization    selected expressions [('I', (2211, 8, 2211, 21))] with group score 1.0 
INFO     localization    selected expressions [('I', (1524, 6, 1524, 11))] with group score 0.25 
INFO     localization    selected expressions [('I', (1531, 6, 1531, 9))] with group score 0.25 
INFO     localization    selected expressions [('I', (886, 6, 886, 11))] with group score 0.11111 
INFO     localization    selected expressions [('I', (1015, 6, 1015, 11))] with group score 0.11111 
INFO     localization    selected expressions [('I', (2065, 7, 2065, 30))] with group score 0.066667 
INFO     localization    selected expressions [('I', (317, 6, 317, 23))] with group score 0.058824 
INFO     localization    selected expressions [('I', (346, 7, 346, 47))] with group score 0.058824 
INFO     localization    selected expressions [('L', (568, 15, 568, 22))] with group score 0.058824 
INFO     localization    selected expressions [('I', (571, 11, 571, 25))] with group score 0.058824 
INFO     localization    selected expressions [('I', (703, 7, 703, 12))] with group score 0.058824 
INFO     localization    selected expressions [('I', (706, 7, 706, 12))] with group score 0.058824 
INFO     localization    selected expressions [('I', (713, 9, 713, 26))] with group score 0.058824 
INFO     localization    selected expressions [('I', (718, 7, 718, 16))] with group score 0.058824 
INFO     localization    selected expressions [('I', (727, 8, 727, 30))] with group score 0.058824 
INFO     localization    selected expressions [('I', (756, 6, 756, 14))] with group score 0.058824 
INFO     localization    selected expressions [('L', (771, 13, 771, 15))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1004, 6, 1004, 11))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1031, 6, 1031, 11))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1037, 6, 1037, 9))] with group score 0.058824 
INFO     localization    selected expressions [('L', (1042, 19, 1042, 35))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1385, 6, 1385, 11))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1390, 6, 1390, 13))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1414, 9, 1414, 14))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1431, 9, 1431, 12))] with group score 0.058824 
INFO     localization    selected expressions [('L', (1437, 31, 1437, 34))] with group score 0.058824 
INFO     localization    selected expressions [('L', (2049, 17, 2049, 19))] with group score 0.058824 
INFO     localization    selected expressions [('I', (2173, 7, 2173, 46))] with group score 0.058824 
INFO     localization    selected expressions [('I', (1100, 6, 1100, 11))] with group score 0.0 
DEBUG    localization    groups: [[('I', (2211, 8, 2211, 21))], [('I', (1524, 6, 1524, 11))], [('I', (1531, 6, 1531, 9))], [('I', (886, 6, 886, 11))], [('I', (1015, 6, 1015, 11))], [('I', (2065, 7, 2065, 30))], [('I', (317, 6, 317, 23))], [('I', (346, 7, 346, 47))], [('L', (568, 15, 568, 22))], [('I', (571, 11, 571, 25))], [('I', (703, 7, 703, 12))], [('I', (706, 7, 706, 12))], [('I', (713, 9, 713, 26))], [('I', (718, 7, 718, 16))], [('I', (727, 8, 727, 30))], [('I', (756, 6, 756, 14))], [('L', (771, 13, 771, 15))], [('I', (1004, 6, 1004, 11))], [('I', (1031, 6, 1031, 11))], [('I', (1037, 6, 1037, 9))], [('L', (1042, 19, 1042, 35))], [('I', (1385, 6, 1385, 11))], [('I', (1390, 6, 1390, 13))], [('I', (1414, 9, 1414, 14))], [('I', (1431, 9, 1431, 12))], [('L', (1437, 31, 1437, 34))], [('L', (2049, 17, 2049, 19))], [('I', (2173, 7, 2173, 46))], [('I', (1100, 6, 1100, 11))]]
INFO     repair          considering suspicious locations [('I', (2211, 8, 2211, 21))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmph111d_17/suspicious
DEBUG    transformation  locations: [('I', (2211, 8, 2211, 21))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmph111d_17/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000001.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000006.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000007.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000008.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000009.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000010.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000011.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000012.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000013.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000014.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000015.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000016.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000017.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000018.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000019.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000020.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000021.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000022.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000023.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000024.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000025.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000026.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000027.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000028.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000029.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000030.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000031.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000032.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000033.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000034.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000035.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000036.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000037.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000038.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000039.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000040.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000041.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000042.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000043.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000044.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000045.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000046.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000047.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000048.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000049.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000050.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000051.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000052.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000053.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000054.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000055.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000056.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000057.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000058.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000059.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000060.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000061.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000062.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000063.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000064.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000065.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000066.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000067.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000068.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000069.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000070.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000071.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000072.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000073.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000074.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000075.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000076.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000077.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000078.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000079.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000080.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000081.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000082.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000083.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000084.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000085.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000086.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000087.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000088.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000089.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000090.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000091.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000092.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000093.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000094.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000095.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000096.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000097.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000098.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000099.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000100.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000101.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000001.smt2
DEBUG    sym_infer       outputs: {}
DEBUG    sym_infer       choices: {(2211, 8, 2211, 21): ('bool', 1, ['m', 'nextdir', 'nextnextdir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 0
ERROR    sym_infer       variable 'flush' has incompatible type None
WARNING  repair          inference failed (error was raised)
INFO     repair          considering suspicious locations [('I', (1524, 6, 1524, 11))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmp7l1kv1e1/suspicious
DEBUG    transformation  locations: [('I', (1524, 6, 1524, 11))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmp7l1kv1e1/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000006.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000007.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000008.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000009.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000010.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000011.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000012.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000013.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000014.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000015.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000016.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000017.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000002.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -130446736}), (True, None, {'dir': 0}), (False, None, {'dir': -130324640}), (True, None, {'dir': 0}), (False, None, {'dir': -130124912})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000003.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -130446736}), (True, None, {'dir': 0}), (False, None, {'dir': -130324640}), (True, None, {'dir': 0}), (True, None, {'dir': -130124912})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000004.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -130446736}), (True, None, {'dir': 0}), (True, None, {'dir': -130324640}), (True, None, {'dir': 0}), (False, None, {'dir': -130195648})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000005.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -130446736}), (True, None, {'dir': 0}), (True, None, {'dir': -130324640}), (True, None, {'dir': 0}), (True, None, {'dir': -130195648})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000006.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -130446736}), (True, None, {'dir': 0}), (False, None, {'dir': -130124912}), (True, None, {'dir': 0}), (False, None, {'dir': -130324640})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000007.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -130446736}), (True, None, {'dir': 0}), (False, None, {'dir': -130124912}), (True, None, {'dir': 0}), (True, None, {'dir': -130324640})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000008.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -130446736}), (True, None, {'dir': 0}), (True, None, {'dir': -130124912}), (True, None, {'dir': 0}), (False, None, {'dir': -130198304})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000009.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -130446736}), (True, None, {'dir': 0}), (True, None, {'dir': -130124912}), (True, None, {'dir': 0}), (True, None, {'dir': -130198304})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000010.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -134899424}), (True, None, {'dir': 0}), (False, None, {'dir': -130297216}), (True, None, {'dir': 0}), (False, None, {'dir': -130040848})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000011.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -134899424}), (True, None, {'dir': 0}), (False, None, {'dir': -130297216}), (True, None, {'dir': 0}), (True, None, {'dir': -130040848})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000012.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -134899424}), (True, None, {'dir': 0}), (True, None, {'dir': -130297216}), (True, None, {'dir': 0}), (False, None, {'dir': -130395552})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000013.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (False, None, {'dir': -134899424}), (True, None, {'dir': 0}), (True, None, {'dir': -130297216}), (True, None, {'dir': 0}), (True, None, {'dir': -130395552})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000014.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -134899424}), (True, None, {'dir': 0}), (False, None, {'dir': -130040848}), (True, None, {'dir': 0}), (False, None, {'dir': -130297216})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000015.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = False
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -134899424}), (True, None, {'dir': 0}), (False, None, {'dir': -130040848}), (True, None, {'dir': 0}), (True, None, {'dir': -130297216})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000016.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -134899424}), (True, None, {'dir': 0}), (True, None, {'dir': -130040848}), (True, None, {'dir': 0}), (False, None, {'dir': -130348336})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000017.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1524, 6, 1524, 11): ('bool', 8, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1524, 6, 1524, 11)[0]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[1]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[2]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[3]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[4]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[5]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[6]: angelic = True
INFO     sym_infer       expression (1524, 6, 1524, 11)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(1524, 6, 1524, 11): [(True, None, {'dir': 0}), (True, None, {'dir': -135194880}), (True, None, {'dir': 0}), (True, None, {'dir': -134899424}), (True, None, {'dir': 0}), (True, None, {'dir': -130040848}), (True, None, {'dir': 0}), (True, None, {'dir': -130348336})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       found 0 angelic paths for test '22'
INFO     repair          considering suspicious locations [('I', (1531, 6, 1531, 9))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmp7brjx8jg/suspicious
DEBUG    transformation  locations: [('I', (1531, 6, 1531, 9))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmp7brjx8jg/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000001.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000001.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1531, 6, 1531, 9): ('bool', 4, ['m', 'n'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1531, 6, 1531, 9)[0]: angelic = False
INFO     sym_infer       expression (1531, 6, 1531, 9)[1]: angelic = False
INFO     sym_infer       expression (1531, 6, 1531, 9)[2]: angelic = False
INFO     sym_infer       expression (1531, 6, 1531, 9)[3]: angelic = False
DEBUG    sym_infer       angelic_path: {(1531, 6, 1531, 9): [(False, None, {'m': 2, 'n': -1505069840}), (False, None, {'m': 16, 'n': -1500499840}), (False, None, {'m': 16, 'n': -1500340224}), (False, None, {'m': 256, 'n': -1500220352})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000002.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1531, 6, 1531, 9): ('bool', 4, ['m', 'n'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000003.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1531, 6, 1531, 9): ('bool', 3, ['m', 'n'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000004.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1531, 6, 1531, 9): ('bool', 2, ['m', 'n'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000005.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1531, 6, 1531, 9): ('bool', 1, ['m', 'n'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       found 0 angelic paths for test '22'
INFO     repair          considering suspicious locations [('I', (886, 6, 886, 11))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmpo38b5vo4/suspicious
DEBUG    transformation  locations: [('I', (886, 6, 886, 11))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmpo38b5vo4/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000006.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000007.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000008.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000009.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000010.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000011.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000012.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000013.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000014.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000015.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000016.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000017.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000018.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000019.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000020.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000021.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000022.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000023.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000024.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000025.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000026.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000027.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000028.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000029.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000030.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000031.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000032.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000033.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000034.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000035.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000036.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000037.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000038.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000039.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000040.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000041.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000042.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000043.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000044.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000045.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000046.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000047.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000048.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000049.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000002.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000003.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000004.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000005.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000006.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000007.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000008.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000009.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000010.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000011.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000012.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000013.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (False, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000014.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000015.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000016.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000017.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604201840}), (True, None, {'dir': -1604201840}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000018.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000019.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000020.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000021.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000022.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000023.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000024.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000025.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000026.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000027.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000028.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000029.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000030.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000031.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000032.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000033.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604635808}), (True, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000034.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000035.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000036.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000037.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000038.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000039.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000040.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000041.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000042.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000043.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000044.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000045.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (False, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000046.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000047.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000048.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = False
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (False, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000049.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(886, 6, 886, 11): ('bool', 32, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (886, 6, 886, 11)[0]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[1]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[2]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[3]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[4]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[5]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[6]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[7]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[8]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[9]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[10]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[11]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[12]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[13]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[14]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[15]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[16]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[17]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[18]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[19]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[20]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[21]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[22]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[23]: angelic = False
INFO     sym_infer       expression (886, 6, 886, 11)[24]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[25]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[26]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[27]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[28]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[29]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[30]: angelic = True
INFO     sym_infer       expression (886, 6, 886, 11)[31]: angelic = True
DEBUG    sym_infer       angelic_path: {(886, 6, 886, 11): [(True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1610382912}), (False, None, {'dir': -1610382912}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605951296}), (False, None, {'dir': -1605951296}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605593168}), (False, None, {'dir': -1605593168}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1605692112}), (False, None, {'dir': -1605692112}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (False, None, {'dir': -1604769344}), (False, None, {'dir': -1604769344}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604635808}), (False, None, {'dir': -1604635808}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1604574016}), (True, None, {'dir': -1604574016}), (True, None, {'dir': 0}), (True, None, {'dir': 0}), (True, None, {'dir': -1605941360}), (True, None, {'dir': -1605941360})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       found 0 angelic paths for test '22'
INFO     repair          considering suspicious locations [('I', (1015, 6, 1015, 11))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmpsf382yt4/suspicious
DEBUG    transformation  locations: [('I', (1015, 6, 1015, 11))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmpsf382yt4/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000006.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000007.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000008.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000009.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000010.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000011.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000012.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000013.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000014.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000015.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000016.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000017.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000018.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000019.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000020.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000021.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000022.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000023.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000024.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000025.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000026.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000027.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000028.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000029.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000030.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000031.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000032.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000033.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000034.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000035.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000036.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000037.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000038.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000039.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000040.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000041.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000042.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000043.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000044.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000045.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000046.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000047.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000048.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000049.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000002.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000003.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000004.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000005.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000006.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (False, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000007.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (False, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000008.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (True, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000009.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (True, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000010.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000011.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000012.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000013.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943056}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000014.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000015.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000016.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000017.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2083223552}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000018.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000019.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000020.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000021.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000022.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000023.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000024.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000025.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (False, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000026.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000027.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000028.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000029.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000030.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000031.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000032.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000033.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (True, None, {'dir': -2088045664}), (True, None, {'dir': 0}), (True, None, {'dir': -2088760080}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082589184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083358816})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000034.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (False, None, {'dir': -2083019824}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000035.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (False, None, {'dir': -2083019824}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000036.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (True, None, {'dir': -2083019824}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000037.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (True, None, {'dir': -2083019824}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000038.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (False, None, {'dir': -2083008464}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000039.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (False, None, {'dir': -2083008464}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000040.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (True, None, {'dir': -2083008464}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000041.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (False, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082982192}), (True, None, {'dir': 0}), (True, None, {'dir': -2083008464}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000042.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (False, None, {'dir': -2083153136}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000043.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (False, None, {'dir': -2083153136}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000044.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (True, None, {'dir': -2083153136}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000045.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (False, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (True, None, {'dir': -2083153136}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000046.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (False, None, {'dir': -2083150640}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000047.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (False, None, {'dir': -2083150640}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000048.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = False
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (True, None, {'dir': -2083150640}), (True, None, {'dir': 0}), (False, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000049.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(1015, 6, 1015, 11): ('bool', 16, ['dir'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (1015, 6, 1015, 11)[0]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[1]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[2]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[3]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[4]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[5]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[6]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[7]: angelic = False
INFO     sym_infer       expression (1015, 6, 1015, 11)[8]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[9]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[10]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[11]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[12]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[13]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[14]: angelic = True
INFO     sym_infer       expression (1015, 6, 1015, 11)[15]: angelic = True
DEBUG    sym_infer       angelic_path: {(1015, 6, 1015, 11): [(True, None, {'dir': 0}), (False, None, {'dir': -2088599920}), (True, None, {'dir': 0}), (False, None, {'dir': -2084277184}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672}), (True, None, {'dir': 0}), (False, None, {'dir': -2082943600}), (True, None, {'dir': 0}), (True, None, {'dir': -2082854992}), (True, None, {'dir': 0}), (True, None, {'dir': -2082935840}), (True, None, {'dir': 0}), (True, None, {'dir': -2083150640}), (True, None, {'dir': 0}), (True, None, {'dir': -2083916672})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       found 0 angelic paths for test '22'
INFO     repair          considering suspicious locations [('I', (2065, 7, 2065, 30))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmpkgu5lok0/suspicious
DEBUG    transformation  locations: [('I', (2065, 7, 2065, 30))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmpkgu5lok0/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000001.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000006.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000007.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000008.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000009.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000010.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000011.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000012.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000013.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000014.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000015.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000016.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000017.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000018.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000019.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000020.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000021.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000022.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000023.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000024.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000025.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000026.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000027.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000028.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000029.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000030.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000031.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000032.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000033.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000034.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000035.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000001.smt2
(error "line 41 column 48: unexpected character")
(error "line 41 column 50: unexpected character")
(error "line 49 column 48: unexpected character")
(error "line 49 column 50: unexpected character")
(error "line 57 column 49: unexpected character")
(error "line 57 column 51: unexpected character")
(error "line 65 column 49: unexpected character")
(error "line 65 column 51: unexpected character")
(error "line 73 column 49: unexpected character")
(error "line 73 column 51: unexpected character")
(error "line 81 column 49: unexpected character")
(error "line 81 column 51: unexpected character")
(error "line 89 column 49: unexpected character")
(error "line 89 column 51: unexpected character")
(error "line 97 column 49: unexpected character")
(error "line 97 column 51: unexpected character")
(error "line 105 column 49: unexpected character")
(error "line 105 column 51: unexpected character")
(error "line 113 column 49: unexpected character")
(error "line 113 column 51: unexpected character")
(error "line 121 column 49: unexpected character")
(error "line 121 column 51: unexpected character")
(error "line 129 column 49: unexpected character")
(error "line 129 column 51: unexpected character")
(error "line 137 column 48: unexpected character")
(error "line 137 column 50: unexpected character")
(error "line 145 column 49: unexpected character")
(error "line 145 column 51: unexpected character")
(error "line 153 column 49: unexpected character")
(error "line 153 column 51: unexpected character")
(error "line 161 column 49: unexpected character")
(error "line 161 column 51: unexpected character")
(error "line 169 column 49: unexpected character")
(error "line 169 column 51: unexpected character")
(error "line 177 column 49: unexpected character")
(error "line 177 column 51: unexpected character")
(error "line 185 column 49: unexpected character")
(error "line 185 column 51: unexpected character")
(error "line 193 column 49: unexpected character")
(error "line 193 column 51: unexpected character")
(error "line 201 column 49: unexpected character")
(error "line 201 column 51: unexpected character")
(error "line 209 column 49: unexpected character")
(error "line 209 column 51: unexpected character")
(error "line 217 column 49: unexpected character")
(error "line 217 column 51: unexpected character")
(error "line 225 column 48: unexpected character")
(error "line 225 column 50: unexpected character")
(error "line 233 column 49: unexpected character")
(error "line 233 column 51: unexpected character")
(error "line 241 column 49: unexpected character")
(error "line 241 column 51: unexpected character")
(error "line 249 column 49: unexpected character")
(error "line 249 column 51: unexpected character")
(error "line 257 column 49: unexpected character")
(error "line 257 column 51: unexpected character")
(error "line 265 column 48: unexpected character")
(error "line 265 column 50: unexpected character")
(error "line 273 column 48: unexpected character")
(error "line 273 column 50: unexpected character")
(error "line 281 column 48: unexpected character")
(error "line 281 column 50: unexpected character")
(error "line 289 column 48: unexpected character")
(error "line 289 column 50: unexpected character")
(error "line 297 column 48: unexpected character")
(error "line 297 column 50: unexpected character")
(error "line 305 column 48: unexpected character")
(error "line 305 column 50: unexpected character")
(error "line 835 column 1532: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 835 column 1567: unexpected character")
(error "line 835 column 1569: unexpected character")
(error "line 840 column 1575: unexpected character")
(error "line 840 column 1577: unexpected character")
(error "line 845 column 1583: unexpected character")
(error "line 845 column 1585: unexpected character")
(error "line 849 column 1583: unexpected character")
(error "line 849 column 1585: unexpected character")
(error "line 1069 column 1522: unexpected character")
(error "line 1069 column 1524: unexpected character")
(error "line 1074 column 1530: unexpected character")
(error "line 1074 column 1532: unexpected character")
(error "line 1079 column 1538: unexpected character")
(error "line 1079 column 1540: unexpected character")
(error "line 1083 column 1538: unexpected character")
(error "line 1083 column 1540: unexpected character")
(error "line 1303 column 1477: unexpected character")
(error "line 1303 column 1479: unexpected character")
(error "line 1308 column 1485: unexpected character")
(error "line 1308 column 1487: unexpected character")
(error "line 1313 column 1493: unexpected character")
(error "line 1313 column 1495: unexpected character")
(error "line 1317 column 1493: unexpected character")
(error "line 1317 column 1495: unexpected character")
(error "line 1537 column 1432: unexpected character")
(error "line 1537 column 1434: unexpected character")
(error "line 1542 column 1440: unexpected character")
(error "line 1542 column 1442: unexpected character")
(error "line 1547 column 1448: unexpected character")
(error "line 1547 column 1450: unexpected character")
(error "line 1551 column 1448: unexpected character")
(error "line 1551 column 1450: unexpected character")
(error "line 1771 column 1387: unexpected character")
(error "line 1771 column 1389: unexpected character")
(error "line 1776 column 1395: unexpected character")
(error "line 1776 column 1397: unexpected character")
(error "line 1781 column 1403: unexpected character")
(error "line 1781 column 1405: unexpected character")
(error "line 1785 column 1403: unexpected character")
(error "line 1785 column 1405: unexpected character")
(error "line 2005 column 1342: unexpected character")
(error "line 2005 column 1344: unexpected character")
(error "line 2010 column 1350: unexpected character")
(error "line 2010 column 1352: unexpected character")
(error "line 2015 column 1358: unexpected character")
(error "line 2015 column 1360: unexpected character")
(error "line 2019 column 1358: unexpected character")
(error "line 2019 column 1360: unexpected character")
(error "line 2239 column 1297: unexpected character")
(error "line 2239 column 1299: unexpected character")
(error "line 2244 column 1305: unexpected character")
(error "line 2244 column 1307: unexpected character")
(error "line 2249 column 1313: unexpected character")
(error "line 2249 column 1315: unexpected character")
(error "line 2253 column 1313: unexpected character")
(error "line 2253 column 1315: unexpected character")
(error "line 2473 column 1252: unexpected character")
(error "line 2473 column 1254: unexpected character")
(error "line 2478 column 1260: unexpected character")
(error "line 2478 column 1262: unexpected character")
(error "line 2483 column 1268: unexpected character")
(error "line 2483 column 1270: unexpected character")
(error "line 2487 column 1268: unexpected character")
(error "line 2487 column 1270: unexpected character")
(error "line 2733 column 1202: unexpected character")
(error "line 2733 column 1204: unexpected character")
(error "line 2738 column 1210: unexpected character")
(error "line 2738 column 1212: unexpected character")
(error "line 2743 column 1218: unexpected character")
(error "line 2743 column 1220: unexpected character")
(error "line 2747 column 1218: unexpected character")
(error "line 2747 column 1220: unexpected character")
(error "line 2967 column 1157: unexpected character")
(error "line 2967 column 1159: unexpected character")
(error "line 2972 column 1165: unexpected character")
(error "line 2972 column 1167: unexpected character")
(error "line 2977 column 1173: unexpected character")
(error "line 2977 column 1175: unexpected character")
(error "line 2981 column 1173: unexpected character")
(error "line 2981 column 1175: unexpected character")
(error "line 3227 column 1108: unexpected character")
(error "line 3227 column 1110: unexpected character")
(error "line 3232 column 1116: unexpected character")
(error "line 3232 column 1118: unexpected character")
(error "line 3237 column 1124: unexpected character")
(error "line 3237 column 1126: unexpected character")
(error "line 3241 column 1124: unexpected character")
(error "line 3241 column 1126: unexpected character")
(error "line 3461 column 1063: unexpected character")
(error "line 3461 column 1065: unexpected character")
(error "line 3466 column 1071: unexpected character")
(error "line 3466 column 1073: unexpected character")
(error "line 3471 column 1079: unexpected character")
(error "line 3471 column 1081: unexpected character")
(error "line 3475 column 1079: unexpected character")
(error "line 3475 column 1081: unexpected character")
(error "line 3695 column 1018: unexpected character")
(error "line 3695 column 1020: unexpected character")
(error "line 3700 column 1026: unexpected character")
(error "line 3700 column 1028: unexpected character")
(error "line 3705 column 1034: unexpected character")
(error "line 3705 column 1036: unexpected character")
(error "line 3709 column 1034: unexpected character")
(error "line 3709 column 1036: unexpected character")
(error "line 3929 column 973: unexpected character")
(error "line 3929 column 975: unexpected character")
(error "line 3934 column 981: unexpected character")
(error "line 3934 column 983: unexpected character")
(error "line 3939 column 989: unexpected character")
(error "line 3939 column 991: unexpected character")
(error "line 3943 column 989: unexpected character")
(error "line 3943 column 991: unexpected character")
(error "line 4163 column 928: unexpected character")
(error "line 4163 column 930: unexpected character")
(error "line 4168 column 936: unexpected character")
(error "line 4168 column 938: unexpected character")
(error "line 4173 column 944: unexpected character")
(error "line 4173 column 946: unexpected character")
(error "line 4177 column 944: unexpected character")
(error "line 4177 column 946: unexpected character")
(error "line 4397 column 883: unexpected character")
(error "line 4397 column 885: unexpected character")
(error "line 4402 column 891: unexpected character")
(error "line 4402 column 893: unexpected character")
(error "line 4407 column 899: unexpected character")
(error "line 4407 column 901: unexpected character")
(error "line 4411 column 899: unexpected character")
(error "line 4411 column 901: unexpected character")
(error "line 4631 column 838: unexpected character")
(error "line 4631 column 840: unexpected character")
(error "line 4636 column 846: unexpected character")
(error "line 4636 column 848: unexpected character")
(error "line 4641 column 854: unexpected character")
(error "line 4641 column 856: unexpected character")
(error "line 4645 column 854: unexpected character")
(error "line 4645 column 856: unexpected character")
(error "line 4865 column 793: unexpected character")
(error "line 4865 column 795: unexpected character")
(error "line 4870 column 801: unexpected character")
(error "line 4870 column 803: unexpected character")
(error "line 4875 column 809: unexpected character")
(error "line 4875 column 811: unexpected character")
(error "line 4879 column 809: unexpected character")
(error "line 4879 column 811: unexpected character")
(error "line 5099 column 748: unexpected character")
(error "line 5099 column 750: unexpected character")
(error "line 5104 column 756: unexpected character")
(error "line 5104 column 758: unexpected character")
(error "line 5109 column 764: unexpected character")
(error "line 5109 column 766: unexpected character")
(error "line 5113 column 764: unexpected character")
(error "line 5113 column 766: unexpected character")
(error "line 5333 column 703: unexpected character")
(error "line 5333 column 705: unexpected character")
(error "line 5338 column 711: unexpected character")
(error "line 5338 column 713: unexpected character")
(error "line 5343 column 719: unexpected character")
(error "line 5343 column 721: unexpected character")
(error "line 5347 column 719: unexpected character")
(error "line 5347 column 721: unexpected character")
(error "line 5567 column 658: unexpected character")
(error "line 5567 column 660: unexpected character")
(error "line 5572 column 666: unexpected character")
(error "line 5572 column 668: unexpected character")
(error "line 5577 column 674: unexpected character")
(error "line 5577 column 676: unexpected character")
(error "line 5581 column 674: unexpected character")
(error "line 5581 column 676: unexpected character")
(error "line 5801 column 613: unexpected character")
(error "line 5801 column 615: unexpected character")
(error "line 5806 column 621: unexpected character")
(error "line 5806 column 623: unexpected character")
(error "line 5811 column 629: unexpected character")
(error "line 5811 column 631: unexpected character")
(error "line 5815 column 629: unexpected character")
(error "line 5815 column 631: unexpected character")
(error "line 6035 column 568: unexpected character")
(error "line 6035 column 570: unexpected character")
(error "line 6040 column 576: unexpected character")
(error "line 6040 column 578: unexpected character")
(error "line 6045 column 584: unexpected character")
(error "line 6045 column 586: unexpected character")
(error "line 6049 column 584: unexpected character")
(error "line 6049 column 586: unexpected character")
(error "line 6269 column 523: unexpected character")
(error "line 6269 column 525: unexpected character")
(error "line 6274 column 531: unexpected character")
(error "line 6274 column 533: unexpected character")
(error "line 6279 column 539: unexpected character")
(error "line 6279 column 541: unexpected character")
(error "line 6283 column 539: unexpected character")
(error "line 6283 column 541: unexpected character")
(error "line 6503 column 478: unexpected character")
(error "line 6503 column 480: unexpected character")
(error "line 6508 column 486: unexpected character")
(error "line 6508 column 488: unexpected character")
(error "line 6513 column 494: unexpected character")
(error "line 6513 column 496: unexpected character")
(error "line 6517 column 494: unexpected character")
(error "line 6517 column 496: unexpected character")
(error "line 6737 column 433: unexpected character")
(error "line 6737 column 435: unexpected character")
(error "line 6742 column 441: unexpected character")
(error "line 6742 column 443: unexpected character")
(error "line 6747 column 449: unexpected character")
(error "line 6747 column 451: unexpected character")
(error "line 6751 column 449: unexpected character")
(error "line 6751 column 451: unexpected character")
(error "line 6971 column 388: unexpected character")
(error "line 6971 column 390: unexpected character")
(error "line 6976 column 396: unexpected character")
(error "line 6976 column 398: unexpected character")
(error "line 6981 column 404: unexpected character")
(error "line 6981 column 406: unexpected character")
(error "line 6985 column 404: unexpected character")
(error "line 6985 column 406: unexpected character")
(error "line 7205 column 343: unexpected character")
(error "line 7205 column 345: unexpected character")
(error "line 7210 column 351: unexpected character")
(error "line 7210 column 353: unexpected character")
(error "line 7215 column 359: unexpected character")
(error "line 7215 column 361: unexpected character")
(error "line 7219 column 359: unexpected character")
(error "line 7219 column 361: unexpected character")
(error "line 7439 column 298: unexpected character")
(error "line 7439 column 300: unexpected character")
(error "line 7444 column 306: unexpected character")
(error "line 7444 column 308: unexpected character")
(error "line 7449 column 314: unexpected character")
(error "line 7449 column 316: unexpected character")
(error "line 7453 column 314: unexpected character")
(error "line 7453 column 316: unexpected character")
(error "line 7673 column 253: unexpected character")
(error "line 7673 column 255: unexpected character")
(error "line 7678 column 261: unexpected character")
(error "line 7678 column 263: unexpected character")
(error "line 7683 column 269: unexpected character")
(error "line 7683 column 271: unexpected character")
(error "line 7687 column 269: unexpected character")
(error "line 7687 column 271: unexpected character")
(error "line 7907 column 208: unexpected character")
(error "line 7907 column 210: unexpected character")
(error "line 7912 column 216: unexpected character")
(error "line 7912 column 218: unexpected character")
(error "line 7917 column 224: unexpected character")
(error "line 7917 column 226: unexpected character")
(error "line 7921 column 224: unexpected character")
(error "line 7921 column 226: unexpected character")
(error "line 8141 column 163: unexpected character")
(error "line 8141 column 165: unexpected character")
(error "line 8146 column 171: unexpected character")
(error "line 8146 column 173: unexpected character")
(error "line 8151 column 179: unexpected character")
(error "line 8151 column 181: unexpected character")
(error "line 8155 column 179: unexpected character")
(error "line 8155 column 181: unexpected character")
(error "line 8375 column 118: unexpected character")
(error "line 8375 column 120: unexpected character")
(error "line 8380 column 126: unexpected character")
(error "line 8380 column 128: unexpected character")
(error "line 8385 column 134: unexpected character")
(error "line 8385 column 136: unexpected character")
(error "line 8389 column 134: unexpected character")
(error "line 8389 column 136: unexpected character")
(error "line 8609 column 73: unexpected character")
(error "line 8609 column 75: unexpected character")
(error "line 8614 column 81: unexpected character")
(error "line 8614 column 83: unexpected character")
(error "line 8619 column 89: unexpected character")
(error "line 8619 column 91: unexpected character")
(error "line 8623 column 89: unexpected character")
(error "line 8623 column 91: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000002.smt2
(error "line 41 column 48: unexpected character")
(error "line 41 column 50: unexpected character")
(error "line 49 column 48: unexpected character")
(error "line 49 column 50: unexpected character")
(error "line 57 column 49: unexpected character")
(error "line 57 column 51: unexpected character")
(error "line 65 column 49: unexpected character")
(error "line 65 column 51: unexpected character")
(error "line 73 column 49: unexpected character")
(error "line 73 column 51: unexpected character")
(error "line 81 column 49: unexpected character")
(error "line 81 column 51: unexpected character")
(error "line 89 column 49: unexpected character")
(error "line 89 column 51: unexpected character")
(error "line 97 column 49: unexpected character")
(error "line 97 column 51: unexpected character")
(error "line 105 column 49: unexpected character")
(error "line 105 column 51: unexpected character")
(error "line 113 column 49: unexpected character")
(error "line 113 column 51: unexpected character")
(error "line 121 column 49: unexpected character")
(error "line 121 column 51: unexpected character")
(error "line 129 column 49: unexpected character")
(error "line 129 column 51: unexpected character")
(error "line 137 column 48: unexpected character")
(error "line 137 column 50: unexpected character")
(error "line 145 column 49: unexpected character")
(error "line 145 column 51: unexpected character")
(error "line 153 column 49: unexpected character")
(error "line 153 column 51: unexpected character")
(error "line 161 column 49: unexpected character")
(error "line 161 column 51: unexpected character")
(error "line 169 column 49: unexpected character")
(error "line 169 column 51: unexpected character")
(error "line 177 column 49: unexpected character")
(error "line 177 column 51: unexpected character")
(error "line 185 column 49: unexpected character")
(error "line 185 column 51: unexpected character")
(error "line 193 column 49: unexpected character")
(error "line 193 column 51: unexpected character")
(error "line 201 column 49: unexpected character")
(error "line 201 column 51: unexpected character")
(error "line 209 column 49: unexpected character")
(error "line 209 column 51: unexpected character")
(error "line 217 column 49: unexpected character")
(error "line 217 column 51: unexpected character")
(error "line 225 column 48: unexpected character")
(error "line 225 column 50: unexpected character")
(error "line 233 column 49: unexpected character")
(error "line 233 column 51: unexpected character")
(error "line 241 column 49: unexpected character")
(error "line 241 column 51: unexpected character")
(error "line 249 column 49: unexpected character")
(error "line 249 column 51: unexpected character")
(error "line 257 column 49: unexpected character")
(error "line 257 column 51: unexpected character")
(error "line 265 column 48: unexpected character")
(error "line 265 column 50: unexpected character")
(error "line 273 column 48: unexpected character")
(error "line 273 column 50: unexpected character")
(error "line 281 column 48: unexpected character")
(error "line 281 column 50: unexpected character")
(error "line 289 column 48: unexpected character")
(error "line 289 column 50: unexpected character")
(error "line 297 column 48: unexpected character")
(error "line 297 column 50: unexpected character")
(error "line 305 column 48: unexpected character")
(error "line 305 column 50: unexpected character")
(error "line 837 column 1537: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 837 column 1572: unexpected character")
(error "line 837 column 1574: unexpected character")
(error "line 842 column 1580: unexpected character")
(error "line 842 column 1582: unexpected character")
(error "line 847 column 1588: unexpected character")
(error "line 847 column 1590: unexpected character")
(error "line 851 column 1588: unexpected character")
(error "line 851 column 1590: unexpected character")
(error "line 1071 column 1527: unexpected character")
(error "line 1071 column 1529: unexpected character")
(error "line 1076 column 1535: unexpected character")
(error "line 1076 column 1537: unexpected character")
(error "line 1081 column 1543: unexpected character")
(error "line 1081 column 1545: unexpected character")
(error "line 1085 column 1543: unexpected character")
(error "line 1085 column 1545: unexpected character")
(error "line 1305 column 1482: unexpected character")
(error "line 1305 column 1484: unexpected character")
(error "line 1310 column 1490: unexpected character")
(error "line 1310 column 1492: unexpected character")
(error "line 1315 column 1498: unexpected character")
(error "line 1315 column 1500: unexpected character")
(error "line 1319 column 1498: unexpected character")
(error "line 1319 column 1500: unexpected character")
(error "line 1539 column 1437: unexpected character")
(error "line 1539 column 1439: unexpected character")
(error "line 1544 column 1445: unexpected character")
(error "line 1544 column 1447: unexpected character")
(error "line 1549 column 1453: unexpected character")
(error "line 1549 column 1455: unexpected character")
(error "line 1553 column 1453: unexpected character")
(error "line 1553 column 1455: unexpected character")
(error "line 1773 column 1392: unexpected character")
(error "line 1773 column 1394: unexpected character")
(error "line 1778 column 1400: unexpected character")
(error "line 1778 column 1402: unexpected character")
(error "line 1783 column 1408: unexpected character")
(error "line 1783 column 1410: unexpected character")
(error "line 1787 column 1408: unexpected character")
(error "line 1787 column 1410: unexpected character")
(error "line 2007 column 1347: unexpected character")
(error "line 2007 column 1349: unexpected character")
(error "line 2012 column 1355: unexpected character")
(error "line 2012 column 1357: unexpected character")
(error "line 2017 column 1363: unexpected character")
(error "line 2017 column 1365: unexpected character")
(error "line 2021 column 1363: unexpected character")
(error "line 2021 column 1365: unexpected character")
(error "line 2241 column 1302: unexpected character")
(error "line 2241 column 1304: unexpected character")
(error "line 2246 column 1310: unexpected character")
(error "line 2246 column 1312: unexpected character")
(error "line 2251 column 1318: unexpected character")
(error "line 2251 column 1320: unexpected character")
(error "line 2255 column 1318: unexpected character")
(error "line 2255 column 1320: unexpected character")
(error "line 2475 column 1257: unexpected character")
(error "line 2475 column 1259: unexpected character")
(error "line 2480 column 1265: unexpected character")
(error "line 2480 column 1267: unexpected character")
(error "line 2485 column 1273: unexpected character")
(error "line 2485 column 1275: unexpected character")
(error "line 2489 column 1273: unexpected character")
(error "line 2489 column 1275: unexpected character")
(error "line 2735 column 1207: unexpected character")
(error "line 2735 column 1209: unexpected character")
(error "line 2740 column 1215: unexpected character")
(error "line 2740 column 1217: unexpected character")
(error "line 2745 column 1223: unexpected character")
(error "line 2745 column 1225: unexpected character")
(error "line 2749 column 1223: unexpected character")
(error "line 2749 column 1225: unexpected character")
(error "line 2969 column 1162: unexpected character")
(error "line 2969 column 1164: unexpected character")
(error "line 2974 column 1170: unexpected character")
(error "line 2974 column 1172: unexpected character")
(error "line 2979 column 1178: unexpected character")
(error "line 2979 column 1180: unexpected character")
(error "line 2983 column 1178: unexpected character")
(error "line 2983 column 1180: unexpected character")
(error "line 3229 column 1113: unexpected character")
(error "line 3229 column 1115: unexpected character")
(error "line 3234 column 1121: unexpected character")
(error "line 3234 column 1123: unexpected character")
(error "line 3239 column 1129: unexpected character")
(error "line 3239 column 1131: unexpected character")
(error "line 3243 column 1129: unexpected character")
(error "line 3243 column 1131: unexpected character")
(error "line 3463 column 1068: unexpected character")
(error "line 3463 column 1070: unexpected character")
(error "line 3468 column 1076: unexpected character")
(error "line 3468 column 1078: unexpected character")
(error "line 3473 column 1084: unexpected character")
(error "line 3473 column 1086: unexpected character")
(error "line 3477 column 1084: unexpected character")
(error "line 3477 column 1086: unexpected character")
(error "line 3697 column 1023: unexpected character")
(error "line 3697 column 1025: unexpected character")
(error "line 3702 column 1031: unexpected character")
(error "line 3702 column 1033: unexpected character")
(error "line 3707 column 1039: unexpected character")
(error "line 3707 column 1041: unexpected character")
(error "line 3711 column 1039: unexpected character")
(error "line 3711 column 1041: unexpected character")
(error "line 3931 column 978: unexpected character")
(error "line 3931 column 980: unexpected character")
(error "line 3936 column 986: unexpected character")
(error "line 3936 column 988: unexpected character")
(error "line 3941 column 994: unexpected character")
(error "line 3941 column 996: unexpected character")
(error "line 3945 column 994: unexpected character")
(error "line 3945 column 996: unexpected character")
(error "line 4165 column 933: unexpected character")
(error "line 4165 column 935: unexpected character")
(error "line 4170 column 941: unexpected character")
(error "line 4170 column 943: unexpected character")
(error "line 4175 column 949: unexpected character")
(error "line 4175 column 951: unexpected character")
(error "line 4179 column 949: unexpected character")
(error "line 4179 column 951: unexpected character")
(error "line 4399 column 888: unexpected character")
(error "line 4399 column 890: unexpected character")
(error "line 4404 column 896: unexpected character")
(error "line 4404 column 898: unexpected character")
(error "line 4409 column 904: unexpected character")
(error "line 4409 column 906: unexpected character")
(error "line 4413 column 904: unexpected character")
(error "line 4413 column 906: unexpected character")
(error "line 4633 column 843: unexpected character")
(error "line 4633 column 845: unexpected character")
(error "line 4638 column 851: unexpected character")
(error "line 4638 column 853: unexpected character")
(error "line 4643 column 859: unexpected character")
(error "line 4643 column 861: unexpected character")
(error "line 4647 column 859: unexpected character")
(error "line 4647 column 861: unexpected character")
(error "line 4867 column 798: unexpected character")
(error "line 4867 column 800: unexpected character")
(error "line 4872 column 806: unexpected character")
(error "line 4872 column 808: unexpected character")
(error "line 4877 column 814: unexpected character")
(error "line 4877 column 816: unexpected character")
(error "line 4881 column 814: unexpected character")
(error "line 4881 column 816: unexpected character")
(error "line 5101 column 753: unexpected character")
(error "line 5101 column 755: unexpected character")
(error "line 5106 column 761: unexpected character")
(error "line 5106 column 763: unexpected character")
(error "line 5111 column 769: unexpected character")
(error "line 5111 column 771: unexpected character")
(error "line 5115 column 769: unexpected character")
(error "line 5115 column 771: unexpected character")
(error "line 5335 column 708: unexpected character")
(error "line 5335 column 710: unexpected character")
(error "line 5340 column 716: unexpected character")
(error "line 5340 column 718: unexpected character")
(error "line 5345 column 724: unexpected character")
(error "line 5345 column 726: unexpected character")
(error "line 5349 column 724: unexpected character")
(error "line 5349 column 726: unexpected character")
(error "line 5569 column 663: unexpected character")
(error "line 5569 column 665: unexpected character")
(error "line 5574 column 671: unexpected character")
(error "line 5574 column 673: unexpected character")
(error "line 5579 column 679: unexpected character")
(error "line 5579 column 681: unexpected character")
(error "line 5583 column 679: unexpected character")
(error "line 5583 column 681: unexpected character")
(error "line 5803 column 618: unexpected character")
(error "line 5803 column 620: unexpected character")
(error "line 5808 column 626: unexpected character")
(error "line 5808 column 628: unexpected character")
(error "line 5813 column 634: unexpected character")
(error "line 5813 column 636: unexpected character")
(error "line 5817 column 634: unexpected character")
(error "line 5817 column 636: unexpected character")
(error "line 6037 column 573: unexpected character")
(error "line 6037 column 575: unexpected character")
(error "line 6042 column 581: unexpected character")
(error "line 6042 column 583: unexpected character")
(error "line 6047 column 589: unexpected character")
(error "line 6047 column 591: unexpected character")
(error "line 6051 column 589: unexpected character")
(error "line 6051 column 591: unexpected character")
(error "line 6271 column 528: unexpected character")
(error "line 6271 column 530: unexpected character")
(error "line 6276 column 536: unexpected character")
(error "line 6276 column 538: unexpected character")
(error "line 6281 column 544: unexpected character")
(error "line 6281 column 546: unexpected character")
(error "line 6285 column 544: unexpected character")
(error "line 6285 column 546: unexpected character")
(error "line 6505 column 483: unexpected character")
(error "line 6505 column 485: unexpected character")
(error "line 6510 column 491: unexpected character")
(error "line 6510 column 493: unexpected character")
(error "line 6515 column 499: unexpected character")
(error "line 6515 column 501: unexpected character")
(error "line 6519 column 499: unexpected character")
(error "line 6519 column 501: unexpected character")
(error "line 6739 column 438: unexpected character")
(error "line 6739 column 440: unexpected character")
(error "line 6744 column 446: unexpected character")
(error "line 6744 column 448: unexpected character")
(error "line 6749 column 454: unexpected character")
(error "line 6749 column 456: unexpected character")
(error "line 6753 column 454: unexpected character")
(error "line 6753 column 456: unexpected character")
(error "line 6973 column 393: unexpected character")
(error "line 6973 column 395: unexpected character")
(error "line 6978 column 401: unexpected character")
(error "line 6978 column 403: unexpected character")
(error "line 6983 column 409: unexpected character")
(error "line 6983 column 411: unexpected character")
(error "line 6987 column 409: unexpected character")
(error "line 6987 column 411: unexpected character")
(error "line 7207 column 348: unexpected character")
(error "line 7207 column 350: unexpected character")
(error "line 7212 column 356: unexpected character")
(error "line 7212 column 358: unexpected character")
(error "line 7217 column 364: unexpected character")
(error "line 7217 column 366: unexpected character")
(error "line 7221 column 364: unexpected character")
(error "line 7221 column 366: unexpected character")
(error "line 7441 column 303: unexpected character")
(error "line 7441 column 305: unexpected character")
(error "line 7446 column 311: unexpected character")
(error "line 7446 column 313: unexpected character")
(error "line 7451 column 319: unexpected character")
(error "line 7451 column 321: unexpected character")
(error "line 7455 column 319: unexpected character")
(error "line 7455 column 321: unexpected character")
(error "line 7675 column 258: unexpected character")
(error "line 7675 column 260: unexpected character")
(error "line 7680 column 266: unexpected character")
(error "line 7680 column 268: unexpected character")
(error "line 7685 column 274: unexpected character")
(error "line 7685 column 276: unexpected character")
(error "line 7689 column 274: unexpected character")
(error "line 7689 column 276: unexpected character")
(error "line 7909 column 213: unexpected character")
(error "line 7909 column 215: unexpected character")
(error "line 7914 column 221: unexpected character")
(error "line 7914 column 223: unexpected character")
(error "line 7919 column 229: unexpected character")
(error "line 7919 column 231: unexpected character")
(error "line 7923 column 229: unexpected character")
(error "line 7923 column 231: unexpected character")
(error "line 8143 column 168: unexpected character")
(error "line 8143 column 170: unexpected character")
(error "line 8148 column 176: unexpected character")
(error "line 8148 column 178: unexpected character")
(error "line 8153 column 184: unexpected character")
(error "line 8153 column 186: unexpected character")
(error "line 8157 column 184: unexpected character")
(error "line 8157 column 186: unexpected character")
(error "line 8377 column 123: unexpected character")
(error "line 8377 column 125: unexpected character")
(error "line 8382 column 131: unexpected character")
(error "line 8382 column 133: unexpected character")
(error "line 8387 column 139: unexpected character")
(error "line 8387 column 141: unexpected character")
(error "line 8391 column 139: unexpected character")
(error "line 8391 column 141: unexpected character")
(error "line 8611 column 78: unexpected character")
(error "line 8611 column 80: unexpected character")
(error "line 8616 column 86: unexpected character")
(error "line 8616 column 88: unexpected character")
(error "line 8621 column 94: unexpected character")
(error "line 8621 column 96: unexpected character")
(error "line 8625 column 94: unexpected character")
(error "line 8625 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000003.smt2
(error "line 40 column 48: unexpected character")
(error "line 40 column 50: unexpected character")
(error "line 48 column 48: unexpected character")
(error "line 48 column 50: unexpected character")
(error "line 56 column 49: unexpected character")
(error "line 56 column 51: unexpected character")
(error "line 64 column 49: unexpected character")
(error "line 64 column 51: unexpected character")
(error "line 72 column 49: unexpected character")
(error "line 72 column 51: unexpected character")
(error "line 80 column 49: unexpected character")
(error "line 80 column 51: unexpected character")
(error "line 88 column 49: unexpected character")
(error "line 88 column 51: unexpected character")
(error "line 96 column 49: unexpected character")
(error "line 96 column 51: unexpected character")
(error "line 104 column 49: unexpected character")
(error "line 104 column 51: unexpected character")
(error "line 112 column 49: unexpected character")
(error "line 112 column 51: unexpected character")
(error "line 120 column 49: unexpected character")
(error "line 120 column 51: unexpected character")
(error "line 128 column 49: unexpected character")
(error "line 128 column 51: unexpected character")
(error "line 136 column 48: unexpected character")
(error "line 136 column 50: unexpected character")
(error "line 144 column 49: unexpected character")
(error "line 144 column 51: unexpected character")
(error "line 152 column 49: unexpected character")
(error "line 152 column 51: unexpected character")
(error "line 160 column 49: unexpected character")
(error "line 160 column 51: unexpected character")
(error "line 168 column 49: unexpected character")
(error "line 168 column 51: unexpected character")
(error "line 176 column 49: unexpected character")
(error "line 176 column 51: unexpected character")
(error "line 184 column 49: unexpected character")
(error "line 184 column 51: unexpected character")
(error "line 192 column 49: unexpected character")
(error "line 192 column 51: unexpected character")
(error "line 200 column 49: unexpected character")
(error "line 200 column 51: unexpected character")
(error "line 208 column 49: unexpected character")
(error "line 208 column 51: unexpected character")
(error "line 216 column 49: unexpected character")
(error "line 216 column 51: unexpected character")
(error "line 224 column 48: unexpected character")
(error "line 224 column 50: unexpected character")
(error "line 232 column 49: unexpected character")
(error "line 232 column 51: unexpected character")
(error "line 240 column 49: unexpected character")
(error "line 240 column 51: unexpected character")
(error "line 248 column 49: unexpected character")
(error "line 248 column 51: unexpected character")
(error "line 256 column 48: unexpected character")
(error "line 256 column 50: unexpected character")
(error "line 264 column 48: unexpected character")
(error "line 264 column 50: unexpected character")
(error "line 272 column 48: unexpected character")
(error "line 272 column 50: unexpected character")
(error "line 280 column 48: unexpected character")
(error "line 280 column 50: unexpected character")
(error "line 288 column 48: unexpected character")
(error "line 288 column 50: unexpected character")
(error "line 296 column 48: unexpected character")
(error "line 296 column 50: unexpected character")
(error "line 819 column 1492: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 819 column 1527: unexpected character")
(error "line 819 column 1529: unexpected character")
(error "line 824 column 1535: unexpected character")
(error "line 824 column 1537: unexpected character")
(error "line 829 column 1543: unexpected character")
(error "line 829 column 1545: unexpected character")
(error "line 833 column 1543: unexpected character")
(error "line 833 column 1545: unexpected character")
(error "line 1053 column 1482: unexpected character")
(error "line 1053 column 1484: unexpected character")
(error "line 1058 column 1490: unexpected character")
(error "line 1058 column 1492: unexpected character")
(error "line 1063 column 1498: unexpected character")
(error "line 1063 column 1500: unexpected character")
(error "line 1067 column 1498: unexpected character")
(error "line 1067 column 1500: unexpected character")
(error "line 1287 column 1437: unexpected character")
(error "line 1287 column 1439: unexpected character")
(error "line 1292 column 1445: unexpected character")
(error "line 1292 column 1447: unexpected character")
(error "line 1297 column 1453: unexpected character")
(error "line 1297 column 1455: unexpected character")
(error "line 1301 column 1453: unexpected character")
(error "line 1301 column 1455: unexpected character")
(error "line 1521 column 1392: unexpected character")
(error "line 1521 column 1394: unexpected character")
(error "line 1526 column 1400: unexpected character")
(error "line 1526 column 1402: unexpected character")
(error "line 1531 column 1408: unexpected character")
(error "line 1531 column 1410: unexpected character")
(error "line 1535 column 1408: unexpected character")
(error "line 1535 column 1410: unexpected character")
(error "line 1755 column 1347: unexpected character")
(error "line 1755 column 1349: unexpected character")
(error "line 1760 column 1355: unexpected character")
(error "line 1760 column 1357: unexpected character")
(error "line 1765 column 1363: unexpected character")
(error "line 1765 column 1365: unexpected character")
(error "line 1769 column 1363: unexpected character")
(error "line 1769 column 1365: unexpected character")
(error "line 1989 column 1302: unexpected character")
(error "line 1989 column 1304: unexpected character")
(error "line 1994 column 1310: unexpected character")
(error "line 1994 column 1312: unexpected character")
(error "line 1999 column 1318: unexpected character")
(error "line 1999 column 1320: unexpected character")
(error "line 2003 column 1318: unexpected character")
(error "line 2003 column 1320: unexpected character")
(error "line 2223 column 1257: unexpected character")
(error "line 2223 column 1259: unexpected character")
(error "line 2228 column 1265: unexpected character")
(error "line 2228 column 1267: unexpected character")
(error "line 2233 column 1273: unexpected character")
(error "line 2233 column 1275: unexpected character")
(error "line 2237 column 1273: unexpected character")
(error "line 2237 column 1275: unexpected character")
(error "line 2457 column 1212: unexpected character")
(error "line 2457 column 1214: unexpected character")
(error "line 2462 column 1220: unexpected character")
(error "line 2462 column 1222: unexpected character")
(error "line 2467 column 1228: unexpected character")
(error "line 2467 column 1230: unexpected character")
(error "line 2471 column 1228: unexpected character")
(error "line 2471 column 1230: unexpected character")
(error "line 2717 column 1162: unexpected character")
(error "line 2717 column 1164: unexpected character")
(error "line 2722 column 1170: unexpected character")
(error "line 2722 column 1172: unexpected character")
(error "line 2727 column 1178: unexpected character")
(error "line 2727 column 1180: unexpected character")
(error "line 2731 column 1178: unexpected character")
(error "line 2731 column 1180: unexpected character")
(error "line 2951 column 1117: unexpected character")
(error "line 2951 column 1119: unexpected character")
(error "line 2956 column 1125: unexpected character")
(error "line 2956 column 1127: unexpected character")
(error "line 2961 column 1133: unexpected character")
(error "line 2961 column 1135: unexpected character")
(error "line 2965 column 1133: unexpected character")
(error "line 2965 column 1135: unexpected character")
(error "line 3211 column 1068: unexpected character")
(error "line 3211 column 1070: unexpected character")
(error "line 3216 column 1076: unexpected character")
(error "line 3216 column 1078: unexpected character")
(error "line 3221 column 1084: unexpected character")
(error "line 3221 column 1086: unexpected character")
(error "line 3225 column 1084: unexpected character")
(error "line 3225 column 1086: unexpected character")
(error "line 3445 column 1023: unexpected character")
(error "line 3445 column 1025: unexpected character")
(error "line 3450 column 1031: unexpected character")
(error "line 3450 column 1033: unexpected character")
(error "line 3455 column 1039: unexpected character")
(error "line 3455 column 1041: unexpected character")
(error "line 3459 column 1039: unexpected character")
(error "line 3459 column 1041: unexpected character")
(error "line 3679 column 978: unexpected character")
(error "line 3679 column 980: unexpected character")
(error "line 3684 column 986: unexpected character")
(error "line 3684 column 988: unexpected character")
(error "line 3689 column 994: unexpected character")
(error "line 3689 column 996: unexpected character")
(error "line 3693 column 994: unexpected character")
(error "line 3693 column 996: unexpected character")
(error "line 3913 column 933: unexpected character")
(error "line 3913 column 935: unexpected character")
(error "line 3918 column 941: unexpected character")
(error "line 3918 column 943: unexpected character")
(error "line 3923 column 949: unexpected character")
(error "line 3923 column 951: unexpected character")
(error "line 3927 column 949: unexpected character")
(error "line 3927 column 951: unexpected character")
(error "line 4147 column 888: unexpected character")
(error "line 4147 column 890: unexpected character")
(error "line 4152 column 896: unexpected character")
(error "line 4152 column 898: unexpected character")
(error "line 4157 column 904: unexpected character")
(error "line 4157 column 906: unexpected character")
(error "line 4161 column 904: unexpected character")
(error "line 4161 column 906: unexpected character")
(error "line 4381 column 843: unexpected character")
(error "line 4381 column 845: unexpected character")
(error "line 4386 column 851: unexpected character")
(error "line 4386 column 853: unexpected character")
(error "line 4391 column 859: unexpected character")
(error "line 4391 column 861: unexpected character")
(error "line 4395 column 859: unexpected character")
(error "line 4395 column 861: unexpected character")
(error "line 4615 column 798: unexpected character")
(error "line 4615 column 800: unexpected character")
(error "line 4620 column 806: unexpected character")
(error "line 4620 column 808: unexpected character")
(error "line 4625 column 814: unexpected character")
(error "line 4625 column 816: unexpected character")
(error "line 4629 column 814: unexpected character")
(error "line 4629 column 816: unexpected character")
(error "line 4849 column 753: unexpected character")
(error "line 4849 column 755: unexpected character")
(error "line 4854 column 761: unexpected character")
(error "line 4854 column 763: unexpected character")
(error "line 4859 column 769: unexpected character")
(error "line 4859 column 771: unexpected character")
(error "line 4863 column 769: unexpected character")
(error "line 4863 column 771: unexpected character")
(error "line 5083 column 708: unexpected character")
(error "line 5083 column 710: unexpected character")
(error "line 5088 column 716: unexpected character")
(error "line 5088 column 718: unexpected character")
(error "line 5093 column 724: unexpected character")
(error "line 5093 column 726: unexpected character")
(error "line 5097 column 724: unexpected character")
(error "line 5097 column 726: unexpected character")
(error "line 5317 column 663: unexpected character")
(error "line 5317 column 665: unexpected character")
(error "line 5322 column 671: unexpected character")
(error "line 5322 column 673: unexpected character")
(error "line 5327 column 679: unexpected character")
(error "line 5327 column 681: unexpected character")
(error "line 5331 column 679: unexpected character")
(error "line 5331 column 681: unexpected character")
(error "line 5551 column 618: unexpected character")
(error "line 5551 column 620: unexpected character")
(error "line 5556 column 626: unexpected character")
(error "line 5556 column 628: unexpected character")
(error "line 5561 column 634: unexpected character")
(error "line 5561 column 636: unexpected character")
(error "line 5565 column 634: unexpected character")
(error "line 5565 column 636: unexpected character")
(error "line 5785 column 573: unexpected character")
(error "line 5785 column 575: unexpected character")
(error "line 5790 column 581: unexpected character")
(error "line 5790 column 583: unexpected character")
(error "line 5795 column 589: unexpected character")
(error "line 5795 column 591: unexpected character")
(error "line 5799 column 589: unexpected character")
(error "line 5799 column 591: unexpected character")
(error "line 6019 column 528: unexpected character")
(error "line 6019 column 530: unexpected character")
(error "line 6024 column 536: unexpected character")
(error "line 6024 column 538: unexpected character")
(error "line 6029 column 544: unexpected character")
(error "line 6029 column 546: unexpected character")
(error "line 6033 column 544: unexpected character")
(error "line 6033 column 546: unexpected character")
(error "line 6253 column 483: unexpected character")
(error "line 6253 column 485: unexpected character")
(error "line 6258 column 491: unexpected character")
(error "line 6258 column 493: unexpected character")
(error "line 6263 column 499: unexpected character")
(error "line 6263 column 501: unexpected character")
(error "line 6267 column 499: unexpected character")
(error "line 6267 column 501: unexpected character")
(error "line 6487 column 438: unexpected character")
(error "line 6487 column 440: unexpected character")
(error "line 6492 column 446: unexpected character")
(error "line 6492 column 448: unexpected character")
(error "line 6497 column 454: unexpected character")
(error "line 6497 column 456: unexpected character")
(error "line 6501 column 454: unexpected character")
(error "line 6501 column 456: unexpected character")
(error "line 6721 column 393: unexpected character")
(error "line 6721 column 395: unexpected character")
(error "line 6726 column 401: unexpected character")
(error "line 6726 column 403: unexpected character")
(error "line 6731 column 409: unexpected character")
(error "line 6731 column 411: unexpected character")
(error "line 6735 column 409: unexpected character")
(error "line 6735 column 411: unexpected character")
(error "line 6955 column 348: unexpected character")
(error "line 6955 column 350: unexpected character")
(error "line 6960 column 356: unexpected character")
(error "line 6960 column 358: unexpected character")
(error "line 6965 column 364: unexpected character")
(error "line 6965 column 366: unexpected character")
(error "line 6969 column 364: unexpected character")
(error "line 6969 column 366: unexpected character")
(error "line 7189 column 303: unexpected character")
(error "line 7189 column 305: unexpected character")
(error "line 7194 column 311: unexpected character")
(error "line 7194 column 313: unexpected character")
(error "line 7199 column 319: unexpected character")
(error "line 7199 column 321: unexpected character")
(error "line 7203 column 319: unexpected character")
(error "line 7203 column 321: unexpected character")
(error "line 7423 column 258: unexpected character")
(error "line 7423 column 260: unexpected character")
(error "line 7428 column 266: unexpected character")
(error "line 7428 column 268: unexpected character")
(error "line 7433 column 274: unexpected character")
(error "line 7433 column 276: unexpected character")
(error "line 7437 column 274: unexpected character")
(error "line 7437 column 276: unexpected character")
(error "line 7657 column 213: unexpected character")
(error "line 7657 column 215: unexpected character")
(error "line 7662 column 221: unexpected character")
(error "line 7662 column 223: unexpected character")
(error "line 7667 column 229: unexpected character")
(error "line 7667 column 231: unexpected character")
(error "line 7671 column 229: unexpected character")
(error "line 7671 column 231: unexpected character")
(error "line 7891 column 168: unexpected character")
(error "line 7891 column 170: unexpected character")
(error "line 7896 column 176: unexpected character")
(error "line 7896 column 178: unexpected character")
(error "line 7901 column 184: unexpected character")
(error "line 7901 column 186: unexpected character")
(error "line 7905 column 184: unexpected character")
(error "line 7905 column 186: unexpected character")
(error "line 8125 column 123: unexpected character")
(error "line 8125 column 125: unexpected character")
(error "line 8130 column 131: unexpected character")
(error "line 8130 column 133: unexpected character")
(error "line 8135 column 139: unexpected character")
(error "line 8135 column 141: unexpected character")
(error "line 8139 column 139: unexpected character")
(error "line 8139 column 141: unexpected character")
(error "line 8359 column 78: unexpected character")
(error "line 8359 column 80: unexpected character")
(error "line 8364 column 86: unexpected character")
(error "line 8364 column 88: unexpected character")
(error "line 8369 column 94: unexpected character")
(error "line 8369 column 96: unexpected character")
(error "line 8373 column 94: unexpected character")
(error "line 8373 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000004.smt2
(error "line 39 column 48: unexpected character")
(error "line 39 column 50: unexpected character")
(error "line 47 column 48: unexpected character")
(error "line 47 column 50: unexpected character")
(error "line 55 column 49: unexpected character")
(error "line 55 column 51: unexpected character")
(error "line 63 column 49: unexpected character")
(error "line 63 column 51: unexpected character")
(error "line 71 column 49: unexpected character")
(error "line 71 column 51: unexpected character")
(error "line 79 column 49: unexpected character")
(error "line 79 column 51: unexpected character")
(error "line 87 column 49: unexpected character")
(error "line 87 column 51: unexpected character")
(error "line 95 column 49: unexpected character")
(error "line 95 column 51: unexpected character")
(error "line 103 column 49: unexpected character")
(error "line 103 column 51: unexpected character")
(error "line 111 column 49: unexpected character")
(error "line 111 column 51: unexpected character")
(error "line 119 column 49: unexpected character")
(error "line 119 column 51: unexpected character")
(error "line 127 column 49: unexpected character")
(error "line 127 column 51: unexpected character")
(error "line 135 column 48: unexpected character")
(error "line 135 column 50: unexpected character")
(error "line 143 column 49: unexpected character")
(error "line 143 column 51: unexpected character")
(error "line 151 column 49: unexpected character")
(error "line 151 column 51: unexpected character")
(error "line 159 column 49: unexpected character")
(error "line 159 column 51: unexpected character")
(error "line 167 column 49: unexpected character")
(error "line 167 column 51: unexpected character")
(error "line 175 column 49: unexpected character")
(error "line 175 column 51: unexpected character")
(error "line 183 column 49: unexpected character")
(error "line 183 column 51: unexpected character")
(error "line 191 column 49: unexpected character")
(error "line 191 column 51: unexpected character")
(error "line 199 column 49: unexpected character")
(error "line 199 column 51: unexpected character")
(error "line 207 column 49: unexpected character")
(error "line 207 column 51: unexpected character")
(error "line 215 column 49: unexpected character")
(error "line 215 column 51: unexpected character")
(error "line 223 column 48: unexpected character")
(error "line 223 column 50: unexpected character")
(error "line 231 column 49: unexpected character")
(error "line 231 column 51: unexpected character")
(error "line 239 column 49: unexpected character")
(error "line 239 column 51: unexpected character")
(error "line 247 column 48: unexpected character")
(error "line 247 column 50: unexpected character")
(error "line 255 column 48: unexpected character")
(error "line 255 column 50: unexpected character")
(error "line 263 column 48: unexpected character")
(error "line 263 column 50: unexpected character")
(error "line 271 column 48: unexpected character")
(error "line 271 column 50: unexpected character")
(error "line 279 column 48: unexpected character")
(error "line 279 column 50: unexpected character")
(error "line 287 column 48: unexpected character")
(error "line 287 column 50: unexpected character")
(error "line 801 column 1447: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 801 column 1482: unexpected character")
(error "line 801 column 1484: unexpected character")
(error "line 806 column 1490: unexpected character")
(error "line 806 column 1492: unexpected character")
(error "line 811 column 1498: unexpected character")
(error "line 811 column 1500: unexpected character")
(error "line 815 column 1498: unexpected character")
(error "line 815 column 1500: unexpected character")
(error "line 1035 column 1437: unexpected character")
(error "line 1035 column 1439: unexpected character")
(error "line 1040 column 1445: unexpected character")
(error "line 1040 column 1447: unexpected character")
(error "line 1045 column 1453: unexpected character")
(error "line 1045 column 1455: unexpected character")
(error "line 1049 column 1453: unexpected character")
(error "line 1049 column 1455: unexpected character")
(error "line 1269 column 1392: unexpected character")
(error "line 1269 column 1394: unexpected character")
(error "line 1274 column 1400: unexpected character")
(error "line 1274 column 1402: unexpected character")
(error "line 1279 column 1408: unexpected character")
(error "line 1279 column 1410: unexpected character")
(error "line 1283 column 1408: unexpected character")
(error "line 1283 column 1410: unexpected character")
(error "line 1503 column 1347: unexpected character")
(error "line 1503 column 1349: unexpected character")
(error "line 1508 column 1355: unexpected character")
(error "line 1508 column 1357: unexpected character")
(error "line 1513 column 1363: unexpected character")
(error "line 1513 column 1365: unexpected character")
(error "line 1517 column 1363: unexpected character")
(error "line 1517 column 1365: unexpected character")
(error "line 1737 column 1302: unexpected character")
(error "line 1737 column 1304: unexpected character")
(error "line 1742 column 1310: unexpected character")
(error "line 1742 column 1312: unexpected character")
(error "line 1747 column 1318: unexpected character")
(error "line 1747 column 1320: unexpected character")
(error "line 1751 column 1318: unexpected character")
(error "line 1751 column 1320: unexpected character")
(error "line 1971 column 1257: unexpected character")
(error "line 1971 column 1259: unexpected character")
(error "line 1976 column 1265: unexpected character")
(error "line 1976 column 1267: unexpected character")
(error "line 1981 column 1273: unexpected character")
(error "line 1981 column 1275: unexpected character")
(error "line 1985 column 1273: unexpected character")
(error "line 1985 column 1275: unexpected character")
(error "line 2205 column 1212: unexpected character")
(error "line 2205 column 1214: unexpected character")
(error "line 2210 column 1220: unexpected character")
(error "line 2210 column 1222: unexpected character")
(error "line 2215 column 1228: unexpected character")
(error "line 2215 column 1230: unexpected character")
(error "line 2219 column 1228: unexpected character")
(error "line 2219 column 1230: unexpected character")
(error "line 2439 column 1167: unexpected character")
(error "line 2439 column 1169: unexpected character")
(error "line 2444 column 1175: unexpected character")
(error "line 2444 column 1177: unexpected character")
(error "line 2449 column 1183: unexpected character")
(error "line 2449 column 1185: unexpected character")
(error "line 2453 column 1183: unexpected character")
(error "line 2453 column 1185: unexpected character")
(error "line 2699 column 1117: unexpected character")
(error "line 2699 column 1119: unexpected character")
(error "line 2704 column 1125: unexpected character")
(error "line 2704 column 1127: unexpected character")
(error "line 2709 column 1133: unexpected character")
(error "line 2709 column 1135: unexpected character")
(error "line 2713 column 1133: unexpected character")
(error "line 2713 column 1135: unexpected character")
(error "line 2933 column 1072: unexpected character")
(error "line 2933 column 1074: unexpected character")
(error "line 2938 column 1080: unexpected character")
(error "line 2938 column 1082: unexpected character")
(error "line 2943 column 1088: unexpected character")
(error "line 2943 column 1090: unexpected character")
(error "line 2947 column 1088: unexpected character")
(error "line 2947 column 1090: unexpected character")
(error "line 3193 column 1023: unexpected character")
(error "line 3193 column 1025: unexpected character")
(error "line 3198 column 1031: unexpected character")
(error "line 3198 column 1033: unexpected character")
(error "line 3203 column 1039: unexpected character")
(error "line 3203 column 1041: unexpected character")
(error "line 3207 column 1039: unexpected character")
(error "line 3207 column 1041: unexpected character")
(error "line 3427 column 978: unexpected character")
(error "line 3427 column 980: unexpected character")
(error "line 3432 column 986: unexpected character")
(error "line 3432 column 988: unexpected character")
(error "line 3437 column 994: unexpected character")
(error "line 3437 column 996: unexpected character")
(error "line 3441 column 994: unexpected character")
(error "line 3441 column 996: unexpected character")
(error "line 3661 column 933: unexpected character")
(error "line 3661 column 935: unexpected character")
(error "line 3666 column 941: unexpected character")
(error "line 3666 column 943: unexpected character")
(error "line 3671 column 949: unexpected character")
(error "line 3671 column 951: unexpected character")
(error "line 3675 column 949: unexpected character")
(error "line 3675 column 951: unexpected character")
(error "line 3895 column 888: unexpected character")
(error "line 3895 column 890: unexpected character")
(error "line 3900 column 896: unexpected character")
(error "line 3900 column 898: unexpected character")
(error "line 3905 column 904: unexpected character")
(error "line 3905 column 906: unexpected character")
(error "line 3909 column 904: unexpected character")
(error "line 3909 column 906: unexpected character")
(error "line 4129 column 843: unexpected character")
(error "line 4129 column 845: unexpected character")
(error "line 4134 column 851: unexpected character")
(error "line 4134 column 853: unexpected character")
(error "line 4139 column 859: unexpected character")
(error "line 4139 column 861: unexpected character")
(error "line 4143 column 859: unexpected character")
(error "line 4143 column 861: unexpected character")
(error "line 4363 column 798: unexpected character")
(error "line 4363 column 800: unexpected character")
(error "line 4368 column 806: unexpected character")
(error "line 4368 column 808: unexpected character")
(error "line 4373 column 814: unexpected character")
(error "line 4373 column 816: unexpected character")
(error "line 4377 column 814: unexpected character")
(error "line 4377 column 816: unexpected character")
(error "line 4597 column 753: unexpected character")
(error "line 4597 column 755: unexpected character")
(error "line 4602 column 761: unexpected character")
(error "line 4602 column 763: unexpected character")
(error "line 4607 column 769: unexpected character")
(error "line 4607 column 771: unexpected character")
(error "line 4611 column 769: unexpected character")
(error "line 4611 column 771: unexpected character")
(error "line 4831 column 708: unexpected character")
(error "line 4831 column 710: unexpected character")
(error "line 4836 column 716: unexpected character")
(error "line 4836 column 718: unexpected character")
(error "line 4841 column 724: unexpected character")
(error "line 4841 column 726: unexpected character")
(error "line 4845 column 724: unexpected character")
(error "line 4845 column 726: unexpected character")
(error "line 5065 column 663: unexpected character")
(error "line 5065 column 665: unexpected character")
(error "line 5070 column 671: unexpected character")
(error "line 5070 column 673: unexpected character")
(error "line 5075 column 679: unexpected character")
(error "line 5075 column 681: unexpected character")
(error "line 5079 column 679: unexpected character")
(error "line 5079 column 681: unexpected character")
(error "line 5299 column 618: unexpected character")
(error "line 5299 column 620: unexpected character")
(error "line 5304 column 626: unexpected character")
(error "line 5304 column 628: unexpected character")
(error "line 5309 column 634: unexpected character")
(error "line 5309 column 636: unexpected character")
(error "line 5313 column 634: unexpected character")
(error "line 5313 column 636: unexpected character")
(error "line 5533 column 573: unexpected character")
(error "line 5533 column 575: unexpected character")
(error "line 5538 column 581: unexpected character")
(error "line 5538 column 583: unexpected character")
(error "line 5543 column 589: unexpected character")
(error "line 5543 column 591: unexpected character")
(error "line 5547 column 589: unexpected character")
(error "line 5547 column 591: unexpected character")
(error "line 5767 column 528: unexpected character")
(error "line 5767 column 530: unexpected character")
(error "line 5772 column 536: unexpected character")
(error "line 5772 column 538: unexpected character")
(error "line 5777 column 544: unexpected character")
(error "line 5777 column 546: unexpected character")
(error "line 5781 column 544: unexpected character")
(error "line 5781 column 546: unexpected character")
(error "line 6001 column 483: unexpected character")
(error "line 6001 column 485: unexpected character")
(error "line 6006 column 491: unexpected character")
(error "line 6006 column 493: unexpected character")
(error "line 6011 column 499: unexpected character")
(error "line 6011 column 501: unexpected character")
(error "line 6015 column 499: unexpected character")
(error "line 6015 column 501: unexpected character")
(error "line 6235 column 438: unexpected character")
(error "line 6235 column 440: unexpected character")
(error "line 6240 column 446: unexpected character")
(error "line 6240 column 448: unexpected character")
(error "line 6245 column 454: unexpected character")
(error "line 6245 column 456: unexpected character")
(error "line 6249 column 454: unexpected character")
(error "line 6249 column 456: unexpected character")
(error "line 6469 column 393: unexpected character")
(error "line 6469 column 395: unexpected character")
(error "line 6474 column 401: unexpected character")
(error "line 6474 column 403: unexpected character")
(error "line 6479 column 409: unexpected character")
(error "line 6479 column 411: unexpected character")
(error "line 6483 column 409: unexpected character")
(error "line 6483 column 411: unexpected character")
(error "line 6703 column 348: unexpected character")
(error "line 6703 column 350: unexpected character")
(error "line 6708 column 356: unexpected character")
(error "line 6708 column 358: unexpected character")
(error "line 6713 column 364: unexpected character")
(error "line 6713 column 366: unexpected character")
(error "line 6717 column 364: unexpected character")
(error "line 6717 column 366: unexpected character")
(error "line 6937 column 303: unexpected character")
(error "line 6937 column 305: unexpected character")
(error "line 6942 column 311: unexpected character")
(error "line 6942 column 313: unexpected character")
(error "line 6947 column 319: unexpected character")
(error "line 6947 column 321: unexpected character")
(error "line 6951 column 319: unexpected character")
(error "line 6951 column 321: unexpected character")
(error "line 7171 column 258: unexpected character")
(error "line 7171 column 260: unexpected character")
(error "line 7176 column 266: unexpected character")
(error "line 7176 column 268: unexpected character")
(error "line 7181 column 274: unexpected character")
(error "line 7181 column 276: unexpected character")
(error "line 7185 column 274: unexpected character")
(error "line 7185 column 276: unexpected character")
(error "line 7405 column 213: unexpected character")
(error "line 7405 column 215: unexpected character")
(error "line 7410 column 221: unexpected character")
(error "line 7410 column 223: unexpected character")
(error "line 7415 column 229: unexpected character")
(error "line 7415 column 231: unexpected character")
(error "line 7419 column 229: unexpected character")
(error "line 7419 column 231: unexpected character")
(error "line 7639 column 168: unexpected character")
(error "line 7639 column 170: unexpected character")
(error "line 7644 column 176: unexpected character")
(error "line 7644 column 178: unexpected character")
(error "line 7649 column 184: unexpected character")
(error "line 7649 column 186: unexpected character")
(error "line 7653 column 184: unexpected character")
(error "line 7653 column 186: unexpected character")
(error "line 7873 column 123: unexpected character")
(error "line 7873 column 125: unexpected character")
(error "line 7878 column 131: unexpected character")
(error "line 7878 column 133: unexpected character")
(error "line 7883 column 139: unexpected character")
(error "line 7883 column 141: unexpected character")
(error "line 7887 column 139: unexpected character")
(error "line 7887 column 141: unexpected character")
(error "line 8107 column 78: unexpected character")
(error "line 8107 column 80: unexpected character")
(error "line 8112 column 86: unexpected character")
(error "line 8112 column 88: unexpected character")
(error "line 8117 column 94: unexpected character")
(error "line 8117 column 96: unexpected character")
(error "line 8121 column 94: unexpected character")
(error "line 8121 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000005.smt2
(error "line 38 column 48: unexpected character")
(error "line 38 column 50: unexpected character")
(error "line 46 column 48: unexpected character")
(error "line 46 column 50: unexpected character")
(error "line 54 column 49: unexpected character")
(error "line 54 column 51: unexpected character")
(error "line 62 column 49: unexpected character")
(error "line 62 column 51: unexpected character")
(error "line 70 column 49: unexpected character")
(error "line 70 column 51: unexpected character")
(error "line 78 column 49: unexpected character")
(error "line 78 column 51: unexpected character")
(error "line 86 column 49: unexpected character")
(error "line 86 column 51: unexpected character")
(error "line 94 column 49: unexpected character")
(error "line 94 column 51: unexpected character")
(error "line 102 column 49: unexpected character")
(error "line 102 column 51: unexpected character")
(error "line 110 column 49: unexpected character")
(error "line 110 column 51: unexpected character")
(error "line 118 column 49: unexpected character")
(error "line 118 column 51: unexpected character")
(error "line 126 column 49: unexpected character")
(error "line 126 column 51: unexpected character")
(error "line 134 column 48: unexpected character")
(error "line 134 column 50: unexpected character")
(error "line 142 column 49: unexpected character")
(error "line 142 column 51: unexpected character")
(error "line 150 column 49: unexpected character")
(error "line 150 column 51: unexpected character")
(error "line 158 column 49: unexpected character")
(error "line 158 column 51: unexpected character")
(error "line 166 column 49: unexpected character")
(error "line 166 column 51: unexpected character")
(error "line 174 column 49: unexpected character")
(error "line 174 column 51: unexpected character")
(error "line 182 column 49: unexpected character")
(error "line 182 column 51: unexpected character")
(error "line 190 column 49: unexpected character")
(error "line 190 column 51: unexpected character")
(error "line 198 column 49: unexpected character")
(error "line 198 column 51: unexpected character")
(error "line 206 column 49: unexpected character")
(error "line 206 column 51: unexpected character")
(error "line 214 column 49: unexpected character")
(error "line 214 column 51: unexpected character")
(error "line 222 column 48: unexpected character")
(error "line 222 column 50: unexpected character")
(error "line 230 column 49: unexpected character")
(error "line 230 column 51: unexpected character")
(error "line 238 column 48: unexpected character")
(error "line 238 column 50: unexpected character")
(error "line 246 column 48: unexpected character")
(error "line 246 column 50: unexpected character")
(error "line 254 column 48: unexpected character")
(error "line 254 column 50: unexpected character")
(error "line 262 column 48: unexpected character")
(error "line 262 column 50: unexpected character")
(error "line 270 column 48: unexpected character")
(error "line 270 column 50: unexpected character")
(error "line 278 column 48: unexpected character")
(error "line 278 column 50: unexpected character")
(error "line 783 column 1402: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 783 column 1437: unexpected character")
(error "line 783 column 1439: unexpected character")
(error "line 788 column 1445: unexpected character")
(error "line 788 column 1447: unexpected character")
(error "line 793 column 1453: unexpected character")
(error "line 793 column 1455: unexpected character")
(error "line 797 column 1453: unexpected character")
(error "line 797 column 1455: unexpected character")
(error "line 1017 column 1392: unexpected character")
(error "line 1017 column 1394: unexpected character")
(error "line 1022 column 1400: unexpected character")
(error "line 1022 column 1402: unexpected character")
(error "line 1027 column 1408: unexpected character")
(error "line 1027 column 1410: unexpected character")
(error "line 1031 column 1408: unexpected character")
(error "line 1031 column 1410: unexpected character")
(error "line 1251 column 1347: unexpected character")
(error "line 1251 column 1349: unexpected character")
(error "line 1256 column 1355: unexpected character")
(error "line 1256 column 1357: unexpected character")
(error "line 1261 column 1363: unexpected character")
(error "line 1261 column 1365: unexpected character")
(error "line 1265 column 1363: unexpected character")
(error "line 1265 column 1365: unexpected character")
(error "line 1485 column 1302: unexpected character")
(error "line 1485 column 1304: unexpected character")
(error "line 1490 column 1310: unexpected character")
(error "line 1490 column 1312: unexpected character")
(error "line 1495 column 1318: unexpected character")
(error "line 1495 column 1320: unexpected character")
(error "line 1499 column 1318: unexpected character")
(error "line 1499 column 1320: unexpected character")
(error "line 1719 column 1257: unexpected character")
(error "line 1719 column 1259: unexpected character")
(error "line 1724 column 1265: unexpected character")
(error "line 1724 column 1267: unexpected character")
(error "line 1729 column 1273: unexpected character")
(error "line 1729 column 1275: unexpected character")
(error "line 1733 column 1273: unexpected character")
(error "line 1733 column 1275: unexpected character")
(error "line 1953 column 1212: unexpected character")
(error "line 1953 column 1214: unexpected character")
(error "line 1958 column 1220: unexpected character")
(error "line 1958 column 1222: unexpected character")
(error "line 1963 column 1228: unexpected character")
(error "line 1963 column 1230: unexpected character")
(error "line 1967 column 1228: unexpected character")
(error "line 1967 column 1230: unexpected character")
(error "line 2187 column 1167: unexpected character")
(error "line 2187 column 1169: unexpected character")
(error "line 2192 column 1175: unexpected character")
(error "line 2192 column 1177: unexpected character")
(error "line 2197 column 1183: unexpected character")
(error "line 2197 column 1185: unexpected character")
(error "line 2201 column 1183: unexpected character")
(error "line 2201 column 1185: unexpected character")
(error "line 2421 column 1122: unexpected character")
(error "line 2421 column 1124: unexpected character")
(error "line 2426 column 1130: unexpected character")
(error "line 2426 column 1132: unexpected character")
(error "line 2431 column 1138: unexpected character")
(error "line 2431 column 1140: unexpected character")
(error "line 2435 column 1138: unexpected character")
(error "line 2435 column 1140: unexpected character")
(error "line 2681 column 1072: unexpected character")
(error "line 2681 column 1074: unexpected character")
(error "line 2686 column 1080: unexpected character")
(error "line 2686 column 1082: unexpected character")
(error "line 2691 column 1088: unexpected character")
(error "line 2691 column 1090: unexpected character")
(error "line 2695 column 1088: unexpected character")
(error "line 2695 column 1090: unexpected character")
(error "line 2915 column 1027: unexpected character")
(error "line 2915 column 1029: unexpected character")
(error "line 2920 column 1035: unexpected character")
(error "line 2920 column 1037: unexpected character")
(error "line 2925 column 1043: unexpected character")
(error "line 2925 column 1045: unexpected character")
(error "line 2929 column 1043: unexpected character")
(error "line 2929 column 1045: unexpected character")
(error "line 3175 column 978: unexpected character")
(error "line 3175 column 980: unexpected character")
(error "line 3180 column 986: unexpected character")
(error "line 3180 column 988: unexpected character")
(error "line 3185 column 994: unexpected character")
(error "line 3185 column 996: unexpected character")
(error "line 3189 column 994: unexpected character")
(error "line 3189 column 996: unexpected character")
(error "line 3409 column 933: unexpected character")
(error "line 3409 column 935: unexpected character")
(error "line 3414 column 941: unexpected character")
(error "line 3414 column 943: unexpected character")
(error "line 3419 column 949: unexpected character")
(error "line 3419 column 951: unexpected character")
(error "line 3423 column 949: unexpected character")
(error "line 3423 column 951: unexpected character")
(error "line 3643 column 888: unexpected character")
(error "line 3643 column 890: unexpected character")
(error "line 3648 column 896: unexpected character")
(error "line 3648 column 898: unexpected character")
(error "line 3653 column 904: unexpected character")
(error "line 3653 column 906: unexpected character")
(error "line 3657 column 904: unexpected character")
(error "line 3657 column 906: unexpected character")
(error "line 3877 column 843: unexpected character")
(error "line 3877 column 845: unexpected character")
(error "line 3882 column 851: unexpected character")
(error "line 3882 column 853: unexpected character")
(error "line 3887 column 859: unexpected character")
(error "line 3887 column 861: unexpected character")
(error "line 3891 column 859: unexpected character")
(error "line 3891 column 861: unexpected character")
(error "line 4111 column 798: unexpected character")
(error "line 4111 column 800: unexpected character")
(error "line 4116 column 806: unexpected character")
(error "line 4116 column 808: unexpected character")
(error "line 4121 column 814: unexpected character")
(error "line 4121 column 816: unexpected character")
(error "line 4125 column 814: unexpected character")
(error "line 4125 column 816: unexpected character")
(error "line 4345 column 753: unexpected character")
(error "line 4345 column 755: unexpected character")
(error "line 4350 column 761: unexpected character")
(error "line 4350 column 763: unexpected character")
(error "line 4355 column 769: unexpected character")
(error "line 4355 column 771: unexpected character")
(error "line 4359 column 769: unexpected character")
(error "line 4359 column 771: unexpected character")
(error "line 4579 column 708: unexpected character")
(error "line 4579 column 710: unexpected character")
(error "line 4584 column 716: unexpected character")
(error "line 4584 column 718: unexpected character")
(error "line 4589 column 724: unexpected character")
(error "line 4589 column 726: unexpected character")
(error "line 4593 column 724: unexpected character")
(error "line 4593 column 726: unexpected character")
(error "line 4813 column 663: unexpected character")
(error "line 4813 column 665: unexpected character")
(error "line 4818 column 671: unexpected character")
(error "line 4818 column 673: unexpected character")
(error "line 4823 column 679: unexpected character")
(error "line 4823 column 681: unexpected character")
(error "line 4827 column 679: unexpected character")
(error "line 4827 column 681: unexpected character")
(error "line 5047 column 618: unexpected character")
(error "line 5047 column 620: unexpected character")
(error "line 5052 column 626: unexpected character")
(error "line 5052 column 628: unexpected character")
(error "line 5057 column 634: unexpected character")
(error "line 5057 column 636: unexpected character")
(error "line 5061 column 634: unexpected character")
(error "line 5061 column 636: unexpected character")
(error "line 5281 column 573: unexpected character")
(error "line 5281 column 575: unexpected character")
(error "line 5286 column 581: unexpected character")
(error "line 5286 column 583: unexpected character")
(error "line 5291 column 589: unexpected character")
(error "line 5291 column 591: unexpected character")
(error "line 5295 column 589: unexpected character")
(error "line 5295 column 591: unexpected character")
(error "line 5515 column 528: unexpected character")
(error "line 5515 column 530: unexpected character")
(error "line 5520 column 536: unexpected character")
(error "line 5520 column 538: unexpected character")
(error "line 5525 column 544: unexpected character")
(error "line 5525 column 546: unexpected character")
(error "line 5529 column 544: unexpected character")
(error "line 5529 column 546: unexpected character")
(error "line 5749 column 483: unexpected character")
(error "line 5749 column 485: unexpected character")
(error "line 5754 column 491: unexpected character")
(error "line 5754 column 493: unexpected character")
(error "line 5759 column 499: unexpected character")
(error "line 5759 column 501: unexpected character")
(error "line 5763 column 499: unexpected character")
(error "line 5763 column 501: unexpected character")
(error "line 5983 column 438: unexpected character")
(error "line 5983 column 440: unexpected character")
(error "line 5988 column 446: unexpected character")
(error "line 5988 column 448: unexpected character")
(error "line 5993 column 454: unexpected character")
(error "line 5993 column 456: unexpected character")
(error "line 5997 column 454: unexpected character")
(error "line 5997 column 456: unexpected character")
(error "line 6217 column 393: unexpected character")
(error "line 6217 column 395: unexpected character")
(error "line 6222 column 401: unexpected character")
(error "line 6222 column 403: unexpected character")
(error "line 6227 column 409: unexpected character")
(error "line 6227 column 411: unexpected character")
(error "line 6231 column 409: unexpected character")
(error "line 6231 column 411: unexpected character")
(error "line 6451 column 348: unexpected character")
(error "line 6451 column 350: unexpected character")
(error "line 6456 column 356: unexpected character")
(error "line 6456 column 358: unexpected character")
(error "line 6461 column 364: unexpected character")
(error "line 6461 column 366: unexpected character")
(error "line 6465 column 364: unexpected character")
(error "line 6465 column 366: unexpected character")
(error "line 6685 column 303: unexpected character")
(error "line 6685 column 305: unexpected character")
(error "line 6690 column 311: unexpected character")
(error "line 6690 column 313: unexpected character")
(error "line 6695 column 319: unexpected character")
(error "line 6695 column 321: unexpected character")
(error "line 6699 column 319: unexpected character")
(error "line 6699 column 321: unexpected character")
(error "line 6919 column 258: unexpected character")
(error "line 6919 column 260: unexpected character")
(error "line 6924 column 266: unexpected character")
(error "line 6924 column 268: unexpected character")
(error "line 6929 column 274: unexpected character")
(error "line 6929 column 276: unexpected character")
(error "line 6933 column 274: unexpected character")
(error "line 6933 column 276: unexpected character")
(error "line 7153 column 213: unexpected character")
(error "line 7153 column 215: unexpected character")
(error "line 7158 column 221: unexpected character")
(error "line 7158 column 223: unexpected character")
(error "line 7163 column 229: unexpected character")
(error "line 7163 column 231: unexpected character")
(error "line 7167 column 229: unexpected character")
(error "line 7167 column 231: unexpected character")
(error "line 7387 column 168: unexpected character")
(error "line 7387 column 170: unexpected character")
(error "line 7392 column 176: unexpected character")
(error "line 7392 column 178: unexpected character")
(error "line 7397 column 184: unexpected character")
(error "line 7397 column 186: unexpected character")
(error "line 7401 column 184: unexpected character")
(error "line 7401 column 186: unexpected character")
(error "line 7621 column 123: unexpected character")
(error "line 7621 column 125: unexpected character")
(error "line 7626 column 131: unexpected character")
(error "line 7626 column 133: unexpected character")
(error "line 7631 column 139: unexpected character")
(error "line 7631 column 141: unexpected character")
(error "line 7635 column 139: unexpected character")
(error "line 7635 column 141: unexpected character")
(error "line 7855 column 78: unexpected character")
(error "line 7855 column 80: unexpected character")
(error "line 7860 column 86: unexpected character")
(error "line 7860 column 88: unexpected character")
(error "line 7865 column 94: unexpected character")
(error "line 7865 column 96: unexpected character")
(error "line 7869 column 94: unexpected character")
(error "line 7869 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000006.smt2
(error "line 37 column 48: unexpected character")
(error "line 37 column 50: unexpected character")
(error "line 45 column 48: unexpected character")
(error "line 45 column 50: unexpected character")
(error "line 53 column 49: unexpected character")
(error "line 53 column 51: unexpected character")
(error "line 61 column 49: unexpected character")
(error "line 61 column 51: unexpected character")
(error "line 69 column 49: unexpected character")
(error "line 69 column 51: unexpected character")
(error "line 77 column 49: unexpected character")
(error "line 77 column 51: unexpected character")
(error "line 85 column 49: unexpected character")
(error "line 85 column 51: unexpected character")
(error "line 93 column 49: unexpected character")
(error "line 93 column 51: unexpected character")
(error "line 101 column 49: unexpected character")
(error "line 101 column 51: unexpected character")
(error "line 109 column 49: unexpected character")
(error "line 109 column 51: unexpected character")
(error "line 117 column 49: unexpected character")
(error "line 117 column 51: unexpected character")
(error "line 125 column 49: unexpected character")
(error "line 125 column 51: unexpected character")
(error "line 133 column 48: unexpected character")
(error "line 133 column 50: unexpected character")
(error "line 141 column 49: unexpected character")
(error "line 141 column 51: unexpected character")
(error "line 149 column 49: unexpected character")
(error "line 149 column 51: unexpected character")
(error "line 157 column 49: unexpected character")
(error "line 157 column 51: unexpected character")
(error "line 165 column 49: unexpected character")
(error "line 165 column 51: unexpected character")
(error "line 173 column 49: unexpected character")
(error "line 173 column 51: unexpected character")
(error "line 181 column 49: unexpected character")
(error "line 181 column 51: unexpected character")
(error "line 189 column 49: unexpected character")
(error "line 189 column 51: unexpected character")
(error "line 197 column 49: unexpected character")
(error "line 197 column 51: unexpected character")
(error "line 205 column 49: unexpected character")
(error "line 205 column 51: unexpected character")
(error "line 213 column 49: unexpected character")
(error "line 213 column 51: unexpected character")
(error "line 221 column 48: unexpected character")
(error "line 221 column 50: unexpected character")
(error "line 229 column 48: unexpected character")
(error "line 229 column 50: unexpected character")
(error "line 237 column 48: unexpected character")
(error "line 237 column 50: unexpected character")
(error "line 245 column 48: unexpected character")
(error "line 245 column 50: unexpected character")
(error "line 253 column 48: unexpected character")
(error "line 253 column 50: unexpected character")
(error "line 261 column 48: unexpected character")
(error "line 261 column 50: unexpected character")
(error "line 269 column 48: unexpected character")
(error "line 269 column 50: unexpected character")
(error "line 765 column 1357: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 765 column 1392: unexpected character")
(error "line 765 column 1394: unexpected character")
(error "line 770 column 1400: unexpected character")
(error "line 770 column 1402: unexpected character")
(error "line 775 column 1408: unexpected character")
(error "line 775 column 1410: unexpected character")
(error "line 779 column 1408: unexpected character")
(error "line 779 column 1410: unexpected character")
(error "line 999 column 1347: unexpected character")
(error "line 999 column 1349: unexpected character")
(error "line 1004 column 1355: unexpected character")
(error "line 1004 column 1357: unexpected character")
(error "line 1009 column 1363: unexpected character")
(error "line 1009 column 1365: unexpected character")
(error "line 1013 column 1363: unexpected character")
(error "line 1013 column 1365: unexpected character")
(error "line 1233 column 1302: unexpected character")
(error "line 1233 column 1304: unexpected character")
(error "line 1238 column 1310: unexpected character")
(error "line 1238 column 1312: unexpected character")
(error "line 1243 column 1318: unexpected character")
(error "line 1243 column 1320: unexpected character")
(error "line 1247 column 1318: unexpected character")
(error "line 1247 column 1320: unexpected character")
(error "line 1467 column 1257: unexpected character")
(error "line 1467 column 1259: unexpected character")
(error "line 1472 column 1265: unexpected character")
(error "line 1472 column 1267: unexpected character")
(error "line 1477 column 1273: unexpected character")
(error "line 1477 column 1275: unexpected character")
(error "line 1481 column 1273: unexpected character")
(error "line 1481 column 1275: unexpected character")
(error "line 1701 column 1212: unexpected character")
(error "line 1701 column 1214: unexpected character")
(error "line 1706 column 1220: unexpected character")
(error "line 1706 column 1222: unexpected character")
(error "line 1711 column 1228: unexpected character")
(error "line 1711 column 1230: unexpected character")
(error "line 1715 column 1228: unexpected character")
(error "line 1715 column 1230: unexpected character")
(error "line 1935 column 1167: unexpected character")
(error "line 1935 column 1169: unexpected character")
(error "line 1940 column 1175: unexpected character")
(error "line 1940 column 1177: unexpected character")
(error "line 1945 column 1183: unexpected character")
(error "line 1945 column 1185: unexpected character")
(error "line 1949 column 1183: unexpected character")
(error "line 1949 column 1185: unexpected character")
(error "line 2169 column 1122: unexpected character")
(error "line 2169 column 1124: unexpected character")
(error "line 2174 column 1130: unexpected character")
(error "line 2174 column 1132: unexpected character")
(error "line 2179 column 1138: unexpected character")
(error "line 2179 column 1140: unexpected character")
(error "line 2183 column 1138: unexpected character")
(error "line 2183 column 1140: unexpected character")
(error "line 2403 column 1077: unexpected character")
(error "line 2403 column 1079: unexpected character")
(error "line 2408 column 1085: unexpected character")
(error "line 2408 column 1087: unexpected character")
(error "line 2413 column 1093: unexpected character")
(error "line 2413 column 1095: unexpected character")
(error "line 2417 column 1093: unexpected character")
(error "line 2417 column 1095: unexpected character")
(error "line 2663 column 1027: unexpected character")
(error "line 2663 column 1029: unexpected character")
(error "line 2668 column 1035: unexpected character")
(error "line 2668 column 1037: unexpected character")
(error "line 2673 column 1043: unexpected character")
(error "line 2673 column 1045: unexpected character")
(error "line 2677 column 1043: unexpected character")
(error "line 2677 column 1045: unexpected character")
(error "line 2897 column 982: unexpected character")
(error "line 2897 column 984: unexpected character")
(error "line 2902 column 990: unexpected character")
(error "line 2902 column 992: unexpected character")
(error "line 2907 column 998: unexpected character")
(error "line 2907 column 1000: unexpected character")
(error "line 2911 column 998: unexpected character")
(error "line 2911 column 1000: unexpected character")
(error "line 3157 column 933: unexpected character")
(error "line 3157 column 935: unexpected character")
(error "line 3162 column 941: unexpected character")
(error "line 3162 column 943: unexpected character")
(error "line 3167 column 949: unexpected character")
(error "line 3167 column 951: unexpected character")
(error "line 3171 column 949: unexpected character")
(error "line 3171 column 951: unexpected character")
(error "line 3391 column 888: unexpected character")
(error "line 3391 column 890: unexpected character")
(error "line 3396 column 896: unexpected character")
(error "line 3396 column 898: unexpected character")
(error "line 3401 column 904: unexpected character")
(error "line 3401 column 906: unexpected character")
(error "line 3405 column 904: unexpected character")
(error "line 3405 column 906: unexpected character")
(error "line 3625 column 843: unexpected character")
(error "line 3625 column 845: unexpected character")
(error "line 3630 column 851: unexpected character")
(error "line 3630 column 853: unexpected character")
(error "line 3635 column 859: unexpected character")
(error "line 3635 column 861: unexpected character")
(error "line 3639 column 859: unexpected character")
(error "line 3639 column 861: unexpected character")
(error "line 3859 column 798: unexpected character")
(error "line 3859 column 800: unexpected character")
(error "line 3864 column 806: unexpected character")
(error "line 3864 column 808: unexpected character")
(error "line 3869 column 814: unexpected character")
(error "line 3869 column 816: unexpected character")
(error "line 3873 column 814: unexpected character")
(error "line 3873 column 816: unexpected character")
(error "line 4093 column 753: unexpected character")
(error "line 4093 column 755: unexpected character")
(error "line 4098 column 761: unexpected character")
(error "line 4098 column 763: unexpected character")
(error "line 4103 column 769: unexpected character")
(error "line 4103 column 771: unexpected character")
(error "line 4107 column 769: unexpected character")
(error "line 4107 column 771: unexpected character")
(error "line 4327 column 708: unexpected character")
(error "line 4327 column 710: unexpected character")
(error "line 4332 column 716: unexpected character")
(error "line 4332 column 718: unexpected character")
(error "line 4337 column 724: unexpected character")
(error "line 4337 column 726: unexpected character")
(error "line 4341 column 724: unexpected character")
(error "line 4341 column 726: unexpected character")
(error "line 4561 column 663: unexpected character")
(error "line 4561 column 665: unexpected character")
(error "line 4566 column 671: unexpected character")
(error "line 4566 column 673: unexpected character")
(error "line 4571 column 679: unexpected character")
(error "line 4571 column 681: unexpected character")
(error "line 4575 column 679: unexpected character")
(error "line 4575 column 681: unexpected character")
(error "line 4795 column 618: unexpected character")
(error "line 4795 column 620: unexpected character")
(error "line 4800 column 626: unexpected character")
(error "line 4800 column 628: unexpected character")
(error "line 4805 column 634: unexpected character")
(error "line 4805 column 636: unexpected character")
(error "line 4809 column 634: unexpected character")
(error "line 4809 column 636: unexpected character")
(error "line 5029 column 573: unexpected character")
(error "line 5029 column 575: unexpected character")
(error "line 5034 column 581: unexpected character")
(error "line 5034 column 583: unexpected character")
(error "line 5039 column 589: unexpected character")
(error "line 5039 column 591: unexpected character")
(error "line 5043 column 589: unexpected character")
(error "line 5043 column 591: unexpected character")
(error "line 5263 column 528: unexpected character")
(error "line 5263 column 530: unexpected character")
(error "line 5268 column 536: unexpected character")
(error "line 5268 column 538: unexpected character")
(error "line 5273 column 544: unexpected character")
(error "line 5273 column 546: unexpected character")
(error "line 5277 column 544: unexpected character")
(error "line 5277 column 546: unexpected character")
(error "line 5497 column 483: unexpected character")
(error "line 5497 column 485: unexpected character")
(error "line 5502 column 491: unexpected character")
(error "line 5502 column 493: unexpected character")
(error "line 5507 column 499: unexpected character")
(error "line 5507 column 501: unexpected character")
(error "line 5511 column 499: unexpected character")
(error "line 5511 column 501: unexpected character")
(error "line 5731 column 438: unexpected character")
(error "line 5731 column 440: unexpected character")
(error "line 5736 column 446: unexpected character")
(error "line 5736 column 448: unexpected character")
(error "line 5741 column 454: unexpected character")
(error "line 5741 column 456: unexpected character")
(error "line 5745 column 454: unexpected character")
(error "line 5745 column 456: unexpected character")
(error "line 5965 column 393: unexpected character")
(error "line 5965 column 395: unexpected character")
(error "line 5970 column 401: unexpected character")
(error "line 5970 column 403: unexpected character")
(error "line 5975 column 409: unexpected character")
(error "line 5975 column 411: unexpected character")
(error "line 5979 column 409: unexpected character")
(error "line 5979 column 411: unexpected character")
(error "line 6199 column 348: unexpected character")
(error "line 6199 column 350: unexpected character")
(error "line 6204 column 356: unexpected character")
(error "line 6204 column 358: unexpected character")
(error "line 6209 column 364: unexpected character")
(error "line 6209 column 366: unexpected character")
(error "line 6213 column 364: unexpected character")
(error "line 6213 column 366: unexpected character")
(error "line 6433 column 303: unexpected character")
(error "line 6433 column 305: unexpected character")
(error "line 6438 column 311: unexpected character")
(error "line 6438 column 313: unexpected character")
(error "line 6443 column 319: unexpected character")
(error "line 6443 column 321: unexpected character")
(error "line 6447 column 319: unexpected character")
(error "line 6447 column 321: unexpected character")
(error "line 6667 column 258: unexpected character")
(error "line 6667 column 260: unexpected character")
(error "line 6672 column 266: unexpected character")
(error "line 6672 column 268: unexpected character")
(error "line 6677 column 274: unexpected character")
(error "line 6677 column 276: unexpected character")
(error "line 6681 column 274: unexpected character")
(error "line 6681 column 276: unexpected character")
(error "line 6901 column 213: unexpected character")
(error "line 6901 column 215: unexpected character")
(error "line 6906 column 221: unexpected character")
(error "line 6906 column 223: unexpected character")
(error "line 6911 column 229: unexpected character")
(error "line 6911 column 231: unexpected character")
(error "line 6915 column 229: unexpected character")
(error "line 6915 column 231: unexpected character")
(error "line 7135 column 168: unexpected character")
(error "line 7135 column 170: unexpected character")
(error "line 7140 column 176: unexpected character")
(error "line 7140 column 178: unexpected character")
(error "line 7145 column 184: unexpected character")
(error "line 7145 column 186: unexpected character")
(error "line 7149 column 184: unexpected character")
(error "line 7149 column 186: unexpected character")
(error "line 7369 column 123: unexpected character")
(error "line 7369 column 125: unexpected character")
(error "line 7374 column 131: unexpected character")
(error "line 7374 column 133: unexpected character")
(error "line 7379 column 139: unexpected character")
(error "line 7379 column 141: unexpected character")
(error "line 7383 column 139: unexpected character")
(error "line 7383 column 141: unexpected character")
(error "line 7603 column 78: unexpected character")
(error "line 7603 column 80: unexpected character")
(error "line 7608 column 86: unexpected character")
(error "line 7608 column 88: unexpected character")
(error "line 7613 column 94: unexpected character")
(error "line 7613 column 96: unexpected character")
(error "line 7617 column 94: unexpected character")
(error "line 7617 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000007.smt2
(error "line 36 column 48: unexpected character")
(error "line 36 column 50: unexpected character")
(error "line 44 column 48: unexpected character")
(error "line 44 column 50: unexpected character")
(error "line 52 column 49: unexpected character")
(error "line 52 column 51: unexpected character")
(error "line 60 column 49: unexpected character")
(error "line 60 column 51: unexpected character")
(error "line 68 column 49: unexpected character")
(error "line 68 column 51: unexpected character")
(error "line 76 column 49: unexpected character")
(error "line 76 column 51: unexpected character")
(error "line 84 column 49: unexpected character")
(error "line 84 column 51: unexpected character")
(error "line 92 column 49: unexpected character")
(error "line 92 column 51: unexpected character")
(error "line 100 column 49: unexpected character")
(error "line 100 column 51: unexpected character")
(error "line 108 column 49: unexpected character")
(error "line 108 column 51: unexpected character")
(error "line 116 column 49: unexpected character")
(error "line 116 column 51: unexpected character")
(error "line 124 column 49: unexpected character")
(error "line 124 column 51: unexpected character")
(error "line 132 column 48: unexpected character")
(error "line 132 column 50: unexpected character")
(error "line 140 column 49: unexpected character")
(error "line 140 column 51: unexpected character")
(error "line 148 column 49: unexpected character")
(error "line 148 column 51: unexpected character")
(error "line 156 column 49: unexpected character")
(error "line 156 column 51: unexpected character")
(error "line 164 column 49: unexpected character")
(error "line 164 column 51: unexpected character")
(error "line 172 column 49: unexpected character")
(error "line 172 column 51: unexpected character")
(error "line 180 column 49: unexpected character")
(error "line 180 column 51: unexpected character")
(error "line 188 column 49: unexpected character")
(error "line 188 column 51: unexpected character")
(error "line 196 column 49: unexpected character")
(error "line 196 column 51: unexpected character")
(error "line 204 column 49: unexpected character")
(error "line 204 column 51: unexpected character")
(error "line 212 column 48: unexpected character")
(error "line 212 column 50: unexpected character")
(error "line 220 column 48: unexpected character")
(error "line 220 column 50: unexpected character")
(error "line 228 column 48: unexpected character")
(error "line 228 column 50: unexpected character")
(error "line 236 column 48: unexpected character")
(error "line 236 column 50: unexpected character")
(error "line 244 column 48: unexpected character")
(error "line 244 column 50: unexpected character")
(error "line 252 column 48: unexpected character")
(error "line 252 column 50: unexpected character")
(error "line 260 column 48: unexpected character")
(error "line 260 column 50: unexpected character")
(error "line 747 column 1312: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 747 column 1347: unexpected character")
(error "line 747 column 1349: unexpected character")
(error "line 752 column 1355: unexpected character")
(error "line 752 column 1357: unexpected character")
(error "line 757 column 1363: unexpected character")
(error "line 757 column 1365: unexpected character")
(error "line 761 column 1363: unexpected character")
(error "line 761 column 1365: unexpected character")
(error "line 981 column 1302: unexpected character")
(error "line 981 column 1304: unexpected character")
(error "line 986 column 1310: unexpected character")
(error "line 986 column 1312: unexpected character")
(error "line 991 column 1318: unexpected character")
(error "line 991 column 1320: unexpected character")
(error "line 995 column 1318: unexpected character")
(error "line 995 column 1320: unexpected character")
(error "line 1215 column 1257: unexpected character")
(error "line 1215 column 1259: unexpected character")
(error "line 1220 column 1265: unexpected character")
(error "line 1220 column 1267: unexpected character")
(error "line 1225 column 1273: unexpected character")
(error "line 1225 column 1275: unexpected character")
(error "line 1229 column 1273: unexpected character")
(error "line 1229 column 1275: unexpected character")
(error "line 1449 column 1212: unexpected character")
(error "line 1449 column 1214: unexpected character")
(error "line 1454 column 1220: unexpected character")
(error "line 1454 column 1222: unexpected character")
(error "line 1459 column 1228: unexpected character")
(error "line 1459 column 1230: unexpected character")
(error "line 1463 column 1228: unexpected character")
(error "line 1463 column 1230: unexpected character")
(error "line 1683 column 1167: unexpected character")
(error "line 1683 column 1169: unexpected character")
(error "line 1688 column 1175: unexpected character")
(error "line 1688 column 1177: unexpected character")
(error "line 1693 column 1183: unexpected character")
(error "line 1693 column 1185: unexpected character")
(error "line 1697 column 1183: unexpected character")
(error "line 1697 column 1185: unexpected character")
(error "line 1917 column 1122: unexpected character")
(error "line 1917 column 1124: unexpected character")
(error "line 1922 column 1130: unexpected character")
(error "line 1922 column 1132: unexpected character")
(error "line 1927 column 1138: unexpected character")
(error "line 1927 column 1140: unexpected character")
(error "line 1931 column 1138: unexpected character")
(error "line 1931 column 1140: unexpected character")
(error "line 2151 column 1077: unexpected character")
(error "line 2151 column 1079: unexpected character")
(error "line 2156 column 1085: unexpected character")
(error "line 2156 column 1087: unexpected character")
(error "line 2161 column 1093: unexpected character")
(error "line 2161 column 1095: unexpected character")
(error "line 2165 column 1093: unexpected character")
(error "line 2165 column 1095: unexpected character")
(error "line 2385 column 1032: unexpected character")
(error "line 2385 column 1034: unexpected character")
(error "line 2390 column 1040: unexpected character")
(error "line 2390 column 1042: unexpected character")
(error "line 2395 column 1048: unexpected character")
(error "line 2395 column 1050: unexpected character")
(error "line 2399 column 1048: unexpected character")
(error "line 2399 column 1050: unexpected character")
(error "line 2645 column 982: unexpected character")
(error "line 2645 column 984: unexpected character")
(error "line 2650 column 990: unexpected character")
(error "line 2650 column 992: unexpected character")
(error "line 2655 column 998: unexpected character")
(error "line 2655 column 1000: unexpected character")
(error "line 2659 column 998: unexpected character")
(error "line 2659 column 1000: unexpected character")
(error "line 2879 column 937: unexpected character")
(error "line 2879 column 939: unexpected character")
(error "line 2884 column 945: unexpected character")
(error "line 2884 column 947: unexpected character")
(error "line 2889 column 953: unexpected character")
(error "line 2889 column 955: unexpected character")
(error "line 2893 column 953: unexpected character")
(error "line 2893 column 955: unexpected character")
(error "line 3139 column 888: unexpected character")
(error "line 3139 column 890: unexpected character")
(error "line 3144 column 896: unexpected character")
(error "line 3144 column 898: unexpected character")
(error "line 3149 column 904: unexpected character")
(error "line 3149 column 906: unexpected character")
(error "line 3153 column 904: unexpected character")
(error "line 3153 column 906: unexpected character")
(error "line 3373 column 843: unexpected character")
(error "line 3373 column 845: unexpected character")
(error "line 3378 column 851: unexpected character")
(error "line 3378 column 853: unexpected character")
(error "line 3383 column 859: unexpected character")
(error "line 3383 column 861: unexpected character")
(error "line 3387 column 859: unexpected character")
(error "line 3387 column 861: unexpected character")
(error "line 3607 column 798: unexpected character")
(error "line 3607 column 800: unexpected character")
(error "line 3612 column 806: unexpected character")
(error "line 3612 column 808: unexpected character")
(error "line 3617 column 814: unexpected character")
(error "line 3617 column 816: unexpected character")
(error "line 3621 column 814: unexpected character")
(error "line 3621 column 816: unexpected character")
(error "line 3841 column 753: unexpected character")
(error "line 3841 column 755: unexpected character")
(error "line 3846 column 761: unexpected character")
(error "line 3846 column 763: unexpected character")
(error "line 3851 column 769: unexpected character")
(error "line 3851 column 771: unexpected character")
(error "line 3855 column 769: unexpected character")
(error "line 3855 column 771: unexpected character")
(error "line 4075 column 708: unexpected character")
(error "line 4075 column 710: unexpected character")
(error "line 4080 column 716: unexpected character")
(error "line 4080 column 718: unexpected character")
(error "line 4085 column 724: unexpected character")
(error "line 4085 column 726: unexpected character")
(error "line 4089 column 724: unexpected character")
(error "line 4089 column 726: unexpected character")
(error "line 4309 column 663: unexpected character")
(error "line 4309 column 665: unexpected character")
(error "line 4314 column 671: unexpected character")
(error "line 4314 column 673: unexpected character")
(error "line 4319 column 679: unexpected character")
(error "line 4319 column 681: unexpected character")
(error "line 4323 column 679: unexpected character")
(error "line 4323 column 681: unexpected character")
(error "line 4543 column 618: unexpected character")
(error "line 4543 column 620: unexpected character")
(error "line 4548 column 626: unexpected character")
(error "line 4548 column 628: unexpected character")
(error "line 4553 column 634: unexpected character")
(error "line 4553 column 636: unexpected character")
(error "line 4557 column 634: unexpected character")
(error "line 4557 column 636: unexpected character")
(error "line 4777 column 573: unexpected character")
(error "line 4777 column 575: unexpected character")
(error "line 4782 column 581: unexpected character")
(error "line 4782 column 583: unexpected character")
(error "line 4787 column 589: unexpected character")
(error "line 4787 column 591: unexpected character")
(error "line 4791 column 589: unexpected character")
(error "line 4791 column 591: unexpected character")
(error "line 5011 column 528: unexpected character")
(error "line 5011 column 530: unexpected character")
(error "line 5016 column 536: unexpected character")
(error "line 5016 column 538: unexpected character")
(error "line 5021 column 544: unexpected character")
(error "line 5021 column 546: unexpected character")
(error "line 5025 column 544: unexpected character")
(error "line 5025 column 546: unexpected character")
(error "line 5245 column 483: unexpected character")
(error "line 5245 column 485: unexpected character")
(error "line 5250 column 491: unexpected character")
(error "line 5250 column 493: unexpected character")
(error "line 5255 column 499: unexpected character")
(error "line 5255 column 501: unexpected character")
(error "line 5259 column 499: unexpected character")
(error "line 5259 column 501: unexpected character")
(error "line 5479 column 438: unexpected character")
(error "line 5479 column 440: unexpected character")
(error "line 5484 column 446: unexpected character")
(error "line 5484 column 448: unexpected character")
(error "line 5489 column 454: unexpected character")
(error "line 5489 column 456: unexpected character")
(error "line 5493 column 454: unexpected character")
(error "line 5493 column 456: unexpected character")
(error "line 5713 column 393: unexpected character")
(error "line 5713 column 395: unexpected character")
(error "line 5718 column 401: unexpected character")
(error "line 5718 column 403: unexpected character")
(error "line 5723 column 409: unexpected character")
(error "line 5723 column 411: unexpected character")
(error "line 5727 column 409: unexpected character")
(error "line 5727 column 411: unexpected character")
(error "line 5947 column 348: unexpected character")
(error "line 5947 column 350: unexpected character")
(error "line 5952 column 356: unexpected character")
(error "line 5952 column 358: unexpected character")
(error "line 5957 column 364: unexpected character")
(error "line 5957 column 366: unexpected character")
(error "line 5961 column 364: unexpected character")
(error "line 5961 column 366: unexpected character")
(error "line 6181 column 303: unexpected character")
(error "line 6181 column 305: unexpected character")
(error "line 6186 column 311: unexpected character")
(error "line 6186 column 313: unexpected character")
(error "line 6191 column 319: unexpected character")
(error "line 6191 column 321: unexpected character")
(error "line 6195 column 319: unexpected character")
(error "line 6195 column 321: unexpected character")
(error "line 6415 column 258: unexpected character")
(error "line 6415 column 260: unexpected character")
(error "line 6420 column 266: unexpected character")
(error "line 6420 column 268: unexpected character")
(error "line 6425 column 274: unexpected character")
(error "line 6425 column 276: unexpected character")
(error "line 6429 column 274: unexpected character")
(error "line 6429 column 276: unexpected character")
(error "line 6649 column 213: unexpected character")
(error "line 6649 column 215: unexpected character")
(error "line 6654 column 221: unexpected character")
(error "line 6654 column 223: unexpected character")
(error "line 6659 column 229: unexpected character")
(error "line 6659 column 231: unexpected character")
(error "line 6663 column 229: unexpected character")
(error "line 6663 column 231: unexpected character")
(error "line 6883 column 168: unexpected character")
(error "line 6883 column 170: unexpected character")
(error "line 6888 column 176: unexpected character")
(error "line 6888 column 178: unexpected character")
(error "line 6893 column 184: unexpected character")
(error "line 6893 column 186: unexpected character")
(error "line 6897 column 184: unexpected character")
(error "line 6897 column 186: unexpected character")
(error "line 7117 column 123: unexpected character")
(error "line 7117 column 125: unexpected character")
(error "line 7122 column 131: unexpected character")
(error "line 7122 column 133: unexpected character")
(error "line 7127 column 139: unexpected character")
(error "line 7127 column 141: unexpected character")
(error "line 7131 column 139: unexpected character")
(error "line 7131 column 141: unexpected character")
(error "line 7351 column 78: unexpected character")
(error "line 7351 column 80: unexpected character")
(error "line 7356 column 86: unexpected character")
(error "line 7356 column 88: unexpected character")
(error "line 7361 column 94: unexpected character")
(error "line 7361 column 96: unexpected character")
(error "line 7365 column 94: unexpected character")
(error "line 7365 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000008.smt2
(error "line 35 column 48: unexpected character")
(error "line 35 column 50: unexpected character")
(error "line 43 column 48: unexpected character")
(error "line 43 column 50: unexpected character")
(error "line 51 column 49: unexpected character")
(error "line 51 column 51: unexpected character")
(error "line 59 column 49: unexpected character")
(error "line 59 column 51: unexpected character")
(error "line 67 column 49: unexpected character")
(error "line 67 column 51: unexpected character")
(error "line 75 column 49: unexpected character")
(error "line 75 column 51: unexpected character")
(error "line 83 column 49: unexpected character")
(error "line 83 column 51: unexpected character")
(error "line 91 column 49: unexpected character")
(error "line 91 column 51: unexpected character")
(error "line 99 column 49: unexpected character")
(error "line 99 column 51: unexpected character")
(error "line 107 column 49: unexpected character")
(error "line 107 column 51: unexpected character")
(error "line 115 column 49: unexpected character")
(error "line 115 column 51: unexpected character")
(error "line 123 column 49: unexpected character")
(error "line 123 column 51: unexpected character")
(error "line 131 column 48: unexpected character")
(error "line 131 column 50: unexpected character")
(error "line 139 column 49: unexpected character")
(error "line 139 column 51: unexpected character")
(error "line 147 column 49: unexpected character")
(error "line 147 column 51: unexpected character")
(error "line 155 column 49: unexpected character")
(error "line 155 column 51: unexpected character")
(error "line 163 column 49: unexpected character")
(error "line 163 column 51: unexpected character")
(error "line 171 column 49: unexpected character")
(error "line 171 column 51: unexpected character")
(error "line 179 column 49: unexpected character")
(error "line 179 column 51: unexpected character")
(error "line 187 column 49: unexpected character")
(error "line 187 column 51: unexpected character")
(error "line 195 column 49: unexpected character")
(error "line 195 column 51: unexpected character")
(error "line 203 column 48: unexpected character")
(error "line 203 column 50: unexpected character")
(error "line 211 column 48: unexpected character")
(error "line 211 column 50: unexpected character")
(error "line 219 column 48: unexpected character")
(error "line 219 column 50: unexpected character")
(error "line 227 column 48: unexpected character")
(error "line 227 column 50: unexpected character")
(error "line 235 column 48: unexpected character")
(error "line 235 column 50: unexpected character")
(error "line 243 column 48: unexpected character")
(error "line 243 column 50: unexpected character")
(error "line 251 column 48: unexpected character")
(error "line 251 column 50: unexpected character")
(error "line 729 column 1267: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 729 column 1302: unexpected character")
(error "line 729 column 1304: unexpected character")
(error "line 734 column 1310: unexpected character")
(error "line 734 column 1312: unexpected character")
(error "line 739 column 1318: unexpected character")
(error "line 739 column 1320: unexpected character")
(error "line 743 column 1318: unexpected character")
(error "line 743 column 1320: unexpected character")
(error "line 963 column 1257: unexpected character")
(error "line 963 column 1259: unexpected character")
(error "line 968 column 1265: unexpected character")
(error "line 968 column 1267: unexpected character")
(error "line 973 column 1273: unexpected character")
(error "line 973 column 1275: unexpected character")
(error "line 977 column 1273: unexpected character")
(error "line 977 column 1275: unexpected character")
(error "line 1197 column 1212: unexpected character")
(error "line 1197 column 1214: unexpected character")
(error "line 1202 column 1220: unexpected character")
(error "line 1202 column 1222: unexpected character")
(error "line 1207 column 1228: unexpected character")
(error "line 1207 column 1230: unexpected character")
(error "line 1211 column 1228: unexpected character")
(error "line 1211 column 1230: unexpected character")
(error "line 1431 column 1167: unexpected character")
(error "line 1431 column 1169: unexpected character")
(error "line 1436 column 1175: unexpected character")
(error "line 1436 column 1177: unexpected character")
(error "line 1441 column 1183: unexpected character")
(error "line 1441 column 1185: unexpected character")
(error "line 1445 column 1183: unexpected character")
(error "line 1445 column 1185: unexpected character")
(error "line 1665 column 1122: unexpected character")
(error "line 1665 column 1124: unexpected character")
(error "line 1670 column 1130: unexpected character")
(error "line 1670 column 1132: unexpected character")
(error "line 1675 column 1138: unexpected character")
(error "line 1675 column 1140: unexpected character")
(error "line 1679 column 1138: unexpected character")
(error "line 1679 column 1140: unexpected character")
(error "line 1899 column 1077: unexpected character")
(error "line 1899 column 1079: unexpected character")
(error "line 1904 column 1085: unexpected character")
(error "line 1904 column 1087: unexpected character")
(error "line 1909 column 1093: unexpected character")
(error "line 1909 column 1095: unexpected character")
(error "line 1913 column 1093: unexpected character")
(error "line 1913 column 1095: unexpected character")
(error "line 2133 column 1032: unexpected character")
(error "line 2133 column 1034: unexpected character")
(error "line 2138 column 1040: unexpected character")
(error "line 2138 column 1042: unexpected character")
(error "line 2143 column 1048: unexpected character")
(error "line 2143 column 1050: unexpected character")
(error "line 2147 column 1048: unexpected character")
(error "line 2147 column 1050: unexpected character")
(error "line 2367 column 987: unexpected character")
(error "line 2367 column 989: unexpected character")
(error "line 2372 column 995: unexpected character")
(error "line 2372 column 997: unexpected character")
(error "line 2377 column 1003: unexpected character")
(error "line 2377 column 1005: unexpected character")
(error "line 2381 column 1003: unexpected character")
(error "line 2381 column 1005: unexpected character")
(error "line 2627 column 937: unexpected character")
(error "line 2627 column 939: unexpected character")
(error "line 2632 column 945: unexpected character")
(error "line 2632 column 947: unexpected character")
(error "line 2637 column 953: unexpected character")
(error "line 2637 column 955: unexpected character")
(error "line 2641 column 953: unexpected character")
(error "line 2641 column 955: unexpected character")
(error "line 2861 column 892: unexpected character")
(error "line 2861 column 894: unexpected character")
(error "line 2866 column 900: unexpected character")
(error "line 2866 column 902: unexpected character")
(error "line 2871 column 908: unexpected character")
(error "line 2871 column 910: unexpected character")
(error "line 2875 column 908: unexpected character")
(error "line 2875 column 910: unexpected character")
(error "line 3121 column 843: unexpected character")
(error "line 3121 column 845: unexpected character")
(error "line 3126 column 851: unexpected character")
(error "line 3126 column 853: unexpected character")
(error "line 3131 column 859: unexpected character")
(error "line 3131 column 861: unexpected character")
(error "line 3135 column 859: unexpected character")
(error "line 3135 column 861: unexpected character")
(error "line 3355 column 798: unexpected character")
(error "line 3355 column 800: unexpected character")
(error "line 3360 column 806: unexpected character")
(error "line 3360 column 808: unexpected character")
(error "line 3365 column 814: unexpected character")
(error "line 3365 column 816: unexpected character")
(error "line 3369 column 814: unexpected character")
(error "line 3369 column 816: unexpected character")
(error "line 3589 column 753: unexpected character")
(error "line 3589 column 755: unexpected character")
(error "line 3594 column 761: unexpected character")
(error "line 3594 column 763: unexpected character")
(error "line 3599 column 769: unexpected character")
(error "line 3599 column 771: unexpected character")
(error "line 3603 column 769: unexpected character")
(error "line 3603 column 771: unexpected character")
(error "line 3823 column 708: unexpected character")
(error "line 3823 column 710: unexpected character")
(error "line 3828 column 716: unexpected character")
(error "line 3828 column 718: unexpected character")
(error "line 3833 column 724: unexpected character")
(error "line 3833 column 726: unexpected character")
(error "line 3837 column 724: unexpected character")
(error "line 3837 column 726: unexpected character")
(error "line 4057 column 663: unexpected character")
(error "line 4057 column 665: unexpected character")
(error "line 4062 column 671: unexpected character")
(error "line 4062 column 673: unexpected character")
(error "line 4067 column 679: unexpected character")
(error "line 4067 column 681: unexpected character")
(error "line 4071 column 679: unexpected character")
(error "line 4071 column 681: unexpected character")
(error "line 4291 column 618: unexpected character")
(error "line 4291 column 620: unexpected character")
(error "line 4296 column 626: unexpected character")
(error "line 4296 column 628: unexpected character")
(error "line 4301 column 634: unexpected character")
(error "line 4301 column 636: unexpected character")
(error "line 4305 column 634: unexpected character")
(error "line 4305 column 636: unexpected character")
(error "line 4525 column 573: unexpected character")
(error "line 4525 column 575: unexpected character")
(error "line 4530 column 581: unexpected character")
(error "line 4530 column 583: unexpected character")
(error "line 4535 column 589: unexpected character")
(error "line 4535 column 591: unexpected character")
(error "line 4539 column 589: unexpected character")
(error "line 4539 column 591: unexpected character")
(error "line 4759 column 528: unexpected character")
(error "line 4759 column 530: unexpected character")
(error "line 4764 column 536: unexpected character")
(error "line 4764 column 538: unexpected character")
(error "line 4769 column 544: unexpected character")
(error "line 4769 column 546: unexpected character")
(error "line 4773 column 544: unexpected character")
(error "line 4773 column 546: unexpected character")
(error "line 4993 column 483: unexpected character")
(error "line 4993 column 485: unexpected character")
(error "line 4998 column 491: unexpected character")
(error "line 4998 column 493: unexpected character")
(error "line 5003 column 499: unexpected character")
(error "line 5003 column 501: unexpected character")
(error "line 5007 column 499: unexpected character")
(error "line 5007 column 501: unexpected character")
(error "line 5227 column 438: unexpected character")
(error "line 5227 column 440: unexpected character")
(error "line 5232 column 446: unexpected character")
(error "line 5232 column 448: unexpected character")
(error "line 5237 column 454: unexpected character")
(error "line 5237 column 456: unexpected character")
(error "line 5241 column 454: unexpected character")
(error "line 5241 column 456: unexpected character")
(error "line 5461 column 393: unexpected character")
(error "line 5461 column 395: unexpected character")
(error "line 5466 column 401: unexpected character")
(error "line 5466 column 403: unexpected character")
(error "line 5471 column 409: unexpected character")
(error "line 5471 column 411: unexpected character")
(error "line 5475 column 409: unexpected character")
(error "line 5475 column 411: unexpected character")
(error "line 5695 column 348: unexpected character")
(error "line 5695 column 350: unexpected character")
(error "line 5700 column 356: unexpected character")
(error "line 5700 column 358: unexpected character")
(error "line 5705 column 364: unexpected character")
(error "line 5705 column 366: unexpected character")
(error "line 5709 column 364: unexpected character")
(error "line 5709 column 366: unexpected character")
(error "line 5929 column 303: unexpected character")
(error "line 5929 column 305: unexpected character")
(error "line 5934 column 311: unexpected character")
(error "line 5934 column 313: unexpected character")
(error "line 5939 column 319: unexpected character")
(error "line 5939 column 321: unexpected character")
(error "line 5943 column 319: unexpected character")
(error "line 5943 column 321: unexpected character")
(error "line 6163 column 258: unexpected character")
(error "line 6163 column 260: unexpected character")
(error "line 6168 column 266: unexpected character")
(error "line 6168 column 268: unexpected character")
(error "line 6173 column 274: unexpected character")
(error "line 6173 column 276: unexpected character")
(error "line 6177 column 274: unexpected character")
(error "line 6177 column 276: unexpected character")
(error "line 6397 column 213: unexpected character")
(error "line 6397 column 215: unexpected character")
(error "line 6402 column 221: unexpected character")
(error "line 6402 column 223: unexpected character")
(error "line 6407 column 229: unexpected character")
(error "line 6407 column 231: unexpected character")
(error "line 6411 column 229: unexpected character")
(error "line 6411 column 231: unexpected character")
(error "line 6631 column 168: unexpected character")
(error "line 6631 column 170: unexpected character")
(error "line 6636 column 176: unexpected character")
(error "line 6636 column 178: unexpected character")
(error "line 6641 column 184: unexpected character")
(error "line 6641 column 186: unexpected character")
(error "line 6645 column 184: unexpected character")
(error "line 6645 column 186: unexpected character")
(error "line 6865 column 123: unexpected character")
(error "line 6865 column 125: unexpected character")
(error "line 6870 column 131: unexpected character")
(error "line 6870 column 133: unexpected character")
(error "line 6875 column 139: unexpected character")
(error "line 6875 column 141: unexpected character")
(error "line 6879 column 139: unexpected character")
(error "line 6879 column 141: unexpected character")
(error "line 7099 column 78: unexpected character")
(error "line 7099 column 80: unexpected character")
(error "line 7104 column 86: unexpected character")
(error "line 7104 column 88: unexpected character")
(error "line 7109 column 94: unexpected character")
(error "line 7109 column 96: unexpected character")
(error "line 7113 column 94: unexpected character")
(error "line 7113 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000009.smt2
(error "line 34 column 48: unexpected character")
(error "line 34 column 50: unexpected character")
(error "line 42 column 48: unexpected character")
(error "line 42 column 50: unexpected character")
(error "line 50 column 49: unexpected character")
(error "line 50 column 51: unexpected character")
(error "line 58 column 49: unexpected character")
(error "line 58 column 51: unexpected character")
(error "line 66 column 49: unexpected character")
(error "line 66 column 51: unexpected character")
(error "line 74 column 49: unexpected character")
(error "line 74 column 51: unexpected character")
(error "line 82 column 49: unexpected character")
(error "line 82 column 51: unexpected character")
(error "line 90 column 49: unexpected character")
(error "line 90 column 51: unexpected character")
(error "line 98 column 49: unexpected character")
(error "line 98 column 51: unexpected character")
(error "line 106 column 49: unexpected character")
(error "line 106 column 51: unexpected character")
(error "line 114 column 49: unexpected character")
(error "line 114 column 51: unexpected character")
(error "line 122 column 49: unexpected character")
(error "line 122 column 51: unexpected character")
(error "line 130 column 48: unexpected character")
(error "line 130 column 50: unexpected character")
(error "line 138 column 49: unexpected character")
(error "line 138 column 51: unexpected character")
(error "line 146 column 49: unexpected character")
(error "line 146 column 51: unexpected character")
(error "line 154 column 49: unexpected character")
(error "line 154 column 51: unexpected character")
(error "line 162 column 49: unexpected character")
(error "line 162 column 51: unexpected character")
(error "line 170 column 49: unexpected character")
(error "line 170 column 51: unexpected character")
(error "line 178 column 49: unexpected character")
(error "line 178 column 51: unexpected character")
(error "line 186 column 49: unexpected character")
(error "line 186 column 51: unexpected character")
(error "line 194 column 48: unexpected character")
(error "line 194 column 50: unexpected character")
(error "line 202 column 48: unexpected character")
(error "line 202 column 50: unexpected character")
(error "line 210 column 48: unexpected character")
(error "line 210 column 50: unexpected character")
(error "line 218 column 48: unexpected character")
(error "line 218 column 50: unexpected character")
(error "line 226 column 48: unexpected character")
(error "line 226 column 50: unexpected character")
(error "line 234 column 48: unexpected character")
(error "line 234 column 50: unexpected character")
(error "line 242 column 48: unexpected character")
(error "line 242 column 50: unexpected character")
(error "line 711 column 1222: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 711 column 1257: unexpected character")
(error "line 711 column 1259: unexpected character")
(error "line 716 column 1265: unexpected character")
(error "line 716 column 1267: unexpected character")
(error "line 721 column 1273: unexpected character")
(error "line 721 column 1275: unexpected character")
(error "line 725 column 1273: unexpected character")
(error "line 725 column 1275: unexpected character")
(error "line 945 column 1212: unexpected character")
(error "line 945 column 1214: unexpected character")
(error "line 950 column 1220: unexpected character")
(error "line 950 column 1222: unexpected character")
(error "line 955 column 1228: unexpected character")
(error "line 955 column 1230: unexpected character")
(error "line 959 column 1228: unexpected character")
(error "line 959 column 1230: unexpected character")
(error "line 1179 column 1167: unexpected character")
(error "line 1179 column 1169: unexpected character")
(error "line 1184 column 1175: unexpected character")
(error "line 1184 column 1177: unexpected character")
(error "line 1189 column 1183: unexpected character")
(error "line 1189 column 1185: unexpected character")
(error "line 1193 column 1183: unexpected character")
(error "line 1193 column 1185: unexpected character")
(error "line 1413 column 1122: unexpected character")
(error "line 1413 column 1124: unexpected character")
(error "line 1418 column 1130: unexpected character")
(error "line 1418 column 1132: unexpected character")
(error "line 1423 column 1138: unexpected character")
(error "line 1423 column 1140: unexpected character")
(error "line 1427 column 1138: unexpected character")
(error "line 1427 column 1140: unexpected character")
(error "line 1647 column 1077: unexpected character")
(error "line 1647 column 1079: unexpected character")
(error "line 1652 column 1085: unexpected character")
(error "line 1652 column 1087: unexpected character")
(error "line 1657 column 1093: unexpected character")
(error "line 1657 column 1095: unexpected character")
(error "line 1661 column 1093: unexpected character")
(error "line 1661 column 1095: unexpected character")
(error "line 1881 column 1032: unexpected character")
(error "line 1881 column 1034: unexpected character")
(error "line 1886 column 1040: unexpected character")
(error "line 1886 column 1042: unexpected character")
(error "line 1891 column 1048: unexpected character")
(error "line 1891 column 1050: unexpected character")
(error "line 1895 column 1048: unexpected character")
(error "line 1895 column 1050: unexpected character")
(error "line 2115 column 987: unexpected character")
(error "line 2115 column 989: unexpected character")
(error "line 2120 column 995: unexpected character")
(error "line 2120 column 997: unexpected character")
(error "line 2125 column 1003: unexpected character")
(error "line 2125 column 1005: unexpected character")
(error "line 2129 column 1003: unexpected character")
(error "line 2129 column 1005: unexpected character")
(error "line 2349 column 942: unexpected character")
(error "line 2349 column 944: unexpected character")
(error "line 2354 column 950: unexpected character")
(error "line 2354 column 952: unexpected character")
(error "line 2359 column 958: unexpected character")
(error "line 2359 column 960: unexpected character")
(error "line 2363 column 958: unexpected character")
(error "line 2363 column 960: unexpected character")
(error "line 2609 column 892: unexpected character")
(error "line 2609 column 894: unexpected character")
(error "line 2614 column 900: unexpected character")
(error "line 2614 column 902: unexpected character")
(error "line 2619 column 908: unexpected character")
(error "line 2619 column 910: unexpected character")
(error "line 2623 column 908: unexpected character")
(error "line 2623 column 910: unexpected character")
(error "line 2843 column 847: unexpected character")
(error "line 2843 column 849: unexpected character")
(error "line 2848 column 855: unexpected character")
(error "line 2848 column 857: unexpected character")
(error "line 2853 column 863: unexpected character")
(error "line 2853 column 865: unexpected character")
(error "line 2857 column 863: unexpected character")
(error "line 2857 column 865: unexpected character")
(error "line 3103 column 798: unexpected character")
(error "line 3103 column 800: unexpected character")
(error "line 3108 column 806: unexpected character")
(error "line 3108 column 808: unexpected character")
(error "line 3113 column 814: unexpected character")
(error "line 3113 column 816: unexpected character")
(error "line 3117 column 814: unexpected character")
(error "line 3117 column 816: unexpected character")
(error "line 3337 column 753: unexpected character")
(error "line 3337 column 755: unexpected character")
(error "line 3342 column 761: unexpected character")
(error "line 3342 column 763: unexpected character")
(error "line 3347 column 769: unexpected character")
(error "line 3347 column 771: unexpected character")
(error "line 3351 column 769: unexpected character")
(error "line 3351 column 771: unexpected character")
(error "line 3571 column 708: unexpected character")
(error "line 3571 column 710: unexpected character")
(error "line 3576 column 716: unexpected character")
(error "line 3576 column 718: unexpected character")
(error "line 3581 column 724: unexpected character")
(error "line 3581 column 726: unexpected character")
(error "line 3585 column 724: unexpected character")
(error "line 3585 column 726: unexpected character")
(error "line 3805 column 663: unexpected character")
(error "line 3805 column 665: unexpected character")
(error "line 3810 column 671: unexpected character")
(error "line 3810 column 673: unexpected character")
(error "line 3815 column 679: unexpected character")
(error "line 3815 column 681: unexpected character")
(error "line 3819 column 679: unexpected character")
(error "line 3819 column 681: unexpected character")
(error "line 4039 column 618: unexpected character")
(error "line 4039 column 620: unexpected character")
(error "line 4044 column 626: unexpected character")
(error "line 4044 column 628: unexpected character")
(error "line 4049 column 634: unexpected character")
(error "line 4049 column 636: unexpected character")
(error "line 4053 column 634: unexpected character")
(error "line 4053 column 636: unexpected character")
(error "line 4273 column 573: unexpected character")
(error "line 4273 column 575: unexpected character")
(error "line 4278 column 581: unexpected character")
(error "line 4278 column 583: unexpected character")
(error "line 4283 column 589: unexpected character")
(error "line 4283 column 591: unexpected character")
(error "line 4287 column 589: unexpected character")
(error "line 4287 column 591: unexpected character")
(error "line 4507 column 528: unexpected character")
(error "line 4507 column 530: unexpected character")
(error "line 4512 column 536: unexpected character")
(error "line 4512 column 538: unexpected character")
(error "line 4517 column 544: unexpected character")
(error "line 4517 column 546: unexpected character")
(error "line 4521 column 544: unexpected character")
(error "line 4521 column 546: unexpected character")
(error "line 4741 column 483: unexpected character")
(error "line 4741 column 485: unexpected character")
(error "line 4746 column 491: unexpected character")
(error "line 4746 column 493: unexpected character")
(error "line 4751 column 499: unexpected character")
(error "line 4751 column 501: unexpected character")
(error "line 4755 column 499: unexpected character")
(error "line 4755 column 501: unexpected character")
(error "line 4975 column 438: unexpected character")
(error "line 4975 column 440: unexpected character")
(error "line 4980 column 446: unexpected character")
(error "line 4980 column 448: unexpected character")
(error "line 4985 column 454: unexpected character")
(error "line 4985 column 456: unexpected character")
(error "line 4989 column 454: unexpected character")
(error "line 4989 column 456: unexpected character")
(error "line 5209 column 393: unexpected character")
(error "line 5209 column 395: unexpected character")
(error "line 5214 column 401: unexpected character")
(error "line 5214 column 403: unexpected character")
(error "line 5219 column 409: unexpected character")
(error "line 5219 column 411: unexpected character")
(error "line 5223 column 409: unexpected character")
(error "line 5223 column 411: unexpected character")
(error "line 5443 column 348: unexpected character")
(error "line 5443 column 350: unexpected character")
(error "line 5448 column 356: unexpected character")
(error "line 5448 column 358: unexpected character")
(error "line 5453 column 364: unexpected character")
(error "line 5453 column 366: unexpected character")
(error "line 5457 column 364: unexpected character")
(error "line 5457 column 366: unexpected character")
(error "line 5677 column 303: unexpected character")
(error "line 5677 column 305: unexpected character")
(error "line 5682 column 311: unexpected character")
(error "line 5682 column 313: unexpected character")
(error "line 5687 column 319: unexpected character")
(error "line 5687 column 321: unexpected character")
(error "line 5691 column 319: unexpected character")
(error "line 5691 column 321: unexpected character")
(error "line 5911 column 258: unexpected character")
(error "line 5911 column 260: unexpected character")
(error "line 5916 column 266: unexpected character")
(error "line 5916 column 268: unexpected character")
(error "line 5921 column 274: unexpected character")
(error "line 5921 column 276: unexpected character")
(error "line 5925 column 274: unexpected character")
(error "line 5925 column 276: unexpected character")
(error "line 6145 column 213: unexpected character")
(error "line 6145 column 215: unexpected character")
(error "line 6150 column 221: unexpected character")
(error "line 6150 column 223: unexpected character")
(error "line 6155 column 229: unexpected character")
(error "line 6155 column 231: unexpected character")
(error "line 6159 column 229: unexpected character")
(error "line 6159 column 231: unexpected character")
(error "line 6379 column 168: unexpected character")
(error "line 6379 column 170: unexpected character")
(error "line 6384 column 176: unexpected character")
(error "line 6384 column 178: unexpected character")
(error "line 6389 column 184: unexpected character")
(error "line 6389 column 186: unexpected character")
(error "line 6393 column 184: unexpected character")
(error "line 6393 column 186: unexpected character")
(error "line 6613 column 123: unexpected character")
(error "line 6613 column 125: unexpected character")
(error "line 6618 column 131: unexpected character")
(error "line 6618 column 133: unexpected character")
(error "line 6623 column 139: unexpected character")
(error "line 6623 column 141: unexpected character")
(error "line 6627 column 139: unexpected character")
(error "line 6627 column 141: unexpected character")
(error "line 6847 column 78: unexpected character")
(error "line 6847 column 80: unexpected character")
(error "line 6852 column 86: unexpected character")
(error "line 6852 column 88: unexpected character")
(error "line 6857 column 94: unexpected character")
(error "line 6857 column 96: unexpected character")
(error "line 6861 column 94: unexpected character")
(error "line 6861 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000010.smt2
(error "line 33 column 48: unexpected character")
(error "line 33 column 50: unexpected character")
(error "line 41 column 48: unexpected character")
(error "line 41 column 50: unexpected character")
(error "line 49 column 49: unexpected character")
(error "line 49 column 51: unexpected character")
(error "line 57 column 49: unexpected character")
(error "line 57 column 51: unexpected character")
(error "line 65 column 49: unexpected character")
(error "line 65 column 51: unexpected character")
(error "line 73 column 49: unexpected character")
(error "line 73 column 51: unexpected character")
(error "line 81 column 49: unexpected character")
(error "line 81 column 51: unexpected character")
(error "line 89 column 49: unexpected character")
(error "line 89 column 51: unexpected character")
(error "line 97 column 49: unexpected character")
(error "line 97 column 51: unexpected character")
(error "line 105 column 49: unexpected character")
(error "line 105 column 51: unexpected character")
(error "line 113 column 49: unexpected character")
(error "line 113 column 51: unexpected character")
(error "line 121 column 49: unexpected character")
(error "line 121 column 51: unexpected character")
(error "line 129 column 48: unexpected character")
(error "line 129 column 50: unexpected character")
(error "line 137 column 49: unexpected character")
(error "line 137 column 51: unexpected character")
(error "line 145 column 49: unexpected character")
(error "line 145 column 51: unexpected character")
(error "line 153 column 49: unexpected character")
(error "line 153 column 51: unexpected character")
(error "line 161 column 49: unexpected character")
(error "line 161 column 51: unexpected character")
(error "line 169 column 49: unexpected character")
(error "line 169 column 51: unexpected character")
(error "line 177 column 49: unexpected character")
(error "line 177 column 51: unexpected character")
(error "line 185 column 48: unexpected character")
(error "line 185 column 50: unexpected character")
(error "line 193 column 48: unexpected character")
(error "line 193 column 50: unexpected character")
(error "line 201 column 48: unexpected character")
(error "line 201 column 50: unexpected character")
(error "line 209 column 48: unexpected character")
(error "line 209 column 50: unexpected character")
(error "line 217 column 48: unexpected character")
(error "line 217 column 50: unexpected character")
(error "line 225 column 48: unexpected character")
(error "line 225 column 50: unexpected character")
(error "line 233 column 48: unexpected character")
(error "line 233 column 50: unexpected character")
(error "line 693 column 1177: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 693 column 1212: unexpected character")
(error "line 693 column 1214: unexpected character")
(error "line 698 column 1220: unexpected character")
(error "line 698 column 1222: unexpected character")
(error "line 703 column 1228: unexpected character")
(error "line 703 column 1230: unexpected character")
(error "line 707 column 1228: unexpected character")
(error "line 707 column 1230: unexpected character")
(error "line 927 column 1167: unexpected character")
(error "line 927 column 1169: unexpected character")
(error "line 932 column 1175: unexpected character")
(error "line 932 column 1177: unexpected character")
(error "line 937 column 1183: unexpected character")
(error "line 937 column 1185: unexpected character")
(error "line 941 column 1183: unexpected character")
(error "line 941 column 1185: unexpected character")
(error "line 1161 column 1122: unexpected character")
(error "line 1161 column 1124: unexpected character")
(error "line 1166 column 1130: unexpected character")
(error "line 1166 column 1132: unexpected character")
(error "line 1171 column 1138: unexpected character")
(error "line 1171 column 1140: unexpected character")
(error "line 1175 column 1138: unexpected character")
(error "line 1175 column 1140: unexpected character")
(error "line 1395 column 1077: unexpected character")
(error "line 1395 column 1079: unexpected character")
(error "line 1400 column 1085: unexpected character")
(error "line 1400 column 1087: unexpected character")
(error "line 1405 column 1093: unexpected character")
(error "line 1405 column 1095: unexpected character")
(error "line 1409 column 1093: unexpected character")
(error "line 1409 column 1095: unexpected character")
(error "line 1629 column 1032: unexpected character")
(error "line 1629 column 1034: unexpected character")
(error "line 1634 column 1040: unexpected character")
(error "line 1634 column 1042: unexpected character")
(error "line 1639 column 1048: unexpected character")
(error "line 1639 column 1050: unexpected character")
(error "line 1643 column 1048: unexpected character")
(error "line 1643 column 1050: unexpected character")
(error "line 1863 column 987: unexpected character")
(error "line 1863 column 989: unexpected character")
(error "line 1868 column 995: unexpected character")
(error "line 1868 column 997: unexpected character")
(error "line 1873 column 1003: unexpected character")
(error "line 1873 column 1005: unexpected character")
(error "line 1877 column 1003: unexpected character")
(error "line 1877 column 1005: unexpected character")
(error "line 2097 column 942: unexpected character")
(error "line 2097 column 944: unexpected character")
(error "line 2102 column 950: unexpected character")
(error "line 2102 column 952: unexpected character")
(error "line 2107 column 958: unexpected character")
(error "line 2107 column 960: unexpected character")
(error "line 2111 column 958: unexpected character")
(error "line 2111 column 960: unexpected character")
(error "line 2331 column 897: unexpected character")
(error "line 2331 column 899: unexpected character")
(error "line 2336 column 905: unexpected character")
(error "line 2336 column 907: unexpected character")
(error "line 2341 column 913: unexpected character")
(error "line 2341 column 915: unexpected character")
(error "line 2345 column 913: unexpected character")
(error "line 2345 column 915: unexpected character")
(error "line 2591 column 847: unexpected character")
(error "line 2591 column 849: unexpected character")
(error "line 2596 column 855: unexpected character")
(error "line 2596 column 857: unexpected character")
(error "line 2601 column 863: unexpected character")
(error "line 2601 column 865: unexpected character")
(error "line 2605 column 863: unexpected character")
(error "line 2605 column 865: unexpected character")
(error "line 2825 column 802: unexpected character")
(error "line 2825 column 804: unexpected character")
(error "line 2830 column 810: unexpected character")
(error "line 2830 column 812: unexpected character")
(error "line 2835 column 818: unexpected character")
(error "line 2835 column 820: unexpected character")
(error "line 2839 column 818: unexpected character")
(error "line 2839 column 820: unexpected character")
(error "line 3085 column 753: unexpected character")
(error "line 3085 column 755: unexpected character")
(error "line 3090 column 761: unexpected character")
(error "line 3090 column 763: unexpected character")
(error "line 3095 column 769: unexpected character")
(error "line 3095 column 771: unexpected character")
(error "line 3099 column 769: unexpected character")
(error "line 3099 column 771: unexpected character")
(error "line 3319 column 708: unexpected character")
(error "line 3319 column 710: unexpected character")
(error "line 3324 column 716: unexpected character")
(error "line 3324 column 718: unexpected character")
(error "line 3329 column 724: unexpected character")
(error "line 3329 column 726: unexpected character")
(error "line 3333 column 724: unexpected character")
(error "line 3333 column 726: unexpected character")
(error "line 3553 column 663: unexpected character")
(error "line 3553 column 665: unexpected character")
(error "line 3558 column 671: unexpected character")
(error "line 3558 column 673: unexpected character")
(error "line 3563 column 679: unexpected character")
(error "line 3563 column 681: unexpected character")
(error "line 3567 column 679: unexpected character")
(error "line 3567 column 681: unexpected character")
(error "line 3787 column 618: unexpected character")
(error "line 3787 column 620: unexpected character")
(error "line 3792 column 626: unexpected character")
(error "line 3792 column 628: unexpected character")
(error "line 3797 column 634: unexpected character")
(error "line 3797 column 636: unexpected character")
(error "line 3801 column 634: unexpected character")
(error "line 3801 column 636: unexpected character")
(error "line 4021 column 573: unexpected character")
(error "line 4021 column 575: unexpected character")
(error "line 4026 column 581: unexpected character")
(error "line 4026 column 583: unexpected character")
(error "line 4031 column 589: unexpected character")
(error "line 4031 column 591: unexpected character")
(error "line 4035 column 589: unexpected character")
(error "line 4035 column 591: unexpected character")
(error "line 4255 column 528: unexpected character")
(error "line 4255 column 530: unexpected character")
(error "line 4260 column 536: unexpected character")
(error "line 4260 column 538: unexpected character")
(error "line 4265 column 544: unexpected character")
(error "line 4265 column 546: unexpected character")
(error "line 4269 column 544: unexpected character")
(error "line 4269 column 546: unexpected character")
(error "line 4489 column 483: unexpected character")
(error "line 4489 column 485: unexpected character")
(error "line 4494 column 491: unexpected character")
(error "line 4494 column 493: unexpected character")
(error "line 4499 column 499: unexpected character")
(error "line 4499 column 501: unexpected character")
(error "line 4503 column 499: unexpected character")
(error "line 4503 column 501: unexpected character")
(error "line 4723 column 438: unexpected character")
(error "line 4723 column 440: unexpected character")
(error "line 4728 column 446: unexpected character")
(error "line 4728 column 448: unexpected character")
(error "line 4733 column 454: unexpected character")
(error "line 4733 column 456: unexpected character")
(error "line 4737 column 454: unexpected character")
(error "line 4737 column 456: unexpected character")
(error "line 4957 column 393: unexpected character")
(error "line 4957 column 395: unexpected character")
(error "line 4962 column 401: unexpected character")
(error "line 4962 column 403: unexpected character")
(error "line 4967 column 409: unexpected character")
(error "line 4967 column 411: unexpected character")
(error "line 4971 column 409: unexpected character")
(error "line 4971 column 411: unexpected character")
(error "line 5191 column 348: unexpected character")
(error "line 5191 column 350: unexpected character")
(error "line 5196 column 356: unexpected character")
(error "line 5196 column 358: unexpected character")
(error "line 5201 column 364: unexpected character")
(error "line 5201 column 366: unexpected character")
(error "line 5205 column 364: unexpected character")
(error "line 5205 column 366: unexpected character")
(error "line 5425 column 303: unexpected character")
(error "line 5425 column 305: unexpected character")
(error "line 5430 column 311: unexpected character")
(error "line 5430 column 313: unexpected character")
(error "line 5435 column 319: unexpected character")
(error "line 5435 column 321: unexpected character")
(error "line 5439 column 319: unexpected character")
(error "line 5439 column 321: unexpected character")
(error "line 5659 column 258: unexpected character")
(error "line 5659 column 260: unexpected character")
(error "line 5664 column 266: unexpected character")
(error "line 5664 column 268: unexpected character")
(error "line 5669 column 274: unexpected character")
(error "line 5669 column 276: unexpected character")
(error "line 5673 column 274: unexpected character")
(error "line 5673 column 276: unexpected character")
(error "line 5893 column 213: unexpected character")
(error "line 5893 column 215: unexpected character")
(error "line 5898 column 221: unexpected character")
(error "line 5898 column 223: unexpected character")
(error "line 5903 column 229: unexpected character")
(error "line 5903 column 231: unexpected character")
(error "line 5907 column 229: unexpected character")
(error "line 5907 column 231: unexpected character")
(error "line 6127 column 168: unexpected character")
(error "line 6127 column 170: unexpected character")
(error "line 6132 column 176: unexpected character")
(error "line 6132 column 178: unexpected character")
(error "line 6137 column 184: unexpected character")
(error "line 6137 column 186: unexpected character")
(error "line 6141 column 184: unexpected character")
(error "line 6141 column 186: unexpected character")
(error "line 6361 column 123: unexpected character")
(error "line 6361 column 125: unexpected character")
(error "line 6366 column 131: unexpected character")
(error "line 6366 column 133: unexpected character")
(error "line 6371 column 139: unexpected character")
(error "line 6371 column 141: unexpected character")
(error "line 6375 column 139: unexpected character")
(error "line 6375 column 141: unexpected character")
(error "line 6595 column 78: unexpected character")
(error "line 6595 column 80: unexpected character")
(error "line 6600 column 86: unexpected character")
(error "line 6600 column 88: unexpected character")
(error "line 6605 column 94: unexpected character")
(error "line 6605 column 96: unexpected character")
(error "line 6609 column 94: unexpected character")
(error "line 6609 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000011.smt2
(error "line 32 column 48: unexpected character")
(error "line 32 column 50: unexpected character")
(error "line 40 column 48: unexpected character")
(error "line 40 column 50: unexpected character")
(error "line 48 column 49: unexpected character")
(error "line 48 column 51: unexpected character")
(error "line 56 column 49: unexpected character")
(error "line 56 column 51: unexpected character")
(error "line 64 column 49: unexpected character")
(error "line 64 column 51: unexpected character")
(error "line 72 column 49: unexpected character")
(error "line 72 column 51: unexpected character")
(error "line 80 column 49: unexpected character")
(error "line 80 column 51: unexpected character")
(error "line 88 column 49: unexpected character")
(error "line 88 column 51: unexpected character")
(error "line 96 column 49: unexpected character")
(error "line 96 column 51: unexpected character")
(error "line 104 column 49: unexpected character")
(error "line 104 column 51: unexpected character")
(error "line 112 column 49: unexpected character")
(error "line 112 column 51: unexpected character")
(error "line 120 column 49: unexpected character")
(error "line 120 column 51: unexpected character")
(error "line 128 column 48: unexpected character")
(error "line 128 column 50: unexpected character")
(error "line 136 column 49: unexpected character")
(error "line 136 column 51: unexpected character")
(error "line 144 column 49: unexpected character")
(error "line 144 column 51: unexpected character")
(error "line 152 column 49: unexpected character")
(error "line 152 column 51: unexpected character")
(error "line 160 column 49: unexpected character")
(error "line 160 column 51: unexpected character")
(error "line 168 column 49: unexpected character")
(error "line 168 column 51: unexpected character")
(error "line 176 column 48: unexpected character")
(error "line 176 column 50: unexpected character")
(error "line 184 column 48: unexpected character")
(error "line 184 column 50: unexpected character")
(error "line 192 column 48: unexpected character")
(error "line 192 column 50: unexpected character")
(error "line 200 column 48: unexpected character")
(error "line 200 column 50: unexpected character")
(error "line 208 column 48: unexpected character")
(error "line 208 column 50: unexpected character")
(error "line 216 column 48: unexpected character")
(error "line 216 column 50: unexpected character")
(error "line 224 column 48: unexpected character")
(error "line 224 column 50: unexpected character")
(error "line 675 column 1132: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 675 column 1167: unexpected character")
(error "line 675 column 1169: unexpected character")
(error "line 680 column 1175: unexpected character")
(error "line 680 column 1177: unexpected character")
(error "line 685 column 1183: unexpected character")
(error "line 685 column 1185: unexpected character")
(error "line 689 column 1183: unexpected character")
(error "line 689 column 1185: unexpected character")
(error "line 909 column 1122: unexpected character")
(error "line 909 column 1124: unexpected character")
(error "line 914 column 1130: unexpected character")
(error "line 914 column 1132: unexpected character")
(error "line 919 column 1138: unexpected character")
(error "line 919 column 1140: unexpected character")
(error "line 923 column 1138: unexpected character")
(error "line 923 column 1140: unexpected character")
(error "line 1143 column 1077: unexpected character")
(error "line 1143 column 1079: unexpected character")
(error "line 1148 column 1085: unexpected character")
(error "line 1148 column 1087: unexpected character")
(error "line 1153 column 1093: unexpected character")
(error "line 1153 column 1095: unexpected character")
(error "line 1157 column 1093: unexpected character")
(error "line 1157 column 1095: unexpected character")
(error "line 1377 column 1032: unexpected character")
(error "line 1377 column 1034: unexpected character")
(error "line 1382 column 1040: unexpected character")
(error "line 1382 column 1042: unexpected character")
(error "line 1387 column 1048: unexpected character")
(error "line 1387 column 1050: unexpected character")
(error "line 1391 column 1048: unexpected character")
(error "line 1391 column 1050: unexpected character")
(error "line 1611 column 987: unexpected character")
(error "line 1611 column 989: unexpected character")
(error "line 1616 column 995: unexpected character")
(error "line 1616 column 997: unexpected character")
(error "line 1621 column 1003: unexpected character")
(error "line 1621 column 1005: unexpected character")
(error "line 1625 column 1003: unexpected character")
(error "line 1625 column 1005: unexpected character")
(error "line 1845 column 942: unexpected character")
(error "line 1845 column 944: unexpected character")
(error "line 1850 column 950: unexpected character")
(error "line 1850 column 952: unexpected character")
(error "line 1855 column 958: unexpected character")
(error "line 1855 column 960: unexpected character")
(error "line 1859 column 958: unexpected character")
(error "line 1859 column 960: unexpected character")
(error "line 2079 column 897: unexpected character")
(error "line 2079 column 899: unexpected character")
(error "line 2084 column 905: unexpected character")
(error "line 2084 column 907: unexpected character")
(error "line 2089 column 913: unexpected character")
(error "line 2089 column 915: unexpected character")
(error "line 2093 column 913: unexpected character")
(error "line 2093 column 915: unexpected character")
(error "line 2313 column 852: unexpected character")
(error "line 2313 column 854: unexpected character")
(error "line 2318 column 860: unexpected character")
(error "line 2318 column 862: unexpected character")
(error "line 2323 column 868: unexpected character")
(error "line 2323 column 870: unexpected character")
(error "line 2327 column 868: unexpected character")
(error "line 2327 column 870: unexpected character")
(error "line 2573 column 802: unexpected character")
(error "line 2573 column 804: unexpected character")
(error "line 2578 column 810: unexpected character")
(error "line 2578 column 812: unexpected character")
(error "line 2583 column 818: unexpected character")
(error "line 2583 column 820: unexpected character")
(error "line 2587 column 818: unexpected character")
(error "line 2587 column 820: unexpected character")
(error "line 2807 column 757: unexpected character")
(error "line 2807 column 759: unexpected character")
(error "line 2812 column 765: unexpected character")
(error "line 2812 column 767: unexpected character")
(error "line 2817 column 773: unexpected character")
(error "line 2817 column 775: unexpected character")
(error "line 2821 column 773: unexpected character")
(error "line 2821 column 775: unexpected character")
(error "line 3067 column 708: unexpected character")
(error "line 3067 column 710: unexpected character")
(error "line 3072 column 716: unexpected character")
(error "line 3072 column 718: unexpected character")
(error "line 3077 column 724: unexpected character")
(error "line 3077 column 726: unexpected character")
(error "line 3081 column 724: unexpected character")
(error "line 3081 column 726: unexpected character")
(error "line 3301 column 663: unexpected character")
(error "line 3301 column 665: unexpected character")
(error "line 3306 column 671: unexpected character")
(error "line 3306 column 673: unexpected character")
(error "line 3311 column 679: unexpected character")
(error "line 3311 column 681: unexpected character")
(error "line 3315 column 679: unexpected character")
(error "line 3315 column 681: unexpected character")
(error "line 3535 column 618: unexpected character")
(error "line 3535 column 620: unexpected character")
(error "line 3540 column 626: unexpected character")
(error "line 3540 column 628: unexpected character")
(error "line 3545 column 634: unexpected character")
(error "line 3545 column 636: unexpected character")
(error "line 3549 column 634: unexpected character")
(error "line 3549 column 636: unexpected character")
(error "line 3769 column 573: unexpected character")
(error "line 3769 column 575: unexpected character")
(error "line 3774 column 581: unexpected character")
(error "line 3774 column 583: unexpected character")
(error "line 3779 column 589: unexpected character")
(error "line 3779 column 591: unexpected character")
(error "line 3783 column 589: unexpected character")
(error "line 3783 column 591: unexpected character")
(error "line 4003 column 528: unexpected character")
(error "line 4003 column 530: unexpected character")
(error "line 4008 column 536: unexpected character")
(error "line 4008 column 538: unexpected character")
(error "line 4013 column 544: unexpected character")
(error "line 4013 column 546: unexpected character")
(error "line 4017 column 544: unexpected character")
(error "line 4017 column 546: unexpected character")
(error "line 4237 column 483: unexpected character")
(error "line 4237 column 485: unexpected character")
(error "line 4242 column 491: unexpected character")
(error "line 4242 column 493: unexpected character")
(error "line 4247 column 499: unexpected character")
(error "line 4247 column 501: unexpected character")
(error "line 4251 column 499: unexpected character")
(error "line 4251 column 501: unexpected character")
(error "line 4471 column 438: unexpected character")
(error "line 4471 column 440: unexpected character")
(error "line 4476 column 446: unexpected character")
(error "line 4476 column 448: unexpected character")
(error "line 4481 column 454: unexpected character")
(error "line 4481 column 456: unexpected character")
(error "line 4485 column 454: unexpected character")
(error "line 4485 column 456: unexpected character")
(error "line 4705 column 393: unexpected character")
(error "line 4705 column 395: unexpected character")
(error "line 4710 column 401: unexpected character")
(error "line 4710 column 403: unexpected character")
(error "line 4715 column 409: unexpected character")
(error "line 4715 column 411: unexpected character")
(error "line 4719 column 409: unexpected character")
(error "line 4719 column 411: unexpected character")
(error "line 4939 column 348: unexpected character")
(error "line 4939 column 350: unexpected character")
(error "line 4944 column 356: unexpected character")
(error "line 4944 column 358: unexpected character")
(error "line 4949 column 364: unexpected character")
(error "line 4949 column 366: unexpected character")
(error "line 4953 column 364: unexpected character")
(error "line 4953 column 366: unexpected character")
(error "line 5173 column 303: unexpected character")
(error "line 5173 column 305: unexpected character")
(error "line 5178 column 311: unexpected character")
(error "line 5178 column 313: unexpected character")
(error "line 5183 column 319: unexpected character")
(error "line 5183 column 321: unexpected character")
(error "line 5187 column 319: unexpected character")
(error "line 5187 column 321: unexpected character")
(error "line 5407 column 258: unexpected character")
(error "line 5407 column 260: unexpected character")
(error "line 5412 column 266: unexpected character")
(error "line 5412 column 268: unexpected character")
(error "line 5417 column 274: unexpected character")
(error "line 5417 column 276: unexpected character")
(error "line 5421 column 274: unexpected character")
(error "line 5421 column 276: unexpected character")
(error "line 5641 column 213: unexpected character")
(error "line 5641 column 215: unexpected character")
(error "line 5646 column 221: unexpected character")
(error "line 5646 column 223: unexpected character")
(error "line 5651 column 229: unexpected character")
(error "line 5651 column 231: unexpected character")
(error "line 5655 column 229: unexpected character")
(error "line 5655 column 231: unexpected character")
(error "line 5875 column 168: unexpected character")
(error "line 5875 column 170: unexpected character")
(error "line 5880 column 176: unexpected character")
(error "line 5880 column 178: unexpected character")
(error "line 5885 column 184: unexpected character")
(error "line 5885 column 186: unexpected character")
(error "line 5889 column 184: unexpected character")
(error "line 5889 column 186: unexpected character")
(error "line 6109 column 123: unexpected character")
(error "line 6109 column 125: unexpected character")
(error "line 6114 column 131: unexpected character")
(error "line 6114 column 133: unexpected character")
(error "line 6119 column 139: unexpected character")
(error "line 6119 column 141: unexpected character")
(error "line 6123 column 139: unexpected character")
(error "line 6123 column 141: unexpected character")
(error "line 6343 column 78: unexpected character")
(error "line 6343 column 80: unexpected character")
(error "line 6348 column 86: unexpected character")
(error "line 6348 column 88: unexpected character")
(error "line 6353 column 94: unexpected character")
(error "line 6353 column 96: unexpected character")
(error "line 6357 column 94: unexpected character")
(error "line 6357 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000012.smt2
(error "line 31 column 48: unexpected character")
(error "line 31 column 50: unexpected character")
(error "line 39 column 48: unexpected character")
(error "line 39 column 50: unexpected character")
(error "line 47 column 49: unexpected character")
(error "line 47 column 51: unexpected character")
(error "line 55 column 49: unexpected character")
(error "line 55 column 51: unexpected character")
(error "line 63 column 49: unexpected character")
(error "line 63 column 51: unexpected character")
(error "line 71 column 49: unexpected character")
(error "line 71 column 51: unexpected character")
(error "line 79 column 49: unexpected character")
(error "line 79 column 51: unexpected character")
(error "line 87 column 49: unexpected character")
(error "line 87 column 51: unexpected character")
(error "line 95 column 49: unexpected character")
(error "line 95 column 51: unexpected character")
(error "line 103 column 49: unexpected character")
(error "line 103 column 51: unexpected character")
(error "line 111 column 49: unexpected character")
(error "line 111 column 51: unexpected character")
(error "line 119 column 49: unexpected character")
(error "line 119 column 51: unexpected character")
(error "line 127 column 48: unexpected character")
(error "line 127 column 50: unexpected character")
(error "line 135 column 49: unexpected character")
(error "line 135 column 51: unexpected character")
(error "line 143 column 49: unexpected character")
(error "line 143 column 51: unexpected character")
(error "line 151 column 49: unexpected character")
(error "line 151 column 51: unexpected character")
(error "line 159 column 49: unexpected character")
(error "line 159 column 51: unexpected character")
(error "line 167 column 48: unexpected character")
(error "line 167 column 50: unexpected character")
(error "line 175 column 48: unexpected character")
(error "line 175 column 50: unexpected character")
(error "line 183 column 48: unexpected character")
(error "line 183 column 50: unexpected character")
(error "line 191 column 48: unexpected character")
(error "line 191 column 50: unexpected character")
(error "line 199 column 48: unexpected character")
(error "line 199 column 50: unexpected character")
(error "line 207 column 48: unexpected character")
(error "line 207 column 50: unexpected character")
(error "line 215 column 48: unexpected character")
(error "line 215 column 50: unexpected character")
(error "line 657 column 1087: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 657 column 1122: unexpected character")
(error "line 657 column 1124: unexpected character")
(error "line 662 column 1130: unexpected character")
(error "line 662 column 1132: unexpected character")
(error "line 667 column 1138: unexpected character")
(error "line 667 column 1140: unexpected character")
(error "line 671 column 1138: unexpected character")
(error "line 671 column 1140: unexpected character")
(error "line 891 column 1077: unexpected character")
(error "line 891 column 1079: unexpected character")
(error "line 896 column 1085: unexpected character")
(error "line 896 column 1087: unexpected character")
(error "line 901 column 1093: unexpected character")
(error "line 901 column 1095: unexpected character")
(error "line 905 column 1093: unexpected character")
(error "line 905 column 1095: unexpected character")
(error "line 1125 column 1032: unexpected character")
(error "line 1125 column 1034: unexpected character")
(error "line 1130 column 1040: unexpected character")
(error "line 1130 column 1042: unexpected character")
(error "line 1135 column 1048: unexpected character")
(error "line 1135 column 1050: unexpected character")
(error "line 1139 column 1048: unexpected character")
(error "line 1139 column 1050: unexpected character")
(error "line 1359 column 987: unexpected character")
(error "line 1359 column 989: unexpected character")
(error "line 1364 column 995: unexpected character")
(error "line 1364 column 997: unexpected character")
(error "line 1369 column 1003: unexpected character")
(error "line 1369 column 1005: unexpected character")
(error "line 1373 column 1003: unexpected character")
(error "line 1373 column 1005: unexpected character")
(error "line 1593 column 942: unexpected character")
(error "line 1593 column 944: unexpected character")
(error "line 1598 column 950: unexpected character")
(error "line 1598 column 952: unexpected character")
(error "line 1603 column 958: unexpected character")
(error "line 1603 column 960: unexpected character")
(error "line 1607 column 958: unexpected character")
(error "line 1607 column 960: unexpected character")
(error "line 1827 column 897: unexpected character")
(error "line 1827 column 899: unexpected character")
(error "line 1832 column 905: unexpected character")
(error "line 1832 column 907: unexpected character")
(error "line 1837 column 913: unexpected character")
(error "line 1837 column 915: unexpected character")
(error "line 1841 column 913: unexpected character")
(error "line 1841 column 915: unexpected character")
(error "line 2061 column 852: unexpected character")
(error "line 2061 column 854: unexpected character")
(error "line 2066 column 860: unexpected character")
(error "line 2066 column 862: unexpected character")
(error "line 2071 column 868: unexpected character")
(error "line 2071 column 870: unexpected character")
(error "line 2075 column 868: unexpected character")
(error "line 2075 column 870: unexpected character")
(error "line 2295 column 807: unexpected character")
(error "line 2295 column 809: unexpected character")
(error "line 2300 column 815: unexpected character")
(error "line 2300 column 817: unexpected character")
(error "line 2305 column 823: unexpected character")
(error "line 2305 column 825: unexpected character")
(error "line 2309 column 823: unexpected character")
(error "line 2309 column 825: unexpected character")
(error "line 2555 column 757: unexpected character")
(error "line 2555 column 759: unexpected character")
(error "line 2560 column 765: unexpected character")
(error "line 2560 column 767: unexpected character")
(error "line 2565 column 773: unexpected character")
(error "line 2565 column 775: unexpected character")
(error "line 2569 column 773: unexpected character")
(error "line 2569 column 775: unexpected character")
(error "line 2789 column 712: unexpected character")
(error "line 2789 column 714: unexpected character")
(error "line 2794 column 720: unexpected character")
(error "line 2794 column 722: unexpected character")
(error "line 2799 column 728: unexpected character")
(error "line 2799 column 730: unexpected character")
(error "line 2803 column 728: unexpected character")
(error "line 2803 column 730: unexpected character")
(error "line 3049 column 663: unexpected character")
(error "line 3049 column 665: unexpected character")
(error "line 3054 column 671: unexpected character")
(error "line 3054 column 673: unexpected character")
(error "line 3059 column 679: unexpected character")
(error "line 3059 column 681: unexpected character")
(error "line 3063 column 679: unexpected character")
(error "line 3063 column 681: unexpected character")
(error "line 3283 column 618: unexpected character")
(error "line 3283 column 620: unexpected character")
(error "line 3288 column 626: unexpected character")
(error "line 3288 column 628: unexpected character")
(error "line 3293 column 634: unexpected character")
(error "line 3293 column 636: unexpected character")
(error "line 3297 column 634: unexpected character")
(error "line 3297 column 636: unexpected character")
(error "line 3517 column 573: unexpected character")
(error "line 3517 column 575: unexpected character")
(error "line 3522 column 581: unexpected character")
(error "line 3522 column 583: unexpected character")
(error "line 3527 column 589: unexpected character")
(error "line 3527 column 591: unexpected character")
(error "line 3531 column 589: unexpected character")
(error "line 3531 column 591: unexpected character")
(error "line 3751 column 528: unexpected character")
(error "line 3751 column 530: unexpected character")
(error "line 3756 column 536: unexpected character")
(error "line 3756 column 538: unexpected character")
(error "line 3761 column 544: unexpected character")
(error "line 3761 column 546: unexpected character")
(error "line 3765 column 544: unexpected character")
(error "line 3765 column 546: unexpected character")
(error "line 3985 column 483: unexpected character")
(error "line 3985 column 485: unexpected character")
(error "line 3990 column 491: unexpected character")
(error "line 3990 column 493: unexpected character")
(error "line 3995 column 499: unexpected character")
(error "line 3995 column 501: unexpected character")
(error "line 3999 column 499: unexpected character")
(error "line 3999 column 501: unexpected character")
(error "line 4219 column 438: unexpected character")
(error "line 4219 column 440: unexpected character")
(error "line 4224 column 446: unexpected character")
(error "line 4224 column 448: unexpected character")
(error "line 4229 column 454: unexpected character")
(error "line 4229 column 456: unexpected character")
(error "line 4233 column 454: unexpected character")
(error "line 4233 column 456: unexpected character")
(error "line 4453 column 393: unexpected character")
(error "line 4453 column 395: unexpected character")
(error "line 4458 column 401: unexpected character")
(error "line 4458 column 403: unexpected character")
(error "line 4463 column 409: unexpected character")
(error "line 4463 column 411: unexpected character")
(error "line 4467 column 409: unexpected character")
(error "line 4467 column 411: unexpected character")
(error "line 4687 column 348: unexpected character")
(error "line 4687 column 350: unexpected character")
(error "line 4692 column 356: unexpected character")
(error "line 4692 column 358: unexpected character")
(error "line 4697 column 364: unexpected character")
(error "line 4697 column 366: unexpected character")
(error "line 4701 column 364: unexpected character")
(error "line 4701 column 366: unexpected character")
(error "line 4921 column 303: unexpected character")
(error "line 4921 column 305: unexpected character")
(error "line 4926 column 311: unexpected character")
(error "line 4926 column 313: unexpected character")
(error "line 4931 column 319: unexpected character")
(error "line 4931 column 321: unexpected character")
(error "line 4935 column 319: unexpected character")
(error "line 4935 column 321: unexpected character")
(error "line 5155 column 258: unexpected character")
(error "line 5155 column 260: unexpected character")
(error "line 5160 column 266: unexpected character")
(error "line 5160 column 268: unexpected character")
(error "line 5165 column 274: unexpected character")
(error "line 5165 column 276: unexpected character")
(error "line 5169 column 274: unexpected character")
(error "line 5169 column 276: unexpected character")
(error "line 5389 column 213: unexpected character")
(error "line 5389 column 215: unexpected character")
(error "line 5394 column 221: unexpected character")
(error "line 5394 column 223: unexpected character")
(error "line 5399 column 229: unexpected character")
(error "line 5399 column 231: unexpected character")
(error "line 5403 column 229: unexpected character")
(error "line 5403 column 231: unexpected character")
(error "line 5623 column 168: unexpected character")
(error "line 5623 column 170: unexpected character")
(error "line 5628 column 176: unexpected character")
(error "line 5628 column 178: unexpected character")
(error "line 5633 column 184: unexpected character")
(error "line 5633 column 186: unexpected character")
(error "line 5637 column 184: unexpected character")
(error "line 5637 column 186: unexpected character")
(error "line 5857 column 123: unexpected character")
(error "line 5857 column 125: unexpected character")
(error "line 5862 column 131: unexpected character")
(error "line 5862 column 133: unexpected character")
(error "line 5867 column 139: unexpected character")
(error "line 5867 column 141: unexpected character")
(error "line 5871 column 139: unexpected character")
(error "line 5871 column 141: unexpected character")
(error "line 6091 column 78: unexpected character")
(error "line 6091 column 80: unexpected character")
(error "line 6096 column 86: unexpected character")
(error "line 6096 column 88: unexpected character")
(error "line 6101 column 94: unexpected character")
(error "line 6101 column 96: unexpected character")
(error "line 6105 column 94: unexpected character")
(error "line 6105 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000013.smt2
(error "line 30 column 48: unexpected character")
(error "line 30 column 50: unexpected character")
(error "line 38 column 48: unexpected character")
(error "line 38 column 50: unexpected character")
(error "line 46 column 49: unexpected character")
(error "line 46 column 51: unexpected character")
(error "line 54 column 49: unexpected character")
(error "line 54 column 51: unexpected character")
(error "line 62 column 49: unexpected character")
(error "line 62 column 51: unexpected character")
(error "line 70 column 49: unexpected character")
(error "line 70 column 51: unexpected character")
(error "line 78 column 49: unexpected character")
(error "line 78 column 51: unexpected character")
(error "line 86 column 49: unexpected character")
(error "line 86 column 51: unexpected character")
(error "line 94 column 49: unexpected character")
(error "line 94 column 51: unexpected character")
(error "line 102 column 49: unexpected character")
(error "line 102 column 51: unexpected character")
(error "line 110 column 49: unexpected character")
(error "line 110 column 51: unexpected character")
(error "line 118 column 49: unexpected character")
(error "line 118 column 51: unexpected character")
(error "line 126 column 48: unexpected character")
(error "line 126 column 50: unexpected character")
(error "line 134 column 49: unexpected character")
(error "line 134 column 51: unexpected character")
(error "line 142 column 49: unexpected character")
(error "line 142 column 51: unexpected character")
(error "line 150 column 49: unexpected character")
(error "line 150 column 51: unexpected character")
(error "line 158 column 48: unexpected character")
(error "line 158 column 50: unexpected character")
(error "line 166 column 48: unexpected character")
(error "line 166 column 50: unexpected character")
(error "line 174 column 48: unexpected character")
(error "line 174 column 50: unexpected character")
(error "line 182 column 48: unexpected character")
(error "line 182 column 50: unexpected character")
(error "line 190 column 48: unexpected character")
(error "line 190 column 50: unexpected character")
(error "line 198 column 48: unexpected character")
(error "line 198 column 50: unexpected character")
(error "line 206 column 48: unexpected character")
(error "line 206 column 50: unexpected character")
(error "line 639 column 1042: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 639 column 1077: unexpected character")
(error "line 639 column 1079: unexpected character")
(error "line 644 column 1085: unexpected character")
(error "line 644 column 1087: unexpected character")
(error "line 649 column 1093: unexpected character")
(error "line 649 column 1095: unexpected character")
(error "line 653 column 1093: unexpected character")
(error "line 653 column 1095: unexpected character")
(error "line 873 column 1032: unexpected character")
(error "line 873 column 1034: unexpected character")
(error "line 878 column 1040: unexpected character")
(error "line 878 column 1042: unexpected character")
(error "line 883 column 1048: unexpected character")
(error "line 883 column 1050: unexpected character")
(error "line 887 column 1048: unexpected character")
(error "line 887 column 1050: unexpected character")
(error "line 1107 column 987: unexpected character")
(error "line 1107 column 989: unexpected character")
(error "line 1112 column 995: unexpected character")
(error "line 1112 column 997: unexpected character")
(error "line 1117 column 1003: unexpected character")
(error "line 1117 column 1005: unexpected character")
(error "line 1121 column 1003: unexpected character")
(error "line 1121 column 1005: unexpected character")
(error "line 1341 column 942: unexpected character")
(error "line 1341 column 944: unexpected character")
(error "line 1346 column 950: unexpected character")
(error "line 1346 column 952: unexpected character")
(error "line 1351 column 958: unexpected character")
(error "line 1351 column 960: unexpected character")
(error "line 1355 column 958: unexpected character")
(error "line 1355 column 960: unexpected character")
(error "line 1575 column 897: unexpected character")
(error "line 1575 column 899: unexpected character")
(error "line 1580 column 905: unexpected character")
(error "line 1580 column 907: unexpected character")
(error "line 1585 column 913: unexpected character")
(error "line 1585 column 915: unexpected character")
(error "line 1589 column 913: unexpected character")
(error "line 1589 column 915: unexpected character")
(error "line 1809 column 852: unexpected character")
(error "line 1809 column 854: unexpected character")
(error "line 1814 column 860: unexpected character")
(error "line 1814 column 862: unexpected character")
(error "line 1819 column 868: unexpected character")
(error "line 1819 column 870: unexpected character")
(error "line 1823 column 868: unexpected character")
(error "line 1823 column 870: unexpected character")
(error "line 2043 column 807: unexpected character")
(error "line 2043 column 809: unexpected character")
(error "line 2048 column 815: unexpected character")
(error "line 2048 column 817: unexpected character")
(error "line 2053 column 823: unexpected character")
(error "line 2053 column 825: unexpected character")
(error "line 2057 column 823: unexpected character")
(error "line 2057 column 825: unexpected character")
(error "line 2277 column 762: unexpected character")
(error "line 2277 column 764: unexpected character")
(error "line 2282 column 770: unexpected character")
(error "line 2282 column 772: unexpected character")
(error "line 2287 column 778: unexpected character")
(error "line 2287 column 780: unexpected character")
(error "line 2291 column 778: unexpected character")
(error "line 2291 column 780: unexpected character")
(error "line 2537 column 712: unexpected character")
(error "line 2537 column 714: unexpected character")
(error "line 2542 column 720: unexpected character")
(error "line 2542 column 722: unexpected character")
(error "line 2547 column 728: unexpected character")
(error "line 2547 column 730: unexpected character")
(error "line 2551 column 728: unexpected character")
(error "line 2551 column 730: unexpected character")
(error "line 2771 column 667: unexpected character")
(error "line 2771 column 669: unexpected character")
(error "line 2776 column 675: unexpected character")
(error "line 2776 column 677: unexpected character")
(error "line 2781 column 683: unexpected character")
(error "line 2781 column 685: unexpected character")
(error "line 2785 column 683: unexpected character")
(error "line 2785 column 685: unexpected character")
(error "line 3031 column 618: unexpected character")
(error "line 3031 column 620: unexpected character")
(error "line 3036 column 626: unexpected character")
(error "line 3036 column 628: unexpected character")
(error "line 3041 column 634: unexpected character")
(error "line 3041 column 636: unexpected character")
(error "line 3045 column 634: unexpected character")
(error "line 3045 column 636: unexpected character")
(error "line 3265 column 573: unexpected character")
(error "line 3265 column 575: unexpected character")
(error "line 3270 column 581: unexpected character")
(error "line 3270 column 583: unexpected character")
(error "line 3275 column 589: unexpected character")
(error "line 3275 column 591: unexpected character")
(error "line 3279 column 589: unexpected character")
(error "line 3279 column 591: unexpected character")
(error "line 3499 column 528: unexpected character")
(error "line 3499 column 530: unexpected character")
(error "line 3504 column 536: unexpected character")
(error "line 3504 column 538: unexpected character")
(error "line 3509 column 544: unexpected character")
(error "line 3509 column 546: unexpected character")
(error "line 3513 column 544: unexpected character")
(error "line 3513 column 546: unexpected character")
(error "line 3733 column 483: unexpected character")
(error "line 3733 column 485: unexpected character")
(error "line 3738 column 491: unexpected character")
(error "line 3738 column 493: unexpected character")
(error "line 3743 column 499: unexpected character")
(error "line 3743 column 501: unexpected character")
(error "line 3747 column 499: unexpected character")
(error "line 3747 column 501: unexpected character")
(error "line 3967 column 438: unexpected character")
(error "line 3967 column 440: unexpected character")
(error "line 3972 column 446: unexpected character")
(error "line 3972 column 448: unexpected character")
(error "line 3977 column 454: unexpected character")
(error "line 3977 column 456: unexpected character")
(error "line 3981 column 454: unexpected character")
(error "line 3981 column 456: unexpected character")
(error "line 4201 column 393: unexpected character")
(error "line 4201 column 395: unexpected character")
(error "line 4206 column 401: unexpected character")
(error "line 4206 column 403: unexpected character")
(error "line 4211 column 409: unexpected character")
(error "line 4211 column 411: unexpected character")
(error "line 4215 column 409: unexpected character")
(error "line 4215 column 411: unexpected character")
(error "line 4435 column 348: unexpected character")
(error "line 4435 column 350: unexpected character")
(error "line 4440 column 356: unexpected character")
(error "line 4440 column 358: unexpected character")
(error "line 4445 column 364: unexpected character")
(error "line 4445 column 366: unexpected character")
(error "line 4449 column 364: unexpected character")
(error "line 4449 column 366: unexpected character")
(error "line 4669 column 303: unexpected character")
(error "line 4669 column 305: unexpected character")
(error "line 4674 column 311: unexpected character")
(error "line 4674 column 313: unexpected character")
(error "line 4679 column 319: unexpected character")
(error "line 4679 column 321: unexpected character")
(error "line 4683 column 319: unexpected character")
(error "line 4683 column 321: unexpected character")
(error "line 4903 column 258: unexpected character")
(error "line 4903 column 260: unexpected character")
(error "line 4908 column 266: unexpected character")
(error "line 4908 column 268: unexpected character")
(error "line 4913 column 274: unexpected character")
(error "line 4913 column 276: unexpected character")
(error "line 4917 column 274: unexpected character")
(error "line 4917 column 276: unexpected character")
(error "line 5137 column 213: unexpected character")
(error "line 5137 column 215: unexpected character")
(error "line 5142 column 221: unexpected character")
(error "line 5142 column 223: unexpected character")
(error "line 5147 column 229: unexpected character")
(error "line 5147 column 231: unexpected character")
(error "line 5151 column 229: unexpected character")
(error "line 5151 column 231: unexpected character")
(error "line 5371 column 168: unexpected character")
(error "line 5371 column 170: unexpected character")
(error "line 5376 column 176: unexpected character")
(error "line 5376 column 178: unexpected character")
(error "line 5381 column 184: unexpected character")
(error "line 5381 column 186: unexpected character")
(error "line 5385 column 184: unexpected character")
(error "line 5385 column 186: unexpected character")
(error "line 5605 column 123: unexpected character")
(error "line 5605 column 125: unexpected character")
(error "line 5610 column 131: unexpected character")
(error "line 5610 column 133: unexpected character")
(error "line 5615 column 139: unexpected character")
(error "line 5615 column 141: unexpected character")
(error "line 5619 column 139: unexpected character")
(error "line 5619 column 141: unexpected character")
(error "line 5839 column 78: unexpected character")
(error "line 5839 column 80: unexpected character")
(error "line 5844 column 86: unexpected character")
(error "line 5844 column 88: unexpected character")
(error "line 5849 column 94: unexpected character")
(error "line 5849 column 96: unexpected character")
(error "line 5853 column 94: unexpected character")
(error "line 5853 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000014.smt2
(error "line 29 column 48: unexpected character")
(error "line 29 column 50: unexpected character")
(error "line 37 column 48: unexpected character")
(error "line 37 column 50: unexpected character")
(error "line 45 column 49: unexpected character")
(error "line 45 column 51: unexpected character")
(error "line 53 column 49: unexpected character")
(error "line 53 column 51: unexpected character")
(error "line 61 column 49: unexpected character")
(error "line 61 column 51: unexpected character")
(error "line 69 column 49: unexpected character")
(error "line 69 column 51: unexpected character")
(error "line 77 column 49: unexpected character")
(error "line 77 column 51: unexpected character")
(error "line 85 column 49: unexpected character")
(error "line 85 column 51: unexpected character")
(error "line 93 column 49: unexpected character")
(error "line 93 column 51: unexpected character")
(error "line 101 column 49: unexpected character")
(error "line 101 column 51: unexpected character")
(error "line 109 column 49: unexpected character")
(error "line 109 column 51: unexpected character")
(error "line 117 column 49: unexpected character")
(error "line 117 column 51: unexpected character")
(error "line 125 column 48: unexpected character")
(error "line 125 column 50: unexpected character")
(error "line 133 column 49: unexpected character")
(error "line 133 column 51: unexpected character")
(error "line 141 column 49: unexpected character")
(error "line 141 column 51: unexpected character")
(error "line 149 column 48: unexpected character")
(error "line 149 column 50: unexpected character")
(error "line 157 column 48: unexpected character")
(error "line 157 column 50: unexpected character")
(error "line 165 column 48: unexpected character")
(error "line 165 column 50: unexpected character")
(error "line 173 column 48: unexpected character")
(error "line 173 column 50: unexpected character")
(error "line 181 column 48: unexpected character")
(error "line 181 column 50: unexpected character")
(error "line 189 column 48: unexpected character")
(error "line 189 column 50: unexpected character")
(error "line 197 column 48: unexpected character")
(error "line 197 column 50: unexpected character")
(error "line 621 column 997: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 621 column 1032: unexpected character")
(error "line 621 column 1034: unexpected character")
(error "line 626 column 1040: unexpected character")
(error "line 626 column 1042: unexpected character")
(error "line 631 column 1048: unexpected character")
(error "line 631 column 1050: unexpected character")
(error "line 635 column 1048: unexpected character")
(error "line 635 column 1050: unexpected character")
(error "line 855 column 987: unexpected character")
(error "line 855 column 989: unexpected character")
(error "line 860 column 995: unexpected character")
(error "line 860 column 997: unexpected character")
(error "line 865 column 1003: unexpected character")
(error "line 865 column 1005: unexpected character")
(error "line 869 column 1003: unexpected character")
(error "line 869 column 1005: unexpected character")
(error "line 1089 column 942: unexpected character")
(error "line 1089 column 944: unexpected character")
(error "line 1094 column 950: unexpected character")
(error "line 1094 column 952: unexpected character")
(error "line 1099 column 958: unexpected character")
(error "line 1099 column 960: unexpected character")
(error "line 1103 column 958: unexpected character")
(error "line 1103 column 960: unexpected character")
(error "line 1323 column 897: unexpected character")
(error "line 1323 column 899: unexpected character")
(error "line 1328 column 905: unexpected character")
(error "line 1328 column 907: unexpected character")
(error "line 1333 column 913: unexpected character")
(error "line 1333 column 915: unexpected character")
(error "line 1337 column 913: unexpected character")
(error "line 1337 column 915: unexpected character")
(error "line 1557 column 852: unexpected character")
(error "line 1557 column 854: unexpected character")
(error "line 1562 column 860: unexpected character")
(error "line 1562 column 862: unexpected character")
(error "line 1567 column 868: unexpected character")
(error "line 1567 column 870: unexpected character")
(error "line 1571 column 868: unexpected character")
(error "line 1571 column 870: unexpected character")
(error "line 1791 column 807: unexpected character")
(error "line 1791 column 809: unexpected character")
(error "line 1796 column 815: unexpected character")
(error "line 1796 column 817: unexpected character")
(error "line 1801 column 823: unexpected character")
(error "line 1801 column 825: unexpected character")
(error "line 1805 column 823: unexpected character")
(error "line 1805 column 825: unexpected character")
(error "line 2025 column 762: unexpected character")
(error "line 2025 column 764: unexpected character")
(error "line 2030 column 770: unexpected character")
(error "line 2030 column 772: unexpected character")
(error "line 2035 column 778: unexpected character")
(error "line 2035 column 780: unexpected character")
(error "line 2039 column 778: unexpected character")
(error "line 2039 column 780: unexpected character")
(error "line 2259 column 717: unexpected character")
(error "line 2259 column 719: unexpected character")
(error "line 2264 column 725: unexpected character")
(error "line 2264 column 727: unexpected character")
(error "line 2269 column 733: unexpected character")
(error "line 2269 column 735: unexpected character")
(error "line 2273 column 733: unexpected character")
(error "line 2273 column 735: unexpected character")
(error "line 2519 column 667: unexpected character")
(error "line 2519 column 669: unexpected character")
(error "line 2524 column 675: unexpected character")
(error "line 2524 column 677: unexpected character")
(error "line 2529 column 683: unexpected character")
(error "line 2529 column 685: unexpected character")
(error "line 2533 column 683: unexpected character")
(error "line 2533 column 685: unexpected character")
(error "line 2753 column 622: unexpected character")
(error "line 2753 column 624: unexpected character")
(error "line 2758 column 630: unexpected character")
(error "line 2758 column 632: unexpected character")
(error "line 2763 column 638: unexpected character")
(error "line 2763 column 640: unexpected character")
(error "line 2767 column 638: unexpected character")
(error "line 2767 column 640: unexpected character")
(error "line 3013 column 573: unexpected character")
(error "line 3013 column 575: unexpected character")
(error "line 3018 column 581: unexpected character")
(error "line 3018 column 583: unexpected character")
(error "line 3023 column 589: unexpected character")
(error "line 3023 column 591: unexpected character")
(error "line 3027 column 589: unexpected character")
(error "line 3027 column 591: unexpected character")
(error "line 3247 column 528: unexpected character")
(error "line 3247 column 530: unexpected character")
(error "line 3252 column 536: unexpected character")
(error "line 3252 column 538: unexpected character")
(error "line 3257 column 544: unexpected character")
(error "line 3257 column 546: unexpected character")
(error "line 3261 column 544: unexpected character")
(error "line 3261 column 546: unexpected character")
(error "line 3481 column 483: unexpected character")
(error "line 3481 column 485: unexpected character")
(error "line 3486 column 491: unexpected character")
(error "line 3486 column 493: unexpected character")
(error "line 3491 column 499: unexpected character")
(error "line 3491 column 501: unexpected character")
(error "line 3495 column 499: unexpected character")
(error "line 3495 column 501: unexpected character")
(error "line 3715 column 438: unexpected character")
(error "line 3715 column 440: unexpected character")
(error "line 3720 column 446: unexpected character")
(error "line 3720 column 448: unexpected character")
(error "line 3725 column 454: unexpected character")
(error "line 3725 column 456: unexpected character")
(error "line 3729 column 454: unexpected character")
(error "line 3729 column 456: unexpected character")
(error "line 3949 column 393: unexpected character")
(error "line 3949 column 395: unexpected character")
(error "line 3954 column 401: unexpected character")
(error "line 3954 column 403: unexpected character")
(error "line 3959 column 409: unexpected character")
(error "line 3959 column 411: unexpected character")
(error "line 3963 column 409: unexpected character")
(error "line 3963 column 411: unexpected character")
(error "line 4183 column 348: unexpected character")
(error "line 4183 column 350: unexpected character")
(error "line 4188 column 356: unexpected character")
(error "line 4188 column 358: unexpected character")
(error "line 4193 column 364: unexpected character")
(error "line 4193 column 366: unexpected character")
(error "line 4197 column 364: unexpected character")
(error "line 4197 column 366: unexpected character")
(error "line 4417 column 303: unexpected character")
(error "line 4417 column 305: unexpected character")
(error "line 4422 column 311: unexpected character")
(error "line 4422 column 313: unexpected character")
(error "line 4427 column 319: unexpected character")
(error "line 4427 column 321: unexpected character")
(error "line 4431 column 319: unexpected character")
(error "line 4431 column 321: unexpected character")
(error "line 4651 column 258: unexpected character")
(error "line 4651 column 260: unexpected character")
(error "line 4656 column 266: unexpected character")
(error "line 4656 column 268: unexpected character")
(error "line 4661 column 274: unexpected character")
(error "line 4661 column 276: unexpected character")
(error "line 4665 column 274: unexpected character")
(error "line 4665 column 276: unexpected character")
(error "line 4885 column 213: unexpected character")
(error "line 4885 column 215: unexpected character")
(error "line 4890 column 221: unexpected character")
(error "line 4890 column 223: unexpected character")
(error "line 4895 column 229: unexpected character")
(error "line 4895 column 231: unexpected character")
(error "line 4899 column 229: unexpected character")
(error "line 4899 column 231: unexpected character")
(error "line 5119 column 168: unexpected character")
(error "line 5119 column 170: unexpected character")
(error "line 5124 column 176: unexpected character")
(error "line 5124 column 178: unexpected character")
(error "line 5129 column 184: unexpected character")
(error "line 5129 column 186: unexpected character")
(error "line 5133 column 184: unexpected character")
(error "line 5133 column 186: unexpected character")
(error "line 5353 column 123: unexpected character")
(error "line 5353 column 125: unexpected character")
(error "line 5358 column 131: unexpected character")
(error "line 5358 column 133: unexpected character")
(error "line 5363 column 139: unexpected character")
(error "line 5363 column 141: unexpected character")
(error "line 5367 column 139: unexpected character")
(error "line 5367 column 141: unexpected character")
(error "line 5587 column 78: unexpected character")
(error "line 5587 column 80: unexpected character")
(error "line 5592 column 86: unexpected character")
(error "line 5592 column 88: unexpected character")
(error "line 5597 column 94: unexpected character")
(error "line 5597 column 96: unexpected character")
(error "line 5601 column 94: unexpected character")
(error "line 5601 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000015.smt2
(error "line 28 column 48: unexpected character")
(error "line 28 column 50: unexpected character")
(error "line 36 column 48: unexpected character")
(error "line 36 column 50: unexpected character")
(error "line 44 column 49: unexpected character")
(error "line 44 column 51: unexpected character")
(error "line 52 column 49: unexpected character")
(error "line 52 column 51: unexpected character")
(error "line 60 column 49: unexpected character")
(error "line 60 column 51: unexpected character")
(error "line 68 column 49: unexpected character")
(error "line 68 column 51: unexpected character")
(error "line 76 column 49: unexpected character")
(error "line 76 column 51: unexpected character")
(error "line 84 column 49: unexpected character")
(error "line 84 column 51: unexpected character")
(error "line 92 column 49: unexpected character")
(error "line 92 column 51: unexpected character")
(error "line 100 column 49: unexpected character")
(error "line 100 column 51: unexpected character")
(error "line 108 column 49: unexpected character")
(error "line 108 column 51: unexpected character")
(error "line 116 column 49: unexpected character")
(error "line 116 column 51: unexpected character")
(error "line 124 column 48: unexpected character")
(error "line 124 column 50: unexpected character")
(error "line 132 column 49: unexpected character")
(error "line 132 column 51: unexpected character")
(error "line 140 column 48: unexpected character")
(error "line 140 column 50: unexpected character")
(error "line 148 column 48: unexpected character")
(error "line 148 column 50: unexpected character")
(error "line 156 column 48: unexpected character")
(error "line 156 column 50: unexpected character")
(error "line 164 column 48: unexpected character")
(error "line 164 column 50: unexpected character")
(error "line 172 column 48: unexpected character")
(error "line 172 column 50: unexpected character")
(error "line 180 column 48: unexpected character")
(error "line 180 column 50: unexpected character")
(error "line 188 column 48: unexpected character")
(error "line 188 column 50: unexpected character")
(error "line 603 column 952: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 603 column 987: unexpected character")
(error "line 603 column 989: unexpected character")
(error "line 608 column 995: unexpected character")
(error "line 608 column 997: unexpected character")
(error "line 613 column 1003: unexpected character")
(error "line 613 column 1005: unexpected character")
(error "line 617 column 1003: unexpected character")
(error "line 617 column 1005: unexpected character")
(error "line 837 column 942: unexpected character")
(error "line 837 column 944: unexpected character")
(error "line 842 column 950: unexpected character")
(error "line 842 column 952: unexpected character")
(error "line 847 column 958: unexpected character")
(error "line 847 column 960: unexpected character")
(error "line 851 column 958: unexpected character")
(error "line 851 column 960: unexpected character")
(error "line 1071 column 897: unexpected character")
(error "line 1071 column 899: unexpected character")
(error "line 1076 column 905: unexpected character")
(error "line 1076 column 907: unexpected character")
(error "line 1081 column 913: unexpected character")
(error "line 1081 column 915: unexpected character")
(error "line 1085 column 913: unexpected character")
(error "line 1085 column 915: unexpected character")
(error "line 1305 column 852: unexpected character")
(error "line 1305 column 854: unexpected character")
(error "line 1310 column 860: unexpected character")
(error "line 1310 column 862: unexpected character")
(error "line 1315 column 868: unexpected character")
(error "line 1315 column 870: unexpected character")
(error "line 1319 column 868: unexpected character")
(error "line 1319 column 870: unexpected character")
(error "line 1539 column 807: unexpected character")
(error "line 1539 column 809: unexpected character")
(error "line 1544 column 815: unexpected character")
(error "line 1544 column 817: unexpected character")
(error "line 1549 column 823: unexpected character")
(error "line 1549 column 825: unexpected character")
(error "line 1553 column 823: unexpected character")
(error "line 1553 column 825: unexpected character")
(error "line 1773 column 762: unexpected character")
(error "line 1773 column 764: unexpected character")
(error "line 1778 column 770: unexpected character")
(error "line 1778 column 772: unexpected character")
(error "line 1783 column 778: unexpected character")
(error "line 1783 column 780: unexpected character")
(error "line 1787 column 778: unexpected character")
(error "line 1787 column 780: unexpected character")
(error "line 2007 column 717: unexpected character")
(error "line 2007 column 719: unexpected character")
(error "line 2012 column 725: unexpected character")
(error "line 2012 column 727: unexpected character")
(error "line 2017 column 733: unexpected character")
(error "line 2017 column 735: unexpected character")
(error "line 2021 column 733: unexpected character")
(error "line 2021 column 735: unexpected character")
(error "line 2241 column 672: unexpected character")
(error "line 2241 column 674: unexpected character")
(error "line 2246 column 680: unexpected character")
(error "line 2246 column 682: unexpected character")
(error "line 2251 column 688: unexpected character")
(error "line 2251 column 690: unexpected character")
(error "line 2255 column 688: unexpected character")
(error "line 2255 column 690: unexpected character")
(error "line 2501 column 622: unexpected character")
(error "line 2501 column 624: unexpected character")
(error "line 2506 column 630: unexpected character")
(error "line 2506 column 632: unexpected character")
(error "line 2511 column 638: unexpected character")
(error "line 2511 column 640: unexpected character")
(error "line 2515 column 638: unexpected character")
(error "line 2515 column 640: unexpected character")
(error "line 2735 column 577: unexpected character")
(error "line 2735 column 579: unexpected character")
(error "line 2740 column 585: unexpected character")
(error "line 2740 column 587: unexpected character")
(error "line 2745 column 593: unexpected character")
(error "line 2745 column 595: unexpected character")
(error "line 2749 column 593: unexpected character")
(error "line 2749 column 595: unexpected character")
(error "line 2995 column 528: unexpected character")
(error "line 2995 column 530: unexpected character")
(error "line 3000 column 536: unexpected character")
(error "line 3000 column 538: unexpected character")
(error "line 3005 column 544: unexpected character")
(error "line 3005 column 546: unexpected character")
(error "line 3009 column 544: unexpected character")
(error "line 3009 column 546: unexpected character")
(error "line 3229 column 483: unexpected character")
(error "line 3229 column 485: unexpected character")
(error "line 3234 column 491: unexpected character")
(error "line 3234 column 493: unexpected character")
(error "line 3239 column 499: unexpected character")
(error "line 3239 column 501: unexpected character")
(error "line 3243 column 499: unexpected character")
(error "line 3243 column 501: unexpected character")
(error "line 3463 column 438: unexpected character")
(error "line 3463 column 440: unexpected character")
(error "line 3468 column 446: unexpected character")
(error "line 3468 column 448: unexpected character")
(error "line 3473 column 454: unexpected character")
(error "line 3473 column 456: unexpected character")
(error "line 3477 column 454: unexpected character")
(error "line 3477 column 456: unexpected character")
(error "line 3697 column 393: unexpected character")
(error "line 3697 column 395: unexpected character")
(error "line 3702 column 401: unexpected character")
(error "line 3702 column 403: unexpected character")
(error "line 3707 column 409: unexpected character")
(error "line 3707 column 411: unexpected character")
(error "line 3711 column 409: unexpected character")
(error "line 3711 column 411: unexpected character")
(error "line 3931 column 348: unexpected character")
(error "line 3931 column 350: unexpected character")
(error "line 3936 column 356: unexpected character")
(error "line 3936 column 358: unexpected character")
(error "line 3941 column 364: unexpected character")
(error "line 3941 column 366: unexpected character")
(error "line 3945 column 364: unexpected character")
(error "line 3945 column 366: unexpected character")
(error "line 4165 column 303: unexpected character")
(error "line 4165 column 305: unexpected character")
(error "line 4170 column 311: unexpected character")
(error "line 4170 column 313: unexpected character")
(error "line 4175 column 319: unexpected character")
(error "line 4175 column 321: unexpected character")
(error "line 4179 column 319: unexpected character")
(error "line 4179 column 321: unexpected character")
(error "line 4399 column 258: unexpected character")
(error "line 4399 column 260: unexpected character")
(error "line 4404 column 266: unexpected character")
(error "line 4404 column 268: unexpected character")
(error "line 4409 column 274: unexpected character")
(error "line 4409 column 276: unexpected character")
(error "line 4413 column 274: unexpected character")
(error "line 4413 column 276: unexpected character")
(error "line 4633 column 213: unexpected character")
(error "line 4633 column 215: unexpected character")
(error "line 4638 column 221: unexpected character")
(error "line 4638 column 223: unexpected character")
(error "line 4643 column 229: unexpected character")
(error "line 4643 column 231: unexpected character")
(error "line 4647 column 229: unexpected character")
(error "line 4647 column 231: unexpected character")
(error "line 4867 column 168: unexpected character")
(error "line 4867 column 170: unexpected character")
(error "line 4872 column 176: unexpected character")
(error "line 4872 column 178: unexpected character")
(error "line 4877 column 184: unexpected character")
(error "line 4877 column 186: unexpected character")
(error "line 4881 column 184: unexpected character")
(error "line 4881 column 186: unexpected character")
(error "line 5101 column 123: unexpected character")
(error "line 5101 column 125: unexpected character")
(error "line 5106 column 131: unexpected character")
(error "line 5106 column 133: unexpected character")
(error "line 5111 column 139: unexpected character")
(error "line 5111 column 141: unexpected character")
(error "line 5115 column 139: unexpected character")
(error "line 5115 column 141: unexpected character")
(error "line 5335 column 78: unexpected character")
(error "line 5335 column 80: unexpected character")
(error "line 5340 column 86: unexpected character")
(error "line 5340 column 88: unexpected character")
(error "line 5345 column 94: unexpected character")
(error "line 5345 column 96: unexpected character")
(error "line 5349 column 94: unexpected character")
(error "line 5349 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000016.smt2
(error "line 27 column 48: unexpected character")
(error "line 27 column 50: unexpected character")
(error "line 35 column 48: unexpected character")
(error "line 35 column 50: unexpected character")
(error "line 43 column 49: unexpected character")
(error "line 43 column 51: unexpected character")
(error "line 51 column 49: unexpected character")
(error "line 51 column 51: unexpected character")
(error "line 59 column 49: unexpected character")
(error "line 59 column 51: unexpected character")
(error "line 67 column 49: unexpected character")
(error "line 67 column 51: unexpected character")
(error "line 75 column 49: unexpected character")
(error "line 75 column 51: unexpected character")
(error "line 83 column 49: unexpected character")
(error "line 83 column 51: unexpected character")
(error "line 91 column 49: unexpected character")
(error "line 91 column 51: unexpected character")
(error "line 99 column 49: unexpected character")
(error "line 99 column 51: unexpected character")
(error "line 107 column 49: unexpected character")
(error "line 107 column 51: unexpected character")
(error "line 115 column 49: unexpected character")
(error "line 115 column 51: unexpected character")
(error "line 123 column 48: unexpected character")
(error "line 123 column 50: unexpected character")
(error "line 131 column 48: unexpected character")
(error "line 131 column 50: unexpected character")
(error "line 139 column 48: unexpected character")
(error "line 139 column 50: unexpected character")
(error "line 147 column 48: unexpected character")
(error "line 147 column 50: unexpected character")
(error "line 155 column 48: unexpected character")
(error "line 155 column 50: unexpected character")
(error "line 163 column 48: unexpected character")
(error "line 163 column 50: unexpected character")
(error "line 171 column 48: unexpected character")
(error "line 171 column 50: unexpected character")
(error "line 179 column 48: unexpected character")
(error "line 179 column 50: unexpected character")
(error "line 585 column 907: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 585 column 942: unexpected character")
(error "line 585 column 944: unexpected character")
(error "line 590 column 950: unexpected character")
(error "line 590 column 952: unexpected character")
(error "line 595 column 958: unexpected character")
(error "line 595 column 960: unexpected character")
(error "line 599 column 958: unexpected character")
(error "line 599 column 960: unexpected character")
(error "line 819 column 897: unexpected character")
(error "line 819 column 899: unexpected character")
(error "line 824 column 905: unexpected character")
(error "line 824 column 907: unexpected character")
(error "line 829 column 913: unexpected character")
(error "line 829 column 915: unexpected character")
(error "line 833 column 913: unexpected character")
(error "line 833 column 915: unexpected character")
(error "line 1053 column 852: unexpected character")
(error "line 1053 column 854: unexpected character")
(error "line 1058 column 860: unexpected character")
(error "line 1058 column 862: unexpected character")
(error "line 1063 column 868: unexpected character")
(error "line 1063 column 870: unexpected character")
(error "line 1067 column 868: unexpected character")
(error "line 1067 column 870: unexpected character")
(error "line 1287 column 807: unexpected character")
(error "line 1287 column 809: unexpected character")
(error "line 1292 column 815: unexpected character")
(error "line 1292 column 817: unexpected character")
(error "line 1297 column 823: unexpected character")
(error "line 1297 column 825: unexpected character")
(error "line 1301 column 823: unexpected character")
(error "line 1301 column 825: unexpected character")
(error "line 1521 column 762: unexpected character")
(error "line 1521 column 764: unexpected character")
(error "line 1526 column 770: unexpected character")
(error "line 1526 column 772: unexpected character")
(error "line 1531 column 778: unexpected character")
(error "line 1531 column 780: unexpected character")
(error "line 1535 column 778: unexpected character")
(error "line 1535 column 780: unexpected character")
(error "line 1755 column 717: unexpected character")
(error "line 1755 column 719: unexpected character")
(error "line 1760 column 725: unexpected character")
(error "line 1760 column 727: unexpected character")
(error "line 1765 column 733: unexpected character")
(error "line 1765 column 735: unexpected character")
(error "line 1769 column 733: unexpected character")
(error "line 1769 column 735: unexpected character")
(error "line 1989 column 672: unexpected character")
(error "line 1989 column 674: unexpected character")
(error "line 1994 column 680: unexpected character")
(error "line 1994 column 682: unexpected character")
(error "line 1999 column 688: unexpected character")
(error "line 1999 column 690: unexpected character")
(error "line 2003 column 688: unexpected character")
(error "line 2003 column 690: unexpected character")
(error "line 2223 column 627: unexpected character")
(error "line 2223 column 629: unexpected character")
(error "line 2228 column 635: unexpected character")
(error "line 2228 column 637: unexpected character")
(error "line 2233 column 643: unexpected character")
(error "line 2233 column 645: unexpected character")
(error "line 2237 column 643: unexpected character")
(error "line 2237 column 645: unexpected character")
(error "line 2483 column 577: unexpected character")
(error "line 2483 column 579: unexpected character")
(error "line 2488 column 585: unexpected character")
(error "line 2488 column 587: unexpected character")
(error "line 2493 column 593: unexpected character")
(error "line 2493 column 595: unexpected character")
(error "line 2497 column 593: unexpected character")
(error "line 2497 column 595: unexpected character")
(error "line 2717 column 532: unexpected character")
(error "line 2717 column 534: unexpected character")
(error "line 2722 column 540: unexpected character")
(error "line 2722 column 542: unexpected character")
(error "line 2727 column 548: unexpected character")
(error "line 2727 column 550: unexpected character")
(error "line 2731 column 548: unexpected character")
(error "line 2731 column 550: unexpected character")
(error "line 2977 column 483: unexpected character")
(error "line 2977 column 485: unexpected character")
(error "line 2982 column 491: unexpected character")
(error "line 2982 column 493: unexpected character")
(error "line 2987 column 499: unexpected character")
(error "line 2987 column 501: unexpected character")
(error "line 2991 column 499: unexpected character")
(error "line 2991 column 501: unexpected character")
(error "line 3211 column 438: unexpected character")
(error "line 3211 column 440: unexpected character")
(error "line 3216 column 446: unexpected character")
(error "line 3216 column 448: unexpected character")
(error "line 3221 column 454: unexpected character")
(error "line 3221 column 456: unexpected character")
(error "line 3225 column 454: unexpected character")
(error "line 3225 column 456: unexpected character")
(error "line 3445 column 393: unexpected character")
(error "line 3445 column 395: unexpected character")
(error "line 3450 column 401: unexpected character")
(error "line 3450 column 403: unexpected character")
(error "line 3455 column 409: unexpected character")
(error "line 3455 column 411: unexpected character")
(error "line 3459 column 409: unexpected character")
(error "line 3459 column 411: unexpected character")
(error "line 3679 column 348: unexpected character")
(error "line 3679 column 350: unexpected character")
(error "line 3684 column 356: unexpected character")
(error "line 3684 column 358: unexpected character")
(error "line 3689 column 364: unexpected character")
(error "line 3689 column 366: unexpected character")
(error "line 3693 column 364: unexpected character")
(error "line 3693 column 366: unexpected character")
(error "line 3913 column 303: unexpected character")
(error "line 3913 column 305: unexpected character")
(error "line 3918 column 311: unexpected character")
(error "line 3918 column 313: unexpected character")
(error "line 3923 column 319: unexpected character")
(error "line 3923 column 321: unexpected character")
(error "line 3927 column 319: unexpected character")
(error "line 3927 column 321: unexpected character")
(error "line 4147 column 258: unexpected character")
(error "line 4147 column 260: unexpected character")
(error "line 4152 column 266: unexpected character")
(error "line 4152 column 268: unexpected character")
(error "line 4157 column 274: unexpected character")
(error "line 4157 column 276: unexpected character")
(error "line 4161 column 274: unexpected character")
(error "line 4161 column 276: unexpected character")
(error "line 4381 column 213: unexpected character")
(error "line 4381 column 215: unexpected character")
(error "line 4386 column 221: unexpected character")
(error "line 4386 column 223: unexpected character")
(error "line 4391 column 229: unexpected character")
(error "line 4391 column 231: unexpected character")
(error "line 4395 column 229: unexpected character")
(error "line 4395 column 231: unexpected character")
(error "line 4615 column 168: unexpected character")
(error "line 4615 column 170: unexpected character")
(error "line 4620 column 176: unexpected character")
(error "line 4620 column 178: unexpected character")
(error "line 4625 column 184: unexpected character")
(error "line 4625 column 186: unexpected character")
(error "line 4629 column 184: unexpected character")
(error "line 4629 column 186: unexpected character")
(error "line 4849 column 123: unexpected character")
(error "line 4849 column 125: unexpected character")
(error "line 4854 column 131: unexpected character")
(error "line 4854 column 133: unexpected character")
(error "line 4859 column 139: unexpected character")
(error "line 4859 column 141: unexpected character")
(error "line 4863 column 139: unexpected character")
(error "line 4863 column 141: unexpected character")
(error "line 5083 column 78: unexpected character")
(error "line 5083 column 80: unexpected character")
(error "line 5088 column 86: unexpected character")
(error "line 5088 column 88: unexpected character")
(error "line 5093 column 94: unexpected character")
(error "line 5093 column 96: unexpected character")
(error "line 5097 column 94: unexpected character")
(error "line 5097 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000017.smt2
(error "line 26 column 48: unexpected character")
(error "line 26 column 50: unexpected character")
(error "line 34 column 48: unexpected character")
(error "line 34 column 50: unexpected character")
(error "line 42 column 49: unexpected character")
(error "line 42 column 51: unexpected character")
(error "line 50 column 49: unexpected character")
(error "line 50 column 51: unexpected character")
(error "line 58 column 49: unexpected character")
(error "line 58 column 51: unexpected character")
(error "line 66 column 49: unexpected character")
(error "line 66 column 51: unexpected character")
(error "line 74 column 49: unexpected character")
(error "line 74 column 51: unexpected character")
(error "line 82 column 49: unexpected character")
(error "line 82 column 51: unexpected character")
(error "line 90 column 49: unexpected character")
(error "line 90 column 51: unexpected character")
(error "line 98 column 49: unexpected character")
(error "line 98 column 51: unexpected character")
(error "line 106 column 49: unexpected character")
(error "line 106 column 51: unexpected character")
(error "line 114 column 48: unexpected character")
(error "line 114 column 50: unexpected character")
(error "line 122 column 48: unexpected character")
(error "line 122 column 50: unexpected character")
(error "line 130 column 48: unexpected character")
(error "line 130 column 50: unexpected character")
(error "line 138 column 48: unexpected character")
(error "line 138 column 50: unexpected character")
(error "line 146 column 48: unexpected character")
(error "line 146 column 50: unexpected character")
(error "line 154 column 48: unexpected character")
(error "line 154 column 50: unexpected character")
(error "line 162 column 48: unexpected character")
(error "line 162 column 50: unexpected character")
(error "line 170 column 48: unexpected character")
(error "line 170 column 50: unexpected character")
(error "line 567 column 862: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 567 column 897: unexpected character")
(error "line 567 column 899: unexpected character")
(error "line 572 column 905: unexpected character")
(error "line 572 column 907: unexpected character")
(error "line 577 column 913: unexpected character")
(error "line 577 column 915: unexpected character")
(error "line 581 column 913: unexpected character")
(error "line 581 column 915: unexpected character")
(error "line 801 column 852: unexpected character")
(error "line 801 column 854: unexpected character")
(error "line 806 column 860: unexpected character")
(error "line 806 column 862: unexpected character")
(error "line 811 column 868: unexpected character")
(error "line 811 column 870: unexpected character")
(error "line 815 column 868: unexpected character")
(error "line 815 column 870: unexpected character")
(error "line 1035 column 807: unexpected character")
(error "line 1035 column 809: unexpected character")
(error "line 1040 column 815: unexpected character")
(error "line 1040 column 817: unexpected character")
(error "line 1045 column 823: unexpected character")
(error "line 1045 column 825: unexpected character")
(error "line 1049 column 823: unexpected character")
(error "line 1049 column 825: unexpected character")
(error "line 1269 column 762: unexpected character")
(error "line 1269 column 764: unexpected character")
(error "line 1274 column 770: unexpected character")
(error "line 1274 column 772: unexpected character")
(error "line 1279 column 778: unexpected character")
(error "line 1279 column 780: unexpected character")
(error "line 1283 column 778: unexpected character")
(error "line 1283 column 780: unexpected character")
(error "line 1503 column 717: unexpected character")
(error "line 1503 column 719: unexpected character")
(error "line 1508 column 725: unexpected character")
(error "line 1508 column 727: unexpected character")
(error "line 1513 column 733: unexpected character")
(error "line 1513 column 735: unexpected character")
(error "line 1517 column 733: unexpected character")
(error "line 1517 column 735: unexpected character")
(error "line 1737 column 672: unexpected character")
(error "line 1737 column 674: unexpected character")
(error "line 1742 column 680: unexpected character")
(error "line 1742 column 682: unexpected character")
(error "line 1747 column 688: unexpected character")
(error "line 1747 column 690: unexpected character")
(error "line 1751 column 688: unexpected character")
(error "line 1751 column 690: unexpected character")
(error "line 1971 column 627: unexpected character")
(error "line 1971 column 629: unexpected character")
(error "line 1976 column 635: unexpected character")
(error "line 1976 column 637: unexpected character")
(error "line 1981 column 643: unexpected character")
(error "line 1981 column 645: unexpected character")
(error "line 1985 column 643: unexpected character")
(error "line 1985 column 645: unexpected character")
(error "line 2205 column 582: unexpected character")
(error "line 2205 column 584: unexpected character")
(error "line 2210 column 590: unexpected character")
(error "line 2210 column 592: unexpected character")
(error "line 2215 column 598: unexpected character")
(error "line 2215 column 600: unexpected character")
(error "line 2219 column 598: unexpected character")
(error "line 2219 column 600: unexpected character")
(error "line 2465 column 532: unexpected character")
(error "line 2465 column 534: unexpected character")
(error "line 2470 column 540: unexpected character")
(error "line 2470 column 542: unexpected character")
(error "line 2475 column 548: unexpected character")
(error "line 2475 column 550: unexpected character")
(error "line 2479 column 548: unexpected character")
(error "line 2479 column 550: unexpected character")
(error "line 2699 column 487: unexpected character")
(error "line 2699 column 489: unexpected character")
(error "line 2704 column 495: unexpected character")
(error "line 2704 column 497: unexpected character")
(error "line 2709 column 503: unexpected character")
(error "line 2709 column 505: unexpected character")
(error "line 2713 column 503: unexpected character")
(error "line 2713 column 505: unexpected character")
(error "line 2959 column 438: unexpected character")
(error "line 2959 column 440: unexpected character")
(error "line 2964 column 446: unexpected character")
(error "line 2964 column 448: unexpected character")
(error "line 2969 column 454: unexpected character")
(error "line 2969 column 456: unexpected character")
(error "line 2973 column 454: unexpected character")
(error "line 2973 column 456: unexpected character")
(error "line 3193 column 393: unexpected character")
(error "line 3193 column 395: unexpected character")
(error "line 3198 column 401: unexpected character")
(error "line 3198 column 403: unexpected character")
(error "line 3203 column 409: unexpected character")
(error "line 3203 column 411: unexpected character")
(error "line 3207 column 409: unexpected character")
(error "line 3207 column 411: unexpected character")
(error "line 3427 column 348: unexpected character")
(error "line 3427 column 350: unexpected character")
(error "line 3432 column 356: unexpected character")
(error "line 3432 column 358: unexpected character")
(error "line 3437 column 364: unexpected character")
(error "line 3437 column 366: unexpected character")
(error "line 3441 column 364: unexpected character")
(error "line 3441 column 366: unexpected character")
(error "line 3661 column 303: unexpected character")
(error "line 3661 column 305: unexpected character")
(error "line 3666 column 311: unexpected character")
(error "line 3666 column 313: unexpected character")
(error "line 3671 column 319: unexpected character")
(error "line 3671 column 321: unexpected character")
(error "line 3675 column 319: unexpected character")
(error "line 3675 column 321: unexpected character")
(error "line 3895 column 258: unexpected character")
(error "line 3895 column 260: unexpected character")
(error "line 3900 column 266: unexpected character")
(error "line 3900 column 268: unexpected character")
(error "line 3905 column 274: unexpected character")
(error "line 3905 column 276: unexpected character")
(error "line 3909 column 274: unexpected character")
(error "line 3909 column 276: unexpected character")
(error "line 4129 column 213: unexpected character")
(error "line 4129 column 215: unexpected character")
(error "line 4134 column 221: unexpected character")
(error "line 4134 column 223: unexpected character")
(error "line 4139 column 229: unexpected character")
(error "line 4139 column 231: unexpected character")
(error "line 4143 column 229: unexpected character")
(error "line 4143 column 231: unexpected character")
(error "line 4363 column 168: unexpected character")
(error "line 4363 column 170: unexpected character")
(error "line 4368 column 176: unexpected character")
(error "line 4368 column 178: unexpected character")
(error "line 4373 column 184: unexpected character")
(error "line 4373 column 186: unexpected character")
(error "line 4377 column 184: unexpected character")
(error "line 4377 column 186: unexpected character")
(error "line 4597 column 123: unexpected character")
(error "line 4597 column 125: unexpected character")
(error "line 4602 column 131: unexpected character")
(error "line 4602 column 133: unexpected character")
(error "line 4607 column 139: unexpected character")
(error "line 4607 column 141: unexpected character")
(error "line 4611 column 139: unexpected character")
(error "line 4611 column 141: unexpected character")
(error "line 4831 column 78: unexpected character")
(error "line 4831 column 80: unexpected character")
(error "line 4836 column 86: unexpected character")
(error "line 4836 column 88: unexpected character")
(error "line 4841 column 94: unexpected character")
(error "line 4841 column 96: unexpected character")
(error "line 4845 column 94: unexpected character")
(error "line 4845 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000018.smt2
(error "line 25 column 48: unexpected character")
(error "line 25 column 50: unexpected character")
(error "line 33 column 48: unexpected character")
(error "line 33 column 50: unexpected character")
(error "line 41 column 49: unexpected character")
(error "line 41 column 51: unexpected character")
(error "line 49 column 49: unexpected character")
(error "line 49 column 51: unexpected character")
(error "line 57 column 49: unexpected character")
(error "line 57 column 51: unexpected character")
(error "line 65 column 49: unexpected character")
(error "line 65 column 51: unexpected character")
(error "line 73 column 49: unexpected character")
(error "line 73 column 51: unexpected character")
(error "line 81 column 49: unexpected character")
(error "line 81 column 51: unexpected character")
(error "line 89 column 49: unexpected character")
(error "line 89 column 51: unexpected character")
(error "line 97 column 49: unexpected character")
(error "line 97 column 51: unexpected character")
(error "line 105 column 48: unexpected character")
(error "line 105 column 50: unexpected character")
(error "line 113 column 48: unexpected character")
(error "line 113 column 50: unexpected character")
(error "line 121 column 48: unexpected character")
(error "line 121 column 50: unexpected character")
(error "line 129 column 48: unexpected character")
(error "line 129 column 50: unexpected character")
(error "line 137 column 48: unexpected character")
(error "line 137 column 50: unexpected character")
(error "line 145 column 48: unexpected character")
(error "line 145 column 50: unexpected character")
(error "line 153 column 48: unexpected character")
(error "line 153 column 50: unexpected character")
(error "line 161 column 48: unexpected character")
(error "line 161 column 50: unexpected character")
(error "line 549 column 817: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 549 column 852: unexpected character")
(error "line 549 column 854: unexpected character")
(error "line 554 column 860: unexpected character")
(error "line 554 column 862: unexpected character")
(error "line 559 column 868: unexpected character")
(error "line 559 column 870: unexpected character")
(error "line 563 column 868: unexpected character")
(error "line 563 column 870: unexpected character")
(error "line 783 column 807: unexpected character")
(error "line 783 column 809: unexpected character")
(error "line 788 column 815: unexpected character")
(error "line 788 column 817: unexpected character")
(error "line 793 column 823: unexpected character")
(error "line 793 column 825: unexpected character")
(error "line 797 column 823: unexpected character")
(error "line 797 column 825: unexpected character")
(error "line 1017 column 762: unexpected character")
(error "line 1017 column 764: unexpected character")
(error "line 1022 column 770: unexpected character")
(error "line 1022 column 772: unexpected character")
(error "line 1027 column 778: unexpected character")
(error "line 1027 column 780: unexpected character")
(error "line 1031 column 778: unexpected character")
(error "line 1031 column 780: unexpected character")
(error "line 1251 column 717: unexpected character")
(error "line 1251 column 719: unexpected character")
(error "line 1256 column 725: unexpected character")
(error "line 1256 column 727: unexpected character")
(error "line 1261 column 733: unexpected character")
(error "line 1261 column 735: unexpected character")
(error "line 1265 column 733: unexpected character")
(error "line 1265 column 735: unexpected character")
(error "line 1485 column 672: unexpected character")
(error "line 1485 column 674: unexpected character")
(error "line 1490 column 680: unexpected character")
(error "line 1490 column 682: unexpected character")
(error "line 1495 column 688: unexpected character")
(error "line 1495 column 690: unexpected character")
(error "line 1499 column 688: unexpected character")
(error "line 1499 column 690: unexpected character")
(error "line 1719 column 627: unexpected character")
(error "line 1719 column 629: unexpected character")
(error "line 1724 column 635: unexpected character")
(error "line 1724 column 637: unexpected character")
(error "line 1729 column 643: unexpected character")
(error "line 1729 column 645: unexpected character")
(error "line 1733 column 643: unexpected character")
(error "line 1733 column 645: unexpected character")
(error "line 1953 column 582: unexpected character")
(error "line 1953 column 584: unexpected character")
(error "line 1958 column 590: unexpected character")
(error "line 1958 column 592: unexpected character")
(error "line 1963 column 598: unexpected character")
(error "line 1963 column 600: unexpected character")
(error "line 1967 column 598: unexpected character")
(error "line 1967 column 600: unexpected character")
(error "line 2187 column 537: unexpected character")
(error "line 2187 column 539: unexpected character")
(error "line 2192 column 545: unexpected character")
(error "line 2192 column 547: unexpected character")
(error "line 2197 column 553: unexpected character")
(error "line 2197 column 555: unexpected character")
(error "line 2201 column 553: unexpected character")
(error "line 2201 column 555: unexpected character")
(error "line 2447 column 487: unexpected character")
(error "line 2447 column 489: unexpected character")
(error "line 2452 column 495: unexpected character")
(error "line 2452 column 497: unexpected character")
(error "line 2457 column 503: unexpected character")
(error "line 2457 column 505: unexpected character")
(error "line 2461 column 503: unexpected character")
(error "line 2461 column 505: unexpected character")
(error "line 2681 column 442: unexpected character")
(error "line 2681 column 444: unexpected character")
(error "line 2686 column 450: unexpected character")
(error "line 2686 column 452: unexpected character")
(error "line 2691 column 458: unexpected character")
(error "line 2691 column 460: unexpected character")
(error "line 2695 column 458: unexpected character")
(error "line 2695 column 460: unexpected character")
(error "line 2941 column 393: unexpected character")
(error "line 2941 column 395: unexpected character")
(error "line 2946 column 401: unexpected character")
(error "line 2946 column 403: unexpected character")
(error "line 2951 column 409: unexpected character")
(error "line 2951 column 411: unexpected character")
(error "line 2955 column 409: unexpected character")
(error "line 2955 column 411: unexpected character")
(error "line 3175 column 348: unexpected character")
(error "line 3175 column 350: unexpected character")
(error "line 3180 column 356: unexpected character")
(error "line 3180 column 358: unexpected character")
(error "line 3185 column 364: unexpected character")
(error "line 3185 column 366: unexpected character")
(error "line 3189 column 364: unexpected character")
(error "line 3189 column 366: unexpected character")
(error "line 3409 column 303: unexpected character")
(error "line 3409 column 305: unexpected character")
(error "line 3414 column 311: unexpected character")
(error "line 3414 column 313: unexpected character")
(error "line 3419 column 319: unexpected character")
(error "line 3419 column 321: unexpected character")
(error "line 3423 column 319: unexpected character")
(error "line 3423 column 321: unexpected character")
(error "line 3643 column 258: unexpected character")
(error "line 3643 column 260: unexpected character")
(error "line 3648 column 266: unexpected character")
(error "line 3648 column 268: unexpected character")
(error "line 3653 column 274: unexpected character")
(error "line 3653 column 276: unexpected character")
(error "line 3657 column 274: unexpected character")
(error "line 3657 column 276: unexpected character")
(error "line 3877 column 213: unexpected character")
(error "line 3877 column 215: unexpected character")
(error "line 3882 column 221: unexpected character")
(error "line 3882 column 223: unexpected character")
(error "line 3887 column 229: unexpected character")
(error "line 3887 column 231: unexpected character")
(error "line 3891 column 229: unexpected character")
(error "line 3891 column 231: unexpected character")
(error "line 4111 column 168: unexpected character")
(error "line 4111 column 170: unexpected character")
(error "line 4116 column 176: unexpected character")
(error "line 4116 column 178: unexpected character")
(error "line 4121 column 184: unexpected character")
(error "line 4121 column 186: unexpected character")
(error "line 4125 column 184: unexpected character")
(error "line 4125 column 186: unexpected character")
(error "line 4345 column 123: unexpected character")
(error "line 4345 column 125: unexpected character")
(error "line 4350 column 131: unexpected character")
(error "line 4350 column 133: unexpected character")
(error "line 4355 column 139: unexpected character")
(error "line 4355 column 141: unexpected character")
(error "line 4359 column 139: unexpected character")
(error "line 4359 column 141: unexpected character")
(error "line 4579 column 78: unexpected character")
(error "line 4579 column 80: unexpected character")
(error "line 4584 column 86: unexpected character")
(error "line 4584 column 88: unexpected character")
(error "line 4589 column 94: unexpected character")
(error "line 4589 column 96: unexpected character")
(error "line 4593 column 94: unexpected character")
(error "line 4593 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000019.smt2
(error "line 24 column 48: unexpected character")
(error "line 24 column 50: unexpected character")
(error "line 32 column 48: unexpected character")
(error "line 32 column 50: unexpected character")
(error "line 40 column 49: unexpected character")
(error "line 40 column 51: unexpected character")
(error "line 48 column 49: unexpected character")
(error "line 48 column 51: unexpected character")
(error "line 56 column 49: unexpected character")
(error "line 56 column 51: unexpected character")
(error "line 64 column 49: unexpected character")
(error "line 64 column 51: unexpected character")
(error "line 72 column 49: unexpected character")
(error "line 72 column 51: unexpected character")
(error "line 80 column 49: unexpected character")
(error "line 80 column 51: unexpected character")
(error "line 88 column 49: unexpected character")
(error "line 88 column 51: unexpected character")
(error "line 96 column 48: unexpected character")
(error "line 96 column 50: unexpected character")
(error "line 104 column 48: unexpected character")
(error "line 104 column 50: unexpected character")
(error "line 112 column 48: unexpected character")
(error "line 112 column 50: unexpected character")
(error "line 120 column 48: unexpected character")
(error "line 120 column 50: unexpected character")
(error "line 128 column 48: unexpected character")
(error "line 128 column 50: unexpected character")
(error "line 136 column 48: unexpected character")
(error "line 136 column 50: unexpected character")
(error "line 144 column 48: unexpected character")
(error "line 144 column 50: unexpected character")
(error "line 152 column 48: unexpected character")
(error "line 152 column 50: unexpected character")
(error "line 531 column 772: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 531 column 807: unexpected character")
(error "line 531 column 809: unexpected character")
(error "line 536 column 815: unexpected character")
(error "line 536 column 817: unexpected character")
(error "line 541 column 823: unexpected character")
(error "line 541 column 825: unexpected character")
(error "line 545 column 823: unexpected character")
(error "line 545 column 825: unexpected character")
(error "line 765 column 762: unexpected character")
(error "line 765 column 764: unexpected character")
(error "line 770 column 770: unexpected character")
(error "line 770 column 772: unexpected character")
(error "line 775 column 778: unexpected character")
(error "line 775 column 780: unexpected character")
(error "line 779 column 778: unexpected character")
(error "line 779 column 780: unexpected character")
(error "line 999 column 717: unexpected character")
(error "line 999 column 719: unexpected character")
(error "line 1004 column 725: unexpected character")
(error "line 1004 column 727: unexpected character")
(error "line 1009 column 733: unexpected character")
(error "line 1009 column 735: unexpected character")
(error "line 1013 column 733: unexpected character")
(error "line 1013 column 735: unexpected character")
(error "line 1233 column 672: unexpected character")
(error "line 1233 column 674: unexpected character")
(error "line 1238 column 680: unexpected character")
(error "line 1238 column 682: unexpected character")
(error "line 1243 column 688: unexpected character")
(error "line 1243 column 690: unexpected character")
(error "line 1247 column 688: unexpected character")
(error "line 1247 column 690: unexpected character")
(error "line 1467 column 627: unexpected character")
(error "line 1467 column 629: unexpected character")
(error "line 1472 column 635: unexpected character")
(error "line 1472 column 637: unexpected character")
(error "line 1477 column 643: unexpected character")
(error "line 1477 column 645: unexpected character")
(error "line 1481 column 643: unexpected character")
(error "line 1481 column 645: unexpected character")
(error "line 1701 column 582: unexpected character")
(error "line 1701 column 584: unexpected character")
(error "line 1706 column 590: unexpected character")
(error "line 1706 column 592: unexpected character")
(error "line 1711 column 598: unexpected character")
(error "line 1711 column 600: unexpected character")
(error "line 1715 column 598: unexpected character")
(error "line 1715 column 600: unexpected character")
(error "line 1935 column 537: unexpected character")
(error "line 1935 column 539: unexpected character")
(error "line 1940 column 545: unexpected character")
(error "line 1940 column 547: unexpected character")
(error "line 1945 column 553: unexpected character")
(error "line 1945 column 555: unexpected character")
(error "line 1949 column 553: unexpected character")
(error "line 1949 column 555: unexpected character")
(error "line 2169 column 492: unexpected character")
(error "line 2169 column 494: unexpected character")
(error "line 2174 column 500: unexpected character")
(error "line 2174 column 502: unexpected character")
(error "line 2179 column 508: unexpected character")
(error "line 2179 column 510: unexpected character")
(error "line 2183 column 508: unexpected character")
(error "line 2183 column 510: unexpected character")
(error "line 2429 column 442: unexpected character")
(error "line 2429 column 444: unexpected character")
(error "line 2434 column 450: unexpected character")
(error "line 2434 column 452: unexpected character")
(error "line 2439 column 458: unexpected character")
(error "line 2439 column 460: unexpected character")
(error "line 2443 column 458: unexpected character")
(error "line 2443 column 460: unexpected character")
(error "line 2663 column 397: unexpected character")
(error "line 2663 column 399: unexpected character")
(error "line 2668 column 405: unexpected character")
(error "line 2668 column 407: unexpected character")
(error "line 2673 column 413: unexpected character")
(error "line 2673 column 415: unexpected character")
(error "line 2677 column 413: unexpected character")
(error "line 2677 column 415: unexpected character")
(error "line 2923 column 348: unexpected character")
(error "line 2923 column 350: unexpected character")
(error "line 2928 column 356: unexpected character")
(error "line 2928 column 358: unexpected character")
(error "line 2933 column 364: unexpected character")
(error "line 2933 column 366: unexpected character")
(error "line 2937 column 364: unexpected character")
(error "line 2937 column 366: unexpected character")
(error "line 3157 column 303: unexpected character")
(error "line 3157 column 305: unexpected character")
(error "line 3162 column 311: unexpected character")
(error "line 3162 column 313: unexpected character")
(error "line 3167 column 319: unexpected character")
(error "line 3167 column 321: unexpected character")
(error "line 3171 column 319: unexpected character")
(error "line 3171 column 321: unexpected character")
(error "line 3391 column 258: unexpected character")
(error "line 3391 column 260: unexpected character")
(error "line 3396 column 266: unexpected character")
(error "line 3396 column 268: unexpected character")
(error "line 3401 column 274: unexpected character")
(error "line 3401 column 276: unexpected character")
(error "line 3405 column 274: unexpected character")
(error "line 3405 column 276: unexpected character")
(error "line 3625 column 213: unexpected character")
(error "line 3625 column 215: unexpected character")
(error "line 3630 column 221: unexpected character")
(error "line 3630 column 223: unexpected character")
(error "line 3635 column 229: unexpected character")
(error "line 3635 column 231: unexpected character")
(error "line 3639 column 229: unexpected character")
(error "line 3639 column 231: unexpected character")
(error "line 3859 column 168: unexpected character")
(error "line 3859 column 170: unexpected character")
(error "line 3864 column 176: unexpected character")
(error "line 3864 column 178: unexpected character")
(error "line 3869 column 184: unexpected character")
(error "line 3869 column 186: unexpected character")
(error "line 3873 column 184: unexpected character")
(error "line 3873 column 186: unexpected character")
(error "line 4093 column 123: unexpected character")
(error "line 4093 column 125: unexpected character")
(error "line 4098 column 131: unexpected character")
(error "line 4098 column 133: unexpected character")
(error "line 4103 column 139: unexpected character")
(error "line 4103 column 141: unexpected character")
(error "line 4107 column 139: unexpected character")
(error "line 4107 column 141: unexpected character")
(error "line 4327 column 78: unexpected character")
(error "line 4327 column 80: unexpected character")
(error "line 4332 column 86: unexpected character")
(error "line 4332 column 88: unexpected character")
(error "line 4337 column 94: unexpected character")
(error "line 4337 column 96: unexpected character")
(error "line 4341 column 94: unexpected character")
(error "line 4341 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000020.smt2
(error "line 23 column 48: unexpected character")
(error "line 23 column 50: unexpected character")
(error "line 31 column 48: unexpected character")
(error "line 31 column 50: unexpected character")
(error "line 39 column 49: unexpected character")
(error "line 39 column 51: unexpected character")
(error "line 47 column 49: unexpected character")
(error "line 47 column 51: unexpected character")
(error "line 55 column 49: unexpected character")
(error "line 55 column 51: unexpected character")
(error "line 63 column 49: unexpected character")
(error "line 63 column 51: unexpected character")
(error "line 71 column 49: unexpected character")
(error "line 71 column 51: unexpected character")
(error "line 79 column 49: unexpected character")
(error "line 79 column 51: unexpected character")
(error "line 87 column 48: unexpected character")
(error "line 87 column 50: unexpected character")
(error "line 95 column 48: unexpected character")
(error "line 95 column 50: unexpected character")
(error "line 103 column 48: unexpected character")
(error "line 103 column 50: unexpected character")
(error "line 111 column 48: unexpected character")
(error "line 111 column 50: unexpected character")
(error "line 119 column 48: unexpected character")
(error "line 119 column 50: unexpected character")
(error "line 127 column 48: unexpected character")
(error "line 127 column 50: unexpected character")
(error "line 135 column 48: unexpected character")
(error "line 135 column 50: unexpected character")
(error "line 143 column 48: unexpected character")
(error "line 143 column 50: unexpected character")
(error "line 513 column 727: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 513 column 762: unexpected character")
(error "line 513 column 764: unexpected character")
(error "line 518 column 770: unexpected character")
(error "line 518 column 772: unexpected character")
(error "line 523 column 778: unexpected character")
(error "line 523 column 780: unexpected character")
(error "line 527 column 778: unexpected character")
(error "line 527 column 780: unexpected character")
(error "line 747 column 717: unexpected character")
(error "line 747 column 719: unexpected character")
(error "line 752 column 725: unexpected character")
(error "line 752 column 727: unexpected character")
(error "line 757 column 733: unexpected character")
(error "line 757 column 735: unexpected character")
(error "line 761 column 733: unexpected character")
(error "line 761 column 735: unexpected character")
(error "line 981 column 672: unexpected character")
(error "line 981 column 674: unexpected character")
(error "line 986 column 680: unexpected character")
(error "line 986 column 682: unexpected character")
(error "line 991 column 688: unexpected character")
(error "line 991 column 690: unexpected character")
(error "line 995 column 688: unexpected character")
(error "line 995 column 690: unexpected character")
(error "line 1215 column 627: unexpected character")
(error "line 1215 column 629: unexpected character")
(error "line 1220 column 635: unexpected character")
(error "line 1220 column 637: unexpected character")
(error "line 1225 column 643: unexpected character")
(error "line 1225 column 645: unexpected character")
(error "line 1229 column 643: unexpected character")
(error "line 1229 column 645: unexpected character")
(error "line 1449 column 582: unexpected character")
(error "line 1449 column 584: unexpected character")
(error "line 1454 column 590: unexpected character")
(error "line 1454 column 592: unexpected character")
(error "line 1459 column 598: unexpected character")
(error "line 1459 column 600: unexpected character")
(error "line 1463 column 598: unexpected character")
(error "line 1463 column 600: unexpected character")
(error "line 1683 column 537: unexpected character")
(error "line 1683 column 539: unexpected character")
(error "line 1688 column 545: unexpected character")
(error "line 1688 column 547: unexpected character")
(error "line 1693 column 553: unexpected character")
(error "line 1693 column 555: unexpected character")
(error "line 1697 column 553: unexpected character")
(error "line 1697 column 555: unexpected character")
(error "line 1917 column 492: unexpected character")
(error "line 1917 column 494: unexpected character")
(error "line 1922 column 500: unexpected character")
(error "line 1922 column 502: unexpected character")
(error "line 1927 column 508: unexpected character")
(error "line 1927 column 510: unexpected character")
(error "line 1931 column 508: unexpected character")
(error "line 1931 column 510: unexpected character")
(error "line 2151 column 447: unexpected character")
(error "line 2151 column 449: unexpected character")
(error "line 2156 column 455: unexpected character")
(error "line 2156 column 457: unexpected character")
(error "line 2161 column 463: unexpected character")
(error "line 2161 column 465: unexpected character")
(error "line 2165 column 463: unexpected character")
(error "line 2165 column 465: unexpected character")
(error "line 2411 column 397: unexpected character")
(error "line 2411 column 399: unexpected character")
(error "line 2416 column 405: unexpected character")
(error "line 2416 column 407: unexpected character")
(error "line 2421 column 413: unexpected character")
(error "line 2421 column 415: unexpected character")
(error "line 2425 column 413: unexpected character")
(error "line 2425 column 415: unexpected character")
(error "line 2645 column 352: unexpected character")
(error "line 2645 column 354: unexpected character")
(error "line 2650 column 360: unexpected character")
(error "line 2650 column 362: unexpected character")
(error "line 2655 column 368: unexpected character")
(error "line 2655 column 370: unexpected character")
(error "line 2659 column 368: unexpected character")
(error "line 2659 column 370: unexpected character")
(error "line 2905 column 303: unexpected character")
(error "line 2905 column 305: unexpected character")
(error "line 2910 column 311: unexpected character")
(error "line 2910 column 313: unexpected character")
(error "line 2915 column 319: unexpected character")
(error "line 2915 column 321: unexpected character")
(error "line 2919 column 319: unexpected character")
(error "line 2919 column 321: unexpected character")
(error "line 3139 column 258: unexpected character")
(error "line 3139 column 260: unexpected character")
(error "line 3144 column 266: unexpected character")
(error "line 3144 column 268: unexpected character")
(error "line 3149 column 274: unexpected character")
(error "line 3149 column 276: unexpected character")
(error "line 3153 column 274: unexpected character")
(error "line 3153 column 276: unexpected character")
(error "line 3373 column 213: unexpected character")
(error "line 3373 column 215: unexpected character")
(error "line 3378 column 221: unexpected character")
(error "line 3378 column 223: unexpected character")
(error "line 3383 column 229: unexpected character")
(error "line 3383 column 231: unexpected character")
(error "line 3387 column 229: unexpected character")
(error "line 3387 column 231: unexpected character")
(error "line 3607 column 168: unexpected character")
(error "line 3607 column 170: unexpected character")
(error "line 3612 column 176: unexpected character")
(error "line 3612 column 178: unexpected character")
(error "line 3617 column 184: unexpected character")
(error "line 3617 column 186: unexpected character")
(error "line 3621 column 184: unexpected character")
(error "line 3621 column 186: unexpected character")
(error "line 3841 column 123: unexpected character")
(error "line 3841 column 125: unexpected character")
(error "line 3846 column 131: unexpected character")
(error "line 3846 column 133: unexpected character")
(error "line 3851 column 139: unexpected character")
(error "line 3851 column 141: unexpected character")
(error "line 3855 column 139: unexpected character")
(error "line 3855 column 141: unexpected character")
(error "line 4075 column 78: unexpected character")
(error "line 4075 column 80: unexpected character")
(error "line 4080 column 86: unexpected character")
(error "line 4080 column 88: unexpected character")
(error "line 4085 column 94: unexpected character")
(error "line 4085 column 96: unexpected character")
(error "line 4089 column 94: unexpected character")
(error "line 4089 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000021.smt2
(error "line 22 column 48: unexpected character")
(error "line 22 column 50: unexpected character")
(error "line 30 column 48: unexpected character")
(error "line 30 column 50: unexpected character")
(error "line 38 column 49: unexpected character")
(error "line 38 column 51: unexpected character")
(error "line 46 column 49: unexpected character")
(error "line 46 column 51: unexpected character")
(error "line 54 column 49: unexpected character")
(error "line 54 column 51: unexpected character")
(error "line 62 column 49: unexpected character")
(error "line 62 column 51: unexpected character")
(error "line 70 column 49: unexpected character")
(error "line 70 column 51: unexpected character")
(error "line 78 column 48: unexpected character")
(error "line 78 column 50: unexpected character")
(error "line 86 column 48: unexpected character")
(error "line 86 column 50: unexpected character")
(error "line 94 column 48: unexpected character")
(error "line 94 column 50: unexpected character")
(error "line 102 column 48: unexpected character")
(error "line 102 column 50: unexpected character")
(error "line 110 column 48: unexpected character")
(error "line 110 column 50: unexpected character")
(error "line 118 column 48: unexpected character")
(error "line 118 column 50: unexpected character")
(error "line 126 column 48: unexpected character")
(error "line 126 column 50: unexpected character")
(error "line 134 column 48: unexpected character")
(error "line 134 column 50: unexpected character")
(error "line 495 column 682: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 495 column 717: unexpected character")
(error "line 495 column 719: unexpected character")
(error "line 500 column 725: unexpected character")
(error "line 500 column 727: unexpected character")
(error "line 505 column 733: unexpected character")
(error "line 505 column 735: unexpected character")
(error "line 509 column 733: unexpected character")
(error "line 509 column 735: unexpected character")
(error "line 729 column 672: unexpected character")
(error "line 729 column 674: unexpected character")
(error "line 734 column 680: unexpected character")
(error "line 734 column 682: unexpected character")
(error "line 739 column 688: unexpected character")
(error "line 739 column 690: unexpected character")
(error "line 743 column 688: unexpected character")
(error "line 743 column 690: unexpected character")
(error "line 963 column 627: unexpected character")
(error "line 963 column 629: unexpected character")
(error "line 968 column 635: unexpected character")
(error "line 968 column 637: unexpected character")
(error "line 973 column 643: unexpected character")
(error "line 973 column 645: unexpected character")
(error "line 977 column 643: unexpected character")
(error "line 977 column 645: unexpected character")
(error "line 1197 column 582: unexpected character")
(error "line 1197 column 584: unexpected character")
(error "line 1202 column 590: unexpected character")
(error "line 1202 column 592: unexpected character")
(error "line 1207 column 598: unexpected character")
(error "line 1207 column 600: unexpected character")
(error "line 1211 column 598: unexpected character")
(error "line 1211 column 600: unexpected character")
(error "line 1431 column 537: unexpected character")
(error "line 1431 column 539: unexpected character")
(error "line 1436 column 545: unexpected character")
(error "line 1436 column 547: unexpected character")
(error "line 1441 column 553: unexpected character")
(error "line 1441 column 555: unexpected character")
(error "line 1445 column 553: unexpected character")
(error "line 1445 column 555: unexpected character")
(error "line 1665 column 492: unexpected character")
(error "line 1665 column 494: unexpected character")
(error "line 1670 column 500: unexpected character")
(error "line 1670 column 502: unexpected character")
(error "line 1675 column 508: unexpected character")
(error "line 1675 column 510: unexpected character")
(error "line 1679 column 508: unexpected character")
(error "line 1679 column 510: unexpected character")
(error "line 1899 column 447: unexpected character")
(error "line 1899 column 449: unexpected character")
(error "line 1904 column 455: unexpected character")
(error "line 1904 column 457: unexpected character")
(error "line 1909 column 463: unexpected character")
(error "line 1909 column 465: unexpected character")
(error "line 1913 column 463: unexpected character")
(error "line 1913 column 465: unexpected character")
(error "line 2133 column 402: unexpected character")
(error "line 2133 column 404: unexpected character")
(error "line 2138 column 410: unexpected character")
(error "line 2138 column 412: unexpected character")
(error "line 2143 column 418: unexpected character")
(error "line 2143 column 420: unexpected character")
(error "line 2147 column 418: unexpected character")
(error "line 2147 column 420: unexpected character")
(error "line 2393 column 352: unexpected character")
(error "line 2393 column 354: unexpected character")
(error "line 2398 column 360: unexpected character")
(error "line 2398 column 362: unexpected character")
(error "line 2403 column 368: unexpected character")
(error "line 2403 column 370: unexpected character")
(error "line 2407 column 368: unexpected character")
(error "line 2407 column 370: unexpected character")
(error "line 2627 column 307: unexpected character")
(error "line 2627 column 309: unexpected character")
(error "line 2632 column 315: unexpected character")
(error "line 2632 column 317: unexpected character")
(error "line 2637 column 323: unexpected character")
(error "line 2637 column 325: unexpected character")
(error "line 2641 column 323: unexpected character")
(error "line 2641 column 325: unexpected character")
(error "line 2887 column 258: unexpected character")
(error "line 2887 column 260: unexpected character")
(error "line 2892 column 266: unexpected character")
(error "line 2892 column 268: unexpected character")
(error "line 2897 column 274: unexpected character")
(error "line 2897 column 276: unexpected character")
(error "line 2901 column 274: unexpected character")
(error "line 2901 column 276: unexpected character")
(error "line 3121 column 213: unexpected character")
(error "line 3121 column 215: unexpected character")
(error "line 3126 column 221: unexpected character")
(error "line 3126 column 223: unexpected character")
(error "line 3131 column 229: unexpected character")
(error "line 3131 column 231: unexpected character")
(error "line 3135 column 229: unexpected character")
(error "line 3135 column 231: unexpected character")
(error "line 3355 column 168: unexpected character")
(error "line 3355 column 170: unexpected character")
(error "line 3360 column 176: unexpected character")
(error "line 3360 column 178: unexpected character")
(error "line 3365 column 184: unexpected character")
(error "line 3365 column 186: unexpected character")
(error "line 3369 column 184: unexpected character")
(error "line 3369 column 186: unexpected character")
(error "line 3589 column 123: unexpected character")
(error "line 3589 column 125: unexpected character")
(error "line 3594 column 131: unexpected character")
(error "line 3594 column 133: unexpected character")
(error "line 3599 column 139: unexpected character")
(error "line 3599 column 141: unexpected character")
(error "line 3603 column 139: unexpected character")
(error "line 3603 column 141: unexpected character")
(error "line 3823 column 78: unexpected character")
(error "line 3823 column 80: unexpected character")
(error "line 3828 column 86: unexpected character")
(error "line 3828 column 88: unexpected character")
(error "line 3833 column 94: unexpected character")
(error "line 3833 column 96: unexpected character")
(error "line 3837 column 94: unexpected character")
(error "line 3837 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000022.smt2
(error "line 21 column 48: unexpected character")
(error "line 21 column 50: unexpected character")
(error "line 29 column 48: unexpected character")
(error "line 29 column 50: unexpected character")
(error "line 37 column 49: unexpected character")
(error "line 37 column 51: unexpected character")
(error "line 45 column 49: unexpected character")
(error "line 45 column 51: unexpected character")
(error "line 53 column 49: unexpected character")
(error "line 53 column 51: unexpected character")
(error "line 61 column 49: unexpected character")
(error "line 61 column 51: unexpected character")
(error "line 69 column 48: unexpected character")
(error "line 69 column 50: unexpected character")
(error "line 77 column 48: unexpected character")
(error "line 77 column 50: unexpected character")
(error "line 85 column 48: unexpected character")
(error "line 85 column 50: unexpected character")
(error "line 93 column 48: unexpected character")
(error "line 93 column 50: unexpected character")
(error "line 101 column 48: unexpected character")
(error "line 101 column 50: unexpected character")
(error "line 109 column 48: unexpected character")
(error "line 109 column 50: unexpected character")
(error "line 117 column 48: unexpected character")
(error "line 117 column 50: unexpected character")
(error "line 125 column 48: unexpected character")
(error "line 125 column 50: unexpected character")
(error "line 477 column 637: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 477 column 672: unexpected character")
(error "line 477 column 674: unexpected character")
(error "line 482 column 680: unexpected character")
(error "line 482 column 682: unexpected character")
(error "line 487 column 688: unexpected character")
(error "line 487 column 690: unexpected character")
(error "line 491 column 688: unexpected character")
(error "line 491 column 690: unexpected character")
(error "line 711 column 627: unexpected character")
(error "line 711 column 629: unexpected character")
(error "line 716 column 635: unexpected character")
(error "line 716 column 637: unexpected character")
(error "line 721 column 643: unexpected character")
(error "line 721 column 645: unexpected character")
(error "line 725 column 643: unexpected character")
(error "line 725 column 645: unexpected character")
(error "line 945 column 582: unexpected character")
(error "line 945 column 584: unexpected character")
(error "line 950 column 590: unexpected character")
(error "line 950 column 592: unexpected character")
(error "line 955 column 598: unexpected character")
(error "line 955 column 600: unexpected character")
(error "line 959 column 598: unexpected character")
(error "line 959 column 600: unexpected character")
(error "line 1179 column 537: unexpected character")
(error "line 1179 column 539: unexpected character")
(error "line 1184 column 545: unexpected character")
(error "line 1184 column 547: unexpected character")
(error "line 1189 column 553: unexpected character")
(error "line 1189 column 555: unexpected character")
(error "line 1193 column 553: unexpected character")
(error "line 1193 column 555: unexpected character")
(error "line 1413 column 492: unexpected character")
(error "line 1413 column 494: unexpected character")
(error "line 1418 column 500: unexpected character")
(error "line 1418 column 502: unexpected character")
(error "line 1423 column 508: unexpected character")
(error "line 1423 column 510: unexpected character")
(error "line 1427 column 508: unexpected character")
(error "line 1427 column 510: unexpected character")
(error "line 1647 column 447: unexpected character")
(error "line 1647 column 449: unexpected character")
(error "line 1652 column 455: unexpected character")
(error "line 1652 column 457: unexpected character")
(error "line 1657 column 463: unexpected character")
(error "line 1657 column 465: unexpected character")
(error "line 1661 column 463: unexpected character")
(error "line 1661 column 465: unexpected character")
(error "line 1881 column 402: unexpected character")
(error "line 1881 column 404: unexpected character")
(error "line 1886 column 410: unexpected character")
(error "line 1886 column 412: unexpected character")
(error "line 1891 column 418: unexpected character")
(error "line 1891 column 420: unexpected character")
(error "line 1895 column 418: unexpected character")
(error "line 1895 column 420: unexpected character")
(error "line 2115 column 357: unexpected character")
(error "line 2115 column 359: unexpected character")
(error "line 2120 column 365: unexpected character")
(error "line 2120 column 367: unexpected character")
(error "line 2125 column 373: unexpected character")
(error "line 2125 column 375: unexpected character")
(error "line 2129 column 373: unexpected character")
(error "line 2129 column 375: unexpected character")
(error "line 2375 column 307: unexpected character")
(error "line 2375 column 309: unexpected character")
(error "line 2380 column 315: unexpected character")
(error "line 2380 column 317: unexpected character")
(error "line 2385 column 323: unexpected character")
(error "line 2385 column 325: unexpected character")
(error "line 2389 column 323: unexpected character")
(error "line 2389 column 325: unexpected character")
(error "line 2609 column 262: unexpected character")
(error "line 2609 column 264: unexpected character")
(error "line 2614 column 270: unexpected character")
(error "line 2614 column 272: unexpected character")
(error "line 2619 column 278: unexpected character")
(error "line 2619 column 280: unexpected character")
(error "line 2623 column 278: unexpected character")
(error "line 2623 column 280: unexpected character")
(error "line 2869 column 213: unexpected character")
(error "line 2869 column 215: unexpected character")
(error "line 2874 column 221: unexpected character")
(error "line 2874 column 223: unexpected character")
(error "line 2879 column 229: unexpected character")
(error "line 2879 column 231: unexpected character")
(error "line 2883 column 229: unexpected character")
(error "line 2883 column 231: unexpected character")
(error "line 3103 column 168: unexpected character")
(error "line 3103 column 170: unexpected character")
(error "line 3108 column 176: unexpected character")
(error "line 3108 column 178: unexpected character")
(error "line 3113 column 184: unexpected character")
(error "line 3113 column 186: unexpected character")
(error "line 3117 column 184: unexpected character")
(error "line 3117 column 186: unexpected character")
(error "line 3337 column 123: unexpected character")
(error "line 3337 column 125: unexpected character")
(error "line 3342 column 131: unexpected character")
(error "line 3342 column 133: unexpected character")
(error "line 3347 column 139: unexpected character")
(error "line 3347 column 141: unexpected character")
(error "line 3351 column 139: unexpected character")
(error "line 3351 column 141: unexpected character")
(error "line 3571 column 78: unexpected character")
(error "line 3571 column 80: unexpected character")
(error "line 3576 column 86: unexpected character")
(error "line 3576 column 88: unexpected character")
(error "line 3581 column 94: unexpected character")
(error "line 3581 column 96: unexpected character")
(error "line 3585 column 94: unexpected character")
(error "line 3585 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000023.smt2
(error "line 20 column 48: unexpected character")
(error "line 20 column 50: unexpected character")
(error "line 28 column 48: unexpected character")
(error "line 28 column 50: unexpected character")
(error "line 36 column 49: unexpected character")
(error "line 36 column 51: unexpected character")
(error "line 44 column 49: unexpected character")
(error "line 44 column 51: unexpected character")
(error "line 52 column 49: unexpected character")
(error "line 52 column 51: unexpected character")
(error "line 60 column 48: unexpected character")
(error "line 60 column 50: unexpected character")
(error "line 68 column 48: unexpected character")
(error "line 68 column 50: unexpected character")
(error "line 76 column 48: unexpected character")
(error "line 76 column 50: unexpected character")
(error "line 84 column 48: unexpected character")
(error "line 84 column 50: unexpected character")
(error "line 92 column 48: unexpected character")
(error "line 92 column 50: unexpected character")
(error "line 100 column 48: unexpected character")
(error "line 100 column 50: unexpected character")
(error "line 108 column 48: unexpected character")
(error "line 108 column 50: unexpected character")
(error "line 116 column 48: unexpected character")
(error "line 116 column 50: unexpected character")
(error "line 459 column 592: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 459 column 627: unexpected character")
(error "line 459 column 629: unexpected character")
(error "line 464 column 635: unexpected character")
(error "line 464 column 637: unexpected character")
(error "line 469 column 643: unexpected character")
(error "line 469 column 645: unexpected character")
(error "line 473 column 643: unexpected character")
(error "line 473 column 645: unexpected character")
(error "line 693 column 582: unexpected character")
(error "line 693 column 584: unexpected character")
(error "line 698 column 590: unexpected character")
(error "line 698 column 592: unexpected character")
(error "line 703 column 598: unexpected character")
(error "line 703 column 600: unexpected character")
(error "line 707 column 598: unexpected character")
(error "line 707 column 600: unexpected character")
(error "line 927 column 537: unexpected character")
(error "line 927 column 539: unexpected character")
(error "line 932 column 545: unexpected character")
(error "line 932 column 547: unexpected character")
(error "line 937 column 553: unexpected character")
(error "line 937 column 555: unexpected character")
(error "line 941 column 553: unexpected character")
(error "line 941 column 555: unexpected character")
(error "line 1161 column 492: unexpected character")
(error "line 1161 column 494: unexpected character")
(error "line 1166 column 500: unexpected character")
(error "line 1166 column 502: unexpected character")
(error "line 1171 column 508: unexpected character")
(error "line 1171 column 510: unexpected character")
(error "line 1175 column 508: unexpected character")
(error "line 1175 column 510: unexpected character")
(error "line 1395 column 447: unexpected character")
(error "line 1395 column 449: unexpected character")
(error "line 1400 column 455: unexpected character")
(error "line 1400 column 457: unexpected character")
(error "line 1405 column 463: unexpected character")
(error "line 1405 column 465: unexpected character")
(error "line 1409 column 463: unexpected character")
(error "line 1409 column 465: unexpected character")
(error "line 1629 column 402: unexpected character")
(error "line 1629 column 404: unexpected character")
(error "line 1634 column 410: unexpected character")
(error "line 1634 column 412: unexpected character")
(error "line 1639 column 418: unexpected character")
(error "line 1639 column 420: unexpected character")
(error "line 1643 column 418: unexpected character")
(error "line 1643 column 420: unexpected character")
(error "line 1863 column 357: unexpected character")
(error "line 1863 column 359: unexpected character")
(error "line 1868 column 365: unexpected character")
(error "line 1868 column 367: unexpected character")
(error "line 1873 column 373: unexpected character")
(error "line 1873 column 375: unexpected character")
(error "line 1877 column 373: unexpected character")
(error "line 1877 column 375: unexpected character")
(error "line 2097 column 312: unexpected character")
(error "line 2097 column 314: unexpected character")
(error "line 2102 column 320: unexpected character")
(error "line 2102 column 322: unexpected character")
(error "line 2107 column 328: unexpected character")
(error "line 2107 column 330: unexpected character")
(error "line 2111 column 328: unexpected character")
(error "line 2111 column 330: unexpected character")
(error "line 2357 column 262: unexpected character")
(error "line 2357 column 264: unexpected character")
(error "line 2362 column 270: unexpected character")
(error "line 2362 column 272: unexpected character")
(error "line 2367 column 278: unexpected character")
(error "line 2367 column 280: unexpected character")
(error "line 2371 column 278: unexpected character")
(error "line 2371 column 280: unexpected character")
(error "line 2591 column 217: unexpected character")
(error "line 2591 column 219: unexpected character")
(error "line 2596 column 225: unexpected character")
(error "line 2596 column 227: unexpected character")
(error "line 2601 column 233: unexpected character")
(error "line 2601 column 235: unexpected character")
(error "line 2605 column 233: unexpected character")
(error "line 2605 column 235: unexpected character")
(error "line 2851 column 168: unexpected character")
(error "line 2851 column 170: unexpected character")
(error "line 2856 column 176: unexpected character")
(error "line 2856 column 178: unexpected character")
(error "line 2861 column 184: unexpected character")
(error "line 2861 column 186: unexpected character")
(error "line 2865 column 184: unexpected character")
(error "line 2865 column 186: unexpected character")
(error "line 3085 column 123: unexpected character")
(error "line 3085 column 125: unexpected character")
(error "line 3090 column 131: unexpected character")
(error "line 3090 column 133: unexpected character")
(error "line 3095 column 139: unexpected character")
(error "line 3095 column 141: unexpected character")
(error "line 3099 column 139: unexpected character")
(error "line 3099 column 141: unexpected character")
(error "line 3319 column 78: unexpected character")
(error "line 3319 column 80: unexpected character")
(error "line 3324 column 86: unexpected character")
(error "line 3324 column 88: unexpected character")
(error "line 3329 column 94: unexpected character")
(error "line 3329 column 96: unexpected character")
(error "line 3333 column 94: unexpected character")
(error "line 3333 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000024.smt2
(error "line 19 column 48: unexpected character")
(error "line 19 column 50: unexpected character")
(error "line 27 column 48: unexpected character")
(error "line 27 column 50: unexpected character")
(error "line 35 column 49: unexpected character")
(error "line 35 column 51: unexpected character")
(error "line 43 column 49: unexpected character")
(error "line 43 column 51: unexpected character")
(error "line 51 column 48: unexpected character")
(error "line 51 column 50: unexpected character")
(error "line 59 column 48: unexpected character")
(error "line 59 column 50: unexpected character")
(error "line 67 column 48: unexpected character")
(error "line 67 column 50: unexpected character")
(error "line 75 column 48: unexpected character")
(error "line 75 column 50: unexpected character")
(error "line 83 column 48: unexpected character")
(error "line 83 column 50: unexpected character")
(error "line 91 column 48: unexpected character")
(error "line 91 column 50: unexpected character")
(error "line 99 column 48: unexpected character")
(error "line 99 column 50: unexpected character")
(error "line 107 column 48: unexpected character")
(error "line 107 column 50: unexpected character")
(error "line 441 column 547: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 441 column 582: unexpected character")
(error "line 441 column 584: unexpected character")
(error "line 446 column 590: unexpected character")
(error "line 446 column 592: unexpected character")
(error "line 451 column 598: unexpected character")
(error "line 451 column 600: unexpected character")
(error "line 455 column 598: unexpected character")
(error "line 455 column 600: unexpected character")
(error "line 675 column 537: unexpected character")
(error "line 675 column 539: unexpected character")
(error "line 680 column 545: unexpected character")
(error "line 680 column 547: unexpected character")
(error "line 685 column 553: unexpected character")
(error "line 685 column 555: unexpected character")
(error "line 689 column 553: unexpected character")
(error "line 689 column 555: unexpected character")
(error "line 909 column 492: unexpected character")
(error "line 909 column 494: unexpected character")
(error "line 914 column 500: unexpected character")
(error "line 914 column 502: unexpected character")
(error "line 919 column 508: unexpected character")
(error "line 919 column 510: unexpected character")
(error "line 923 column 508: unexpected character")
(error "line 923 column 510: unexpected character")
(error "line 1143 column 447: unexpected character")
(error "line 1143 column 449: unexpected character")
(error "line 1148 column 455: unexpected character")
(error "line 1148 column 457: unexpected character")
(error "line 1153 column 463: unexpected character")
(error "line 1153 column 465: unexpected character")
(error "line 1157 column 463: unexpected character")
(error "line 1157 column 465: unexpected character")
(error "line 1377 column 402: unexpected character")
(error "line 1377 column 404: unexpected character")
(error "line 1382 column 410: unexpected character")
(error "line 1382 column 412: unexpected character")
(error "line 1387 column 418: unexpected character")
(error "line 1387 column 420: unexpected character")
(error "line 1391 column 418: unexpected character")
(error "line 1391 column 420: unexpected character")
(error "line 1611 column 357: unexpected character")
(error "line 1611 column 359: unexpected character")
(error "line 1616 column 365: unexpected character")
(error "line 1616 column 367: unexpected character")
(error "line 1621 column 373: unexpected character")
(error "line 1621 column 375: unexpected character")
(error "line 1625 column 373: unexpected character")
(error "line 1625 column 375: unexpected character")
(error "line 1845 column 312: unexpected character")
(error "line 1845 column 314: unexpected character")
(error "line 1850 column 320: unexpected character")
(error "line 1850 column 322: unexpected character")
(error "line 1855 column 328: unexpected character")
(error "line 1855 column 330: unexpected character")
(error "line 1859 column 328: unexpected character")
(error "line 1859 column 330: unexpected character")
(error "line 2079 column 267: unexpected character")
(error "line 2079 column 269: unexpected character")
(error "line 2084 column 275: unexpected character")
(error "line 2084 column 277: unexpected character")
(error "line 2089 column 283: unexpected character")
(error "line 2089 column 285: unexpected character")
(error "line 2093 column 283: unexpected character")
(error "line 2093 column 285: unexpected character")
(error "line 2339 column 217: unexpected character")
(error "line 2339 column 219: unexpected character")
(error "line 2344 column 225: unexpected character")
(error "line 2344 column 227: unexpected character")
(error "line 2349 column 233: unexpected character")
(error "line 2349 column 235: unexpected character")
(error "line 2353 column 233: unexpected character")
(error "line 2353 column 235: unexpected character")
(error "line 2573 column 172: unexpected character")
(error "line 2573 column 174: unexpected character")
(error "line 2578 column 180: unexpected character")
(error "line 2578 column 182: unexpected character")
(error "line 2583 column 188: unexpected character")
(error "line 2583 column 190: unexpected character")
(error "line 2587 column 188: unexpected character")
(error "line 2587 column 190: unexpected character")
(error "line 2833 column 123: unexpected character")
(error "line 2833 column 125: unexpected character")
(error "line 2838 column 131: unexpected character")
(error "line 2838 column 133: unexpected character")
(error "line 2843 column 139: unexpected character")
(error "line 2843 column 141: unexpected character")
(error "line 2847 column 139: unexpected character")
(error "line 2847 column 141: unexpected character")
(error "line 3067 column 78: unexpected character")
(error "line 3067 column 80: unexpected character")
(error "line 3072 column 86: unexpected character")
(error "line 3072 column 88: unexpected character")
(error "line 3077 column 94: unexpected character")
(error "line 3077 column 96: unexpected character")
(error "line 3081 column 94: unexpected character")
(error "line 3081 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000025.smt2
(error "line 18 column 48: unexpected character")
(error "line 18 column 50: unexpected character")
(error "line 26 column 48: unexpected character")
(error "line 26 column 50: unexpected character")
(error "line 34 column 49: unexpected character")
(error "line 34 column 51: unexpected character")
(error "line 42 column 48: unexpected character")
(error "line 42 column 50: unexpected character")
(error "line 50 column 48: unexpected character")
(error "line 50 column 50: unexpected character")
(error "line 58 column 48: unexpected character")
(error "line 58 column 50: unexpected character")
(error "line 66 column 48: unexpected character")
(error "line 66 column 50: unexpected character")
(error "line 74 column 48: unexpected character")
(error "line 74 column 50: unexpected character")
(error "line 82 column 48: unexpected character")
(error "line 82 column 50: unexpected character")
(error "line 90 column 48: unexpected character")
(error "line 90 column 50: unexpected character")
(error "line 98 column 48: unexpected character")
(error "line 98 column 50: unexpected character")
(error "line 423 column 502: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 423 column 537: unexpected character")
(error "line 423 column 539: unexpected character")
(error "line 428 column 545: unexpected character")
(error "line 428 column 547: unexpected character")
(error "line 433 column 553: unexpected character")
(error "line 433 column 555: unexpected character")
(error "line 437 column 553: unexpected character")
(error "line 437 column 555: unexpected character")
(error "line 657 column 492: unexpected character")
(error "line 657 column 494: unexpected character")
(error "line 662 column 500: unexpected character")
(error "line 662 column 502: unexpected character")
(error "line 667 column 508: unexpected character")
(error "line 667 column 510: unexpected character")
(error "line 671 column 508: unexpected character")
(error "line 671 column 510: unexpected character")
(error "line 891 column 447: unexpected character")
(error "line 891 column 449: unexpected character")
(error "line 896 column 455: unexpected character")
(error "line 896 column 457: unexpected character")
(error "line 901 column 463: unexpected character")
(error "line 901 column 465: unexpected character")
(error "line 905 column 463: unexpected character")
(error "line 905 column 465: unexpected character")
(error "line 1125 column 402: unexpected character")
(error "line 1125 column 404: unexpected character")
(error "line 1130 column 410: unexpected character")
(error "line 1130 column 412: unexpected character")
(error "line 1135 column 418: unexpected character")
(error "line 1135 column 420: unexpected character")
(error "line 1139 column 418: unexpected character")
(error "line 1139 column 420: unexpected character")
(error "line 1359 column 357: unexpected character")
(error "line 1359 column 359: unexpected character")
(error "line 1364 column 365: unexpected character")
(error "line 1364 column 367: unexpected character")
(error "line 1369 column 373: unexpected character")
(error "line 1369 column 375: unexpected character")
(error "line 1373 column 373: unexpected character")
(error "line 1373 column 375: unexpected character")
(error "line 1593 column 312: unexpected character")
(error "line 1593 column 314: unexpected character")
(error "line 1598 column 320: unexpected character")
(error "line 1598 column 322: unexpected character")
(error "line 1603 column 328: unexpected character")
(error "line 1603 column 330: unexpected character")
(error "line 1607 column 328: unexpected character")
(error "line 1607 column 330: unexpected character")
(error "line 1827 column 267: unexpected character")
(error "line 1827 column 269: unexpected character")
(error "line 1832 column 275: unexpected character")
(error "line 1832 column 277: unexpected character")
(error "line 1837 column 283: unexpected character")
(error "line 1837 column 285: unexpected character")
(error "line 1841 column 283: unexpected character")
(error "line 1841 column 285: unexpected character")
(error "line 2061 column 222: unexpected character")
(error "line 2061 column 224: unexpected character")
(error "line 2066 column 230: unexpected character")
(error "line 2066 column 232: unexpected character")
(error "line 2071 column 238: unexpected character")
(error "line 2071 column 240: unexpected character")
(error "line 2075 column 238: unexpected character")
(error "line 2075 column 240: unexpected character")
(error "line 2321 column 172: unexpected character")
(error "line 2321 column 174: unexpected character")
(error "line 2326 column 180: unexpected character")
(error "line 2326 column 182: unexpected character")
(error "line 2331 column 188: unexpected character")
(error "line 2331 column 190: unexpected character")
(error "line 2335 column 188: unexpected character")
(error "line 2335 column 190: unexpected character")
(error "line 2555 column 127: unexpected character")
(error "line 2555 column 129: unexpected character")
(error "line 2560 column 135: unexpected character")
(error "line 2560 column 137: unexpected character")
(error "line 2565 column 143: unexpected character")
(error "line 2565 column 145: unexpected character")
(error "line 2569 column 143: unexpected character")
(error "line 2569 column 145: unexpected character")
(error "line 2815 column 78: unexpected character")
(error "line 2815 column 80: unexpected character")
(error "line 2820 column 86: unexpected character")
(error "line 2820 column 88: unexpected character")
(error "line 2825 column 94: unexpected character")
(error "line 2825 column 96: unexpected character")
(error "line 2829 column 94: unexpected character")
(error "line 2829 column 96: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000026.smt2
(error "line 17 column 48: unexpected character")
(error "line 17 column 50: unexpected character")
(error "line 25 column 48: unexpected character")
(error "line 25 column 50: unexpected character")
(error "line 33 column 48: unexpected character")
(error "line 33 column 50: unexpected character")
(error "line 41 column 48: unexpected character")
(error "line 41 column 50: unexpected character")
(error "line 49 column 48: unexpected character")
(error "line 49 column 50: unexpected character")
(error "line 57 column 48: unexpected character")
(error "line 57 column 50: unexpected character")
(error "line 65 column 48: unexpected character")
(error "line 65 column 50: unexpected character")
(error "line 73 column 48: unexpected character")
(error "line 73 column 50: unexpected character")
(error "line 81 column 48: unexpected character")
(error "line 81 column 50: unexpected character")
(error "line 89 column 48: unexpected character")
(error "line 89 column 50: unexpected character")
(error "line 403 column 452: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 403 column 487: unexpected character")
(error "line 403 column 489: unexpected character")
(error "line 408 column 495: unexpected character")
(error "line 408 column 497: unexpected character")
(error "line 413 column 503: unexpected character")
(error "line 413 column 505: unexpected character")
(error "line 417 column 503: unexpected character")
(error "line 417 column 505: unexpected character")
(error "line 637 column 442: unexpected character")
(error "line 637 column 444: unexpected character")
(error "line 642 column 450: unexpected character")
(error "line 642 column 452: unexpected character")
(error "line 647 column 458: unexpected character")
(error "line 647 column 460: unexpected character")
(error "line 651 column 458: unexpected character")
(error "line 651 column 460: unexpected character")
(error "line 871 column 397: unexpected character")
(error "line 871 column 399: unexpected character")
(error "line 876 column 405: unexpected character")
(error "line 876 column 407: unexpected character")
(error "line 881 column 413: unexpected character")
(error "line 881 column 415: unexpected character")
(error "line 885 column 413: unexpected character")
(error "line 885 column 415: unexpected character")
(error "line 1105 column 352: unexpected character")
(error "line 1105 column 354: unexpected character")
(error "line 1110 column 360: unexpected character")
(error "line 1110 column 362: unexpected character")
(error "line 1115 column 368: unexpected character")
(error "line 1115 column 370: unexpected character")
(error "line 1119 column 368: unexpected character")
(error "line 1119 column 370: unexpected character")
(error "line 1339 column 307: unexpected character")
(error "line 1339 column 309: unexpected character")
(error "line 1344 column 315: unexpected character")
(error "line 1344 column 317: unexpected character")
(error "line 1349 column 323: unexpected character")
(error "line 1349 column 325: unexpected character")
(error "line 1353 column 323: unexpected character")
(error "line 1353 column 325: unexpected character")
(error "line 1573 column 262: unexpected character")
(error "line 1573 column 264: unexpected character")
(error "line 1578 column 270: unexpected character")
(error "line 1578 column 272: unexpected character")
(error "line 1583 column 278: unexpected character")
(error "line 1583 column 280: unexpected character")
(error "line 1587 column 278: unexpected character")
(error "line 1587 column 280: unexpected character")
(error "line 1807 column 217: unexpected character")
(error "line 1807 column 219: unexpected character")
(error "line 1812 column 225: unexpected character")
(error "line 1812 column 227: unexpected character")
(error "line 1817 column 233: unexpected character")
(error "line 1817 column 235: unexpected character")
(error "line 1821 column 233: unexpected character")
(error "line 1821 column 235: unexpected character")
(error "line 2041 column 172: unexpected character")
(error "line 2041 column 174: unexpected character")
(error "line 2046 column 180: unexpected character")
(error "line 2046 column 182: unexpected character")
(error "line 2051 column 188: unexpected character")
(error "line 2051 column 190: unexpected character")
(error "line 2055 column 188: unexpected character")
(error "line 2055 column 190: unexpected character")
(error "line 2301 column 122: unexpected character")
(error "line 2301 column 124: unexpected character")
(error "line 2306 column 130: unexpected character")
(error "line 2306 column 132: unexpected character")
(error "line 2311 column 138: unexpected character")
(error "line 2311 column 140: unexpected character")
(error "line 2315 column 138: unexpected character")
(error "line 2315 column 140: unexpected character")
(error "line 2535 column 77: unexpected character")
(error "line 2535 column 79: unexpected character")
(error "line 2540 column 85: unexpected character")
(error "line 2540 column 87: unexpected character")
(error "line 2545 column 93: unexpected character")
(error "line 2545 column 95: unexpected character")
(error "line 2549 column 93: unexpected character")
(error "line 2549 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000027.smt2
(error "line 16 column 48: unexpected character")
(error "line 16 column 50: unexpected character")
(error "line 24 column 48: unexpected character")
(error "line 24 column 50: unexpected character")
(error "line 32 column 48: unexpected character")
(error "line 32 column 50: unexpected character")
(error "line 40 column 48: unexpected character")
(error "line 40 column 50: unexpected character")
(error "line 48 column 48: unexpected character")
(error "line 48 column 50: unexpected character")
(error "line 56 column 48: unexpected character")
(error "line 56 column 50: unexpected character")
(error "line 64 column 48: unexpected character")
(error "line 64 column 50: unexpected character")
(error "line 72 column 48: unexpected character")
(error "line 72 column 50: unexpected character")
(error "line 80 column 48: unexpected character")
(error "line 80 column 50: unexpected character")
(error "line 385 column 407: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 385 column 442: unexpected character")
(error "line 385 column 444: unexpected character")
(error "line 390 column 450: unexpected character")
(error "line 390 column 452: unexpected character")
(error "line 395 column 458: unexpected character")
(error "line 395 column 460: unexpected character")
(error "line 399 column 458: unexpected character")
(error "line 399 column 460: unexpected character")
(error "line 619 column 397: unexpected character")
(error "line 619 column 399: unexpected character")
(error "line 624 column 405: unexpected character")
(error "line 624 column 407: unexpected character")
(error "line 629 column 413: unexpected character")
(error "line 629 column 415: unexpected character")
(error "line 633 column 413: unexpected character")
(error "line 633 column 415: unexpected character")
(error "line 853 column 352: unexpected character")
(error "line 853 column 354: unexpected character")
(error "line 858 column 360: unexpected character")
(error "line 858 column 362: unexpected character")
(error "line 863 column 368: unexpected character")
(error "line 863 column 370: unexpected character")
(error "line 867 column 368: unexpected character")
(error "line 867 column 370: unexpected character")
(error "line 1087 column 307: unexpected character")
(error "line 1087 column 309: unexpected character")
(error "line 1092 column 315: unexpected character")
(error "line 1092 column 317: unexpected character")
(error "line 1097 column 323: unexpected character")
(error "line 1097 column 325: unexpected character")
(error "line 1101 column 323: unexpected character")
(error "line 1101 column 325: unexpected character")
(error "line 1321 column 262: unexpected character")
(error "line 1321 column 264: unexpected character")
(error "line 1326 column 270: unexpected character")
(error "line 1326 column 272: unexpected character")
(error "line 1331 column 278: unexpected character")
(error "line 1331 column 280: unexpected character")
(error "line 1335 column 278: unexpected character")
(error "line 1335 column 280: unexpected character")
(error "line 1555 column 217: unexpected character")
(error "line 1555 column 219: unexpected character")
(error "line 1560 column 225: unexpected character")
(error "line 1560 column 227: unexpected character")
(error "line 1565 column 233: unexpected character")
(error "line 1565 column 235: unexpected character")
(error "line 1569 column 233: unexpected character")
(error "line 1569 column 235: unexpected character")
(error "line 1789 column 172: unexpected character")
(error "line 1789 column 174: unexpected character")
(error "line 1794 column 180: unexpected character")
(error "line 1794 column 182: unexpected character")
(error "line 1799 column 188: unexpected character")
(error "line 1799 column 190: unexpected character")
(error "line 1803 column 188: unexpected character")
(error "line 1803 column 190: unexpected character")
(error "line 2023 column 127: unexpected character")
(error "line 2023 column 129: unexpected character")
(error "line 2028 column 135: unexpected character")
(error "line 2028 column 137: unexpected character")
(error "line 2033 column 143: unexpected character")
(error "line 2033 column 145: unexpected character")
(error "line 2037 column 143: unexpected character")
(error "line 2037 column 145: unexpected character")
(error "line 2283 column 77: unexpected character")
(error "line 2283 column 79: unexpected character")
(error "line 2288 column 85: unexpected character")
(error "line 2288 column 87: unexpected character")
(error "line 2293 column 93: unexpected character")
(error "line 2293 column 95: unexpected character")
(error "line 2297 column 93: unexpected character")
(error "line 2297 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000028.smt2
(error "line 15 column 48: unexpected character")
(error "line 15 column 50: unexpected character")
(error "line 23 column 48: unexpected character")
(error "line 23 column 50: unexpected character")
(error "line 31 column 48: unexpected character")
(error "line 31 column 50: unexpected character")
(error "line 39 column 48: unexpected character")
(error "line 39 column 50: unexpected character")
(error "line 47 column 48: unexpected character")
(error "line 47 column 50: unexpected character")
(error "line 55 column 48: unexpected character")
(error "line 55 column 50: unexpected character")
(error "line 63 column 48: unexpected character")
(error "line 63 column 50: unexpected character")
(error "line 71 column 48: unexpected character")
(error "line 71 column 50: unexpected character")
(error "line 365 column 357: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 365 column 392: unexpected character")
(error "line 365 column 394: unexpected character")
(error "line 370 column 400: unexpected character")
(error "line 370 column 402: unexpected character")
(error "line 375 column 408: unexpected character")
(error "line 375 column 410: unexpected character")
(error "line 379 column 408: unexpected character")
(error "line 379 column 410: unexpected character")
(error "line 599 column 347: unexpected character")
(error "line 599 column 349: unexpected character")
(error "line 604 column 355: unexpected character")
(error "line 604 column 357: unexpected character")
(error "line 609 column 363: unexpected character")
(error "line 609 column 365: unexpected character")
(error "line 613 column 363: unexpected character")
(error "line 613 column 365: unexpected character")
(error "line 833 column 302: unexpected character")
(error "line 833 column 304: unexpected character")
(error "line 838 column 310: unexpected character")
(error "line 838 column 312: unexpected character")
(error "line 843 column 318: unexpected character")
(error "line 843 column 320: unexpected character")
(error "line 847 column 318: unexpected character")
(error "line 847 column 320: unexpected character")
(error "line 1067 column 257: unexpected character")
(error "line 1067 column 259: unexpected character")
(error "line 1072 column 265: unexpected character")
(error "line 1072 column 267: unexpected character")
(error "line 1077 column 273: unexpected character")
(error "line 1077 column 275: unexpected character")
(error "line 1081 column 273: unexpected character")
(error "line 1081 column 275: unexpected character")
(error "line 1301 column 212: unexpected character")
(error "line 1301 column 214: unexpected character")
(error "line 1306 column 220: unexpected character")
(error "line 1306 column 222: unexpected character")
(error "line 1311 column 228: unexpected character")
(error "line 1311 column 230: unexpected character")
(error "line 1315 column 228: unexpected character")
(error "line 1315 column 230: unexpected character")
(error "line 1535 column 167: unexpected character")
(error "line 1535 column 169: unexpected character")
(error "line 1540 column 175: unexpected character")
(error "line 1540 column 177: unexpected character")
(error "line 1545 column 183: unexpected character")
(error "line 1545 column 185: unexpected character")
(error "line 1549 column 183: unexpected character")
(error "line 1549 column 185: unexpected character")
(error "line 1769 column 122: unexpected character")
(error "line 1769 column 124: unexpected character")
(error "line 1774 column 130: unexpected character")
(error "line 1774 column 132: unexpected character")
(error "line 1779 column 138: unexpected character")
(error "line 1779 column 140: unexpected character")
(error "line 1783 column 138: unexpected character")
(error "line 1783 column 140: unexpected character")
(error "line 2003 column 77: unexpected character")
(error "line 2003 column 79: unexpected character")
(error "line 2008 column 85: unexpected character")
(error "line 2008 column 87: unexpected character")
(error "line 2013 column 93: unexpected character")
(error "line 2013 column 95: unexpected character")
(error "line 2017 column 93: unexpected character")
(error "line 2017 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000029.smt2
(error "line 14 column 48: unexpected character")
(error "line 14 column 50: unexpected character")
(error "line 22 column 48: unexpected character")
(error "line 22 column 50: unexpected character")
(error "line 30 column 48: unexpected character")
(error "line 30 column 50: unexpected character")
(error "line 38 column 48: unexpected character")
(error "line 38 column 50: unexpected character")
(error "line 46 column 48: unexpected character")
(error "line 46 column 50: unexpected character")
(error "line 54 column 48: unexpected character")
(error "line 54 column 50: unexpected character")
(error "line 62 column 48: unexpected character")
(error "line 62 column 50: unexpected character")
(error "line 347 column 312: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 347 column 347: unexpected character")
(error "line 347 column 349: unexpected character")
(error "line 352 column 355: unexpected character")
(error "line 352 column 357: unexpected character")
(error "line 357 column 363: unexpected character")
(error "line 357 column 365: unexpected character")
(error "line 361 column 363: unexpected character")
(error "line 361 column 365: unexpected character")
(error "line 581 column 302: unexpected character")
(error "line 581 column 304: unexpected character")
(error "line 586 column 310: unexpected character")
(error "line 586 column 312: unexpected character")
(error "line 591 column 318: unexpected character")
(error "line 591 column 320: unexpected character")
(error "line 595 column 318: unexpected character")
(error "line 595 column 320: unexpected character")
(error "line 815 column 257: unexpected character")
(error "line 815 column 259: unexpected character")
(error "line 820 column 265: unexpected character")
(error "line 820 column 267: unexpected character")
(error "line 825 column 273: unexpected character")
(error "line 825 column 275: unexpected character")
(error "line 829 column 273: unexpected character")
(error "line 829 column 275: unexpected character")
(error "line 1049 column 212: unexpected character")
(error "line 1049 column 214: unexpected character")
(error "line 1054 column 220: unexpected character")
(error "line 1054 column 222: unexpected character")
(error "line 1059 column 228: unexpected character")
(error "line 1059 column 230: unexpected character")
(error "line 1063 column 228: unexpected character")
(error "line 1063 column 230: unexpected character")
(error "line 1283 column 167: unexpected character")
(error "line 1283 column 169: unexpected character")
(error "line 1288 column 175: unexpected character")
(error "line 1288 column 177: unexpected character")
(error "line 1293 column 183: unexpected character")
(error "line 1293 column 185: unexpected character")
(error "line 1297 column 183: unexpected character")
(error "line 1297 column 185: unexpected character")
(error "line 1517 column 122: unexpected character")
(error "line 1517 column 124: unexpected character")
(error "line 1522 column 130: unexpected character")
(error "line 1522 column 132: unexpected character")
(error "line 1527 column 138: unexpected character")
(error "line 1527 column 140: unexpected character")
(error "line 1531 column 138: unexpected character")
(error "line 1531 column 140: unexpected character")
(error "line 1751 column 77: unexpected character")
(error "line 1751 column 79: unexpected character")
(error "line 1756 column 85: unexpected character")
(error "line 1756 column 87: unexpected character")
(error "line 1761 column 93: unexpected character")
(error "line 1761 column 95: unexpected character")
(error "line 1765 column 93: unexpected character")
(error "line 1765 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000030.smt2
(error "line 13 column 48: unexpected character")
(error "line 13 column 50: unexpected character")
(error "line 21 column 48: unexpected character")
(error "line 21 column 50: unexpected character")
(error "line 29 column 48: unexpected character")
(error "line 29 column 50: unexpected character")
(error "line 37 column 48: unexpected character")
(error "line 37 column 50: unexpected character")
(error "line 45 column 48: unexpected character")
(error "line 45 column 50: unexpected character")
(error "line 53 column 48: unexpected character")
(error "line 53 column 50: unexpected character")
(error "line 329 column 267: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 329 column 302: unexpected character")
(error "line 329 column 304: unexpected character")
(error "line 334 column 310: unexpected character")
(error "line 334 column 312: unexpected character")
(error "line 339 column 318: unexpected character")
(error "line 339 column 320: unexpected character")
(error "line 343 column 318: unexpected character")
(error "line 343 column 320: unexpected character")
(error "line 563 column 257: unexpected character")
(error "line 563 column 259: unexpected character")
(error "line 568 column 265: unexpected character")
(error "line 568 column 267: unexpected character")
(error "line 573 column 273: unexpected character")
(error "line 573 column 275: unexpected character")
(error "line 577 column 273: unexpected character")
(error "line 577 column 275: unexpected character")
(error "line 797 column 212: unexpected character")
(error "line 797 column 214: unexpected character")
(error "line 802 column 220: unexpected character")
(error "line 802 column 222: unexpected character")
(error "line 807 column 228: unexpected character")
(error "line 807 column 230: unexpected character")
(error "line 811 column 228: unexpected character")
(error "line 811 column 230: unexpected character")
(error "line 1031 column 167: unexpected character")
(error "line 1031 column 169: unexpected character")
(error "line 1036 column 175: unexpected character")
(error "line 1036 column 177: unexpected character")
(error "line 1041 column 183: unexpected character")
(error "line 1041 column 185: unexpected character")
(error "line 1045 column 183: unexpected character")
(error "line 1045 column 185: unexpected character")
(error "line 1265 column 122: unexpected character")
(error "line 1265 column 124: unexpected character")
(error "line 1270 column 130: unexpected character")
(error "line 1270 column 132: unexpected character")
(error "line 1275 column 138: unexpected character")
(error "line 1275 column 140: unexpected character")
(error "line 1279 column 138: unexpected character")
(error "line 1279 column 140: unexpected character")
(error "line 1499 column 77: unexpected character")
(error "line 1499 column 79: unexpected character")
(error "line 1504 column 85: unexpected character")
(error "line 1504 column 87: unexpected character")
(error "line 1509 column 93: unexpected character")
(error "line 1509 column 95: unexpected character")
(error "line 1513 column 93: unexpected character")
(error "line 1513 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000031.smt2
(error "line 12 column 48: unexpected character")
(error "line 12 column 50: unexpected character")
(error "line 20 column 48: unexpected character")
(error "line 20 column 50: unexpected character")
(error "line 28 column 48: unexpected character")
(error "line 28 column 50: unexpected character")
(error "line 36 column 48: unexpected character")
(error "line 36 column 50: unexpected character")
(error "line 44 column 48: unexpected character")
(error "line 44 column 50: unexpected character")
(error "line 311 column 222: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 311 column 257: unexpected character")
(error "line 311 column 259: unexpected character")
(error "line 316 column 265: unexpected character")
(error "line 316 column 267: unexpected character")
(error "line 321 column 273: unexpected character")
(error "line 321 column 275: unexpected character")
(error "line 325 column 273: unexpected character")
(error "line 325 column 275: unexpected character")
(error "line 545 column 212: unexpected character")
(error "line 545 column 214: unexpected character")
(error "line 550 column 220: unexpected character")
(error "line 550 column 222: unexpected character")
(error "line 555 column 228: unexpected character")
(error "line 555 column 230: unexpected character")
(error "line 559 column 228: unexpected character")
(error "line 559 column 230: unexpected character")
(error "line 779 column 167: unexpected character")
(error "line 779 column 169: unexpected character")
(error "line 784 column 175: unexpected character")
(error "line 784 column 177: unexpected character")
(error "line 789 column 183: unexpected character")
(error "line 789 column 185: unexpected character")
(error "line 793 column 183: unexpected character")
(error "line 793 column 185: unexpected character")
(error "line 1013 column 122: unexpected character")
(error "line 1013 column 124: unexpected character")
(error "line 1018 column 130: unexpected character")
(error "line 1018 column 132: unexpected character")
(error "line 1023 column 138: unexpected character")
(error "line 1023 column 140: unexpected character")
(error "line 1027 column 138: unexpected character")
(error "line 1027 column 140: unexpected character")
(error "line 1247 column 77: unexpected character")
(error "line 1247 column 79: unexpected character")
(error "line 1252 column 85: unexpected character")
(error "line 1252 column 87: unexpected character")
(error "line 1257 column 93: unexpected character")
(error "line 1257 column 95: unexpected character")
(error "line 1261 column 93: unexpected character")
(error "line 1261 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000032.smt2
(error "line 11 column 48: unexpected character")
(error "line 11 column 50: unexpected character")
(error "line 19 column 48: unexpected character")
(error "line 19 column 50: unexpected character")
(error "line 27 column 48: unexpected character")
(error "line 27 column 50: unexpected character")
(error "line 35 column 48: unexpected character")
(error "line 35 column 50: unexpected character")
(error "line 293 column 177: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 293 column 212: unexpected character")
(error "line 293 column 214: unexpected character")
(error "line 298 column 220: unexpected character")
(error "line 298 column 222: unexpected character")
(error "line 303 column 228: unexpected character")
(error "line 303 column 230: unexpected character")
(error "line 307 column 228: unexpected character")
(error "line 307 column 230: unexpected character")
(error "line 527 column 167: unexpected character")
(error "line 527 column 169: unexpected character")
(error "line 532 column 175: unexpected character")
(error "line 532 column 177: unexpected character")
(error "line 537 column 183: unexpected character")
(error "line 537 column 185: unexpected character")
(error "line 541 column 183: unexpected character")
(error "line 541 column 185: unexpected character")
(error "line 761 column 122: unexpected character")
(error "line 761 column 124: unexpected character")
(error "line 766 column 130: unexpected character")
(error "line 766 column 132: unexpected character")
(error "line 771 column 138: unexpected character")
(error "line 771 column 140: unexpected character")
(error "line 775 column 138: unexpected character")
(error "line 775 column 140: unexpected character")
(error "line 995 column 77: unexpected character")
(error "line 995 column 79: unexpected character")
(error "line 1000 column 85: unexpected character")
(error "line 1000 column 87: unexpected character")
(error "line 1005 column 93: unexpected character")
(error "line 1005 column 95: unexpected character")
(error "line 1009 column 93: unexpected character")
(error "line 1009 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000033.smt2
(error "line 10 column 48: unexpected character")
(error "line 10 column 50: unexpected character")
(error "line 18 column 48: unexpected character")
(error "line 18 column 50: unexpected character")
(error "line 26 column 48: unexpected character")
(error "line 26 column 50: unexpected character")
(error "line 275 column 132: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 275 column 167: unexpected character")
(error "line 275 column 169: unexpected character")
(error "line 280 column 175: unexpected character")
(error "line 280 column 177: unexpected character")
(error "line 285 column 183: unexpected character")
(error "line 285 column 185: unexpected character")
(error "line 289 column 183: unexpected character")
(error "line 289 column 185: unexpected character")
(error "line 509 column 122: unexpected character")
(error "line 509 column 124: unexpected character")
(error "line 514 column 130: unexpected character")
(error "line 514 column 132: unexpected character")
(error "line 519 column 138: unexpected character")
(error "line 519 column 140: unexpected character")
(error "line 523 column 138: unexpected character")
(error "line 523 column 140: unexpected character")
(error "line 743 column 77: unexpected character")
(error "line 743 column 79: unexpected character")
(error "line 748 column 85: unexpected character")
(error "line 748 column 87: unexpected character")
(error "line 753 column 93: unexpected character")
(error "line 753 column 95: unexpected character")
(error "line 757 column 93: unexpected character")
(error "line 757 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000034.smt2
(error "line 9 column 48: unexpected character")
(error "line 9 column 50: unexpected character")
(error "line 17 column 48: unexpected character")
(error "line 17 column 50: unexpected character")
(error "line 257 column 87: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 257 column 122: unexpected character")
(error "line 257 column 124: unexpected character")
(error "line 262 column 130: unexpected character")
(error "line 262 column 132: unexpected character")
(error "line 267 column 138: unexpected character")
(error "line 267 column 140: unexpected character")
(error "line 271 column 138: unexpected character")
(error "line 271 column 140: unexpected character")
(error "line 491 column 77: unexpected character")
(error "line 491 column 79: unexpected character")
(error "line 496 column 85: unexpected character")
(error "line 496 column 87: unexpected character")
(error "line 501 column 93: unexpected character")
(error "line 501 column 95: unexpected character")
(error "line 505 column 93: unexpected character")
(error "line 505 column 95: unexpected character")
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000035.smt2
(error "line 8 column 48: unexpected character")
(error "line 8 column 50: unexpected character")
(error "line 239 column 42: unknown constant int!choice!2065!7!2065!30!0!env!dir")
(error "line 239 column 77: unexpected character")
(error "line 239 column 79: unexpected character")
(error "line 244 column 85: unexpected character")
(error "line 244 column 87: unexpected character")
(error "line 249 column 93: unexpected character")
(error "line 249 column 95: unexpected character")
(error "line 253 column 93: unexpected character")
(error "line 253 column 95: unexpected character")
INFO     sym_infer       found 0 angelic paths for test '22'
INFO     repair          considering suspicious locations [('I', (317, 6, 317, 23))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmplo6i4hr8/suspicious
DEBUG    transformation  locations: [('I', (317, 6, 317, 23))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmplo6i4hr8/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000001.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000006.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000007.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000008.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000009.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000010.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000011.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000012.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000013.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000014.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000015.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000016.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000017.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000018.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000019.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000020.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000021.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000022.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000023.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000024.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000025.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000026.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000027.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000028.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000030.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000031.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000032.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000033.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000034.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000035.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000036.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000037.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000038.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000039.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000040.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000041.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000042.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000043.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000044.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000045.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000046.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000047.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000048.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000049.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000050.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000051.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000052.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000053.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000054.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000055.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000056.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000057.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000001.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (317, 6, 317, 23)[0]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[1]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[2]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[3]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[4]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[5]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[6]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(317, 6, 317, 23): [(False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000002.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (317, 6, 317, 23)[0]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[1]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[2]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[3]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[4]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[5]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[6]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[7]: angelic = True
INFO     sym_infer       expression (317, 6, 317, 23)[8]: angelic = False
DEBUG    sym_infer       angelic_path: {(317, 6, 317, 23): [(False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (True, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000003.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (317, 6, 317, 23)[0]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[1]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[2]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[3]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[4]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[5]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[6]: angelic = False
INFO     sym_infer       expression (317, 6, 317, 23)[7]: angelic = True
INFO     sym_infer       expression (317, 6, 317, 23)[8]: angelic = True
DEBUG    sym_infer       angelic_path: {(317, 6, 317, 23): [(False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (False, None, {'tif->tif_mode': 2}), (True, None, {'tif->tif_mode': 2}), (True, None, {'tif->tif_mode': 2})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000004.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000005.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000006.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000007.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000008.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000009.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000010.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000011.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 6, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000012.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000013.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000014.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000015.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000016.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 5, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000017.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 6, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000018.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000019.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000020.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000021.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000022.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 4, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000023.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 5, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000024.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 6, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000025.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000026.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000027.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000028.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000030.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000031.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000032.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000033.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000034.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000035.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000036.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000037.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000038.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000039.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000040.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 6, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000041.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000042.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000043.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000044.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000045.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 5, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000046.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 6, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000047.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000048.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000049.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000050.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000051.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 4, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000052.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 5, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000053.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 6, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000054.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 7, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000055.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 8, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 1)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 1
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000056.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000057.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(317, 6, 317, 23): ('bool', 9, ['tif->tif_mode'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: {'TIFFErrorExt'}
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
INFO     sym_infer       labels '['TIFFErrorExt']' executed while [] required
INFO     sym_infer       found 0 angelic paths for test '22'
INFO     repair          considering suspicious locations [('I', (346, 7, 346, 47))]
INFO     reduction       all failing tests: ['22']
INFO     reduction       select 1 best tests from ['22']
INFO     reduction       select 0 best tests from ['2', '4', '9', '10', '11', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49']
INFO     reduction       selected 1 tests
INFO     reduction       selected passing tests: []
INFO     reduction       selected failing tests: ['22']
INFO     project         configuring backend source
DEBUG    project         configure_cmd:                                                    ./configure --config-cache --cache-file=/angelix-experiments/.angelix/config.cache                --disable-nls                                                         --disable-shared                                                      --disable-cxx                                                         --disable-jpeg                                                        --disable-zlib                                                        --disable-pixarlog                                                    --disable-jbig;                                           echo -ne 'all:\nclean:\ndistclean:\n' >> contrib/Makefile             
INFO     transformation  instrumenting suspicious of backend source
DEBUG    transformation  suspicious_file: /tmp/tmpc59niaog/suspicious
DEBUG    transformation  locations: [('I', (346, 7, 346, 47))]
DEBUG    transformation  ANGELIX_EXTRACTED=/angelix-experiments/.angelix/extracted
DEBUG    transformation  ANGELIX_SUSPICIOUS=/tmp/tmpc59niaog/suspicious
DEBUG    transformation  ANGELIX_IF_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_LOOP_CONDITIONS_DEFECT_CLASS=YES
DEBUG    transformation  ANGELIX_IGNORE_TRIVIAL=YES
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/backend
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building backend source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     sym_infer       inferring specification for test '22' through KLEE
INFO     testing         running test '22' of backend source with KLEE
DEBUG    testing         KLEE_RUN_MODE: KLEE
DEBUG    testing         ANGELIX_RUN: angelix-run-klee
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         ANGELIX_SYMBOLIC_RUNTIME: ON
DEBUG    testing         CC: angelix-compiler --klee
DEBUG    testing         cwd: /angelix-experiments/.angelix/backend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       checking whether /angelix-experiments/.angelix/backend/klee-out-0 exists...
DEBUG    sym_infer       smt_files: ['/angelix-experiments/.angelix/backend/klee-out-0/test000001.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000002.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000003.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000004.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000005.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000006.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000007.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000008.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000009.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000010.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000011.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000012.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000013.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000014.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000015.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000016.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000017.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000018.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000019.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000020.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000021.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000022.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000023.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000024.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000025.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000026.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000027.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000028.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000029.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000030.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000031.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000032.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000033.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000034.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000035.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000036.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000037.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000038.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000039.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000040.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000041.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000042.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000043.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000044.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000045.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000046.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000047.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000048.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000049.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000050.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000051.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000052.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000053.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000054.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000055.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000056.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000057.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000058.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000059.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000060.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000061.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000062.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000063.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000064.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000065.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000066.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000067.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000068.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000069.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000070.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000071.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000072.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000073.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000074.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000075.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000076.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000077.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000078.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000079.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000080.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000081.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000082.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000083.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000084.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000085.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000086.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000087.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000088.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000089.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000090.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000091.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000092.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000093.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000094.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000095.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000096.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000097.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000098.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000099.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000100.smt2', '/angelix-experiments/.angelix/backend/klee-out-0/test000101.smt2']
DEBUG    sym_infer       dump: /angelix-experiments/.angelix/dump/22
DEBUG    sym_infer       vars: ['flush', 'reachable']
DEBUG    sym_infer       oracle: {'flush': ['1', '1', '1', '1'], 'reachable': []}
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000001.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 2)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 2
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000002.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000003.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000004.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000005.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000006.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000007.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000008.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000009.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000010.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000011.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000012.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000013.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000014.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000015.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000016.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000017.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000018.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000019.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000020.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000021.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000022.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000023.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000024.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000025.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000026.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000027.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000028.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000029.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000030.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000031.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000032.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000033.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000034.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000035.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000036.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000037.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000038.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000039.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000040.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000041.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000042.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000043.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000044.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000045.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000046.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000047.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000048.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = True
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 1
INFO     sym_infer       spurious angelic path
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000049.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       expression (346, 7, 346, 47)[0]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[1]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[2]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[3]: angelic = True
INFO     sym_infer       expression (346, 7, 346, 47)[4]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[5]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[6]: angelic = False
INFO     sym_infer       expression (346, 7, 346, 47)[7]: angelic = False
DEBUG    sym_infer       angelic_path: {(346, 7, 346, 47): [(False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (True, None, {'tif->tif_rawcc_1': 3020, 'orig_rawcc': 3020, 'tif->tif_rawcc': 3020}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0}), (False, None, {'tif->tif_rawcc_1': 0, 'orig_rawcc': 0, 'tif->tif_rawcc': 0})]}
INFO     testing         running test '22' of frontend source
DEBUG    testing         ANGELIX_RUN: angelix-run-test
DEBUG    testing         ANGELIX_WITH_LOADING: /angelix-experiments/.angelix/load/22
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/frontend
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 0
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000050.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000051.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000052.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000053.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000054.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000055.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000056.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000057.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000058.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000059.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000060.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000061.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000062.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000063.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000064.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 8)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 8)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 8
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000065.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 3)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 3
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000066.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000067.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000068.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000069.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000070.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000071.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000072.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000073.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000074.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000075.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000076.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000077.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000078.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000079.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000080.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000081.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000082.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000083.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000084.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000085.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000086.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000087.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000088.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000089.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000090.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000091.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000092.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000093.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000094.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000095.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 7)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 7
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000096.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 8)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 8)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 8
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000097.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 4)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 4
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000098.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000099.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000100.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 6)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 6
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       solving path .angelix/backend/klee-out-0/test000101.smt2
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       choices: {(346, 7, 346, 47): ('bool', 8, ['tif->tif_rawcc_1', 'orig_rawcc', 'tif->tif_rawcc'])}
DEBUG    sym_infer       constants: set()
DEBUG    sym_infer       reachable: set()
DEBUG    sym_infer       original_available: False
DEBUG    sym_infer       outputs: {'flush': ('int', 5)}
DEBUG    sym_infer       required_executions: 4
DEBUG    sym_infer       actual_executions: 5
DEBUG    sym_infer       solver result: sat
INFO     sym_infer       found 1 angelic paths for test '22'
INFO     synthesis       synthesizing patch with component level 'alternatives'
INFO     synthesis       use old synth
DEBUG    synthesis       call synthesizer: java -jar /angelix/src/synthesis/target/scala-2.10/repair-maxsat-assembly-1.0.jar ['/angelix-experiments/.angelix/syn/syn_1/angelic-forest.json', '/angelix-experiments/.angelix/extracted', '/angelix-experiments/.angelix/syn/syn_1/patch', '/angelix-experiments/.angelix/syn/syn_1/config.json']
DEBUG    synthesis       synthesis output: SUCCESS
INFO     synthesis       fixing expression (346, 7, 346, 47): ((tif->tif_rawcc > 0) && (tif->tif_rawcc != orig_rawcc)) ---> ((tif->tif_rawcc > 0) && (tif->tif_rawcc != 0))
INFO     repair          candidate fix synthesized
INFO     transformation  applying patch to validation source
DEBUG    transformation  trans dir: /angelix-experiments/.angelix/validation
DEBUG    transformation  trans cmd: instrument-suspicious libtiff/tif_dirwrite.c
INFO     project         building validation source
DEBUG    project         CC: angelix-compiler --klee
DEBUG    project         cmd: /angelix-experiments/.aux/libtiff/scripts/build-libtiff
INFO     testing         running test '1' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 1
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 1
INFO     testing         output code: 0
INFO     testing         running test '2' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 2
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 2
INFO     testing         output code: 0
INFO     testing         running test '4' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 4
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 4
INFO     testing         output code: 0
INFO     testing         running test '6' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 6
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 6
INFO     testing         output code: 0
INFO     testing         running test '7' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 7
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 7
INFO     testing         output code: 0
INFO     testing         running test '8' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 8
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 8
INFO     testing         output code: 0
INFO     testing         running test '9' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 9
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 9
INFO     testing         output code: 0
INFO     testing         running test '10' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 10
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 10
INFO     testing         output code: 0
INFO     testing         running test '11' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 11
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 11
INFO     testing         output code: 0
INFO     testing         running test '12' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 12
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 12
INFO     testing         output code: 0
INFO     testing         running test '13' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 13
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 13
INFO     testing         output code: 0
INFO     testing         running test '14' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 14
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 14
INFO     testing         output code: 0
INFO     testing         running test '15' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 15
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 15
INFO     testing         output code: 0
INFO     testing         running test '16' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 16
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 16
INFO     testing         output code: 0
INFO     testing         running test '17' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 17
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 17
INFO     testing         output code: 0
INFO     testing         running test '20' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 20
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 20
INFO     testing         output code: 0
INFO     testing         running test '21' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 21
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 21
INFO     testing         output code: 0
INFO     testing         running test '22' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 22
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 22
INFO     testing         output code: 0
INFO     testing         running test '24' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 24
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 24
INFO     testing         output code: 0
INFO     testing         running test '25' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 25
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 25
INFO     testing         output code: 0
INFO     testing         running test '26' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 26
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 26
INFO     testing         output code: 0
INFO     testing         running test '27' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 27
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 27
INFO     testing         output code: 0
INFO     testing         running test '28' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 28
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 28
INFO     testing         output code: 0
INFO     testing         running test '39' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 39
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 39
INFO     testing         output code: 0
INFO     testing         running test '40' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 40
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 40
INFO     testing         output code: 0
INFO     testing         running test '41' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 41
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 41
INFO     testing         output code: 0
INFO     testing         running test '43' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 43
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 43
INFO     testing         output code: 0
INFO     testing         running test '44' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 44
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 44
INFO     testing         output code: 0
INFO     testing         running test '45' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 45
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 45
INFO     testing         output code: 0
INFO     testing         running test '46' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 46
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 46
INFO     testing         output code: 0
INFO     testing         running test '47' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 47
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 47
INFO     testing         output code: 0
INFO     testing         running test '48' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 48
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 48
INFO     testing         output code: 0
INFO     testing         running test '49' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 49
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 49
INFO     testing         output code: 0
INFO     testing         running test '50' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 50
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 50
INFO     testing         output code: 0
INFO     testing         running test '51' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 51
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 51
INFO     testing         output code: 0
INFO     testing         running test '53' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 53
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 53
INFO     testing         output code: 0
INFO     testing         running test '54' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 54
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 54
INFO     testing         output code: 0
INFO     testing         running test '55' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 55
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 55
INFO     testing         output code: 0
INFO     testing         running test '56' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 56
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 56
INFO     testing         output code: 0
INFO     testing         running test '57' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 57
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 57
INFO     testing         output code: 0
INFO     testing         running test '58' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 58
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 58
INFO     testing         output code: 0
INFO     testing         running test '59' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 59
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 59
INFO     testing         output code: 0
INFO     testing         running test '60' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 60
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 60
INFO     testing         output code: 0
INFO     testing         running test '61' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 61
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 61
INFO     testing         output code: 0
INFO     testing         running test '63' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 63
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 63
INFO     testing         output code: 0
INFO     testing         running test '64' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 64
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 64
INFO     testing         output code: 0
INFO     testing         running test '65' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 65
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 65
INFO     testing         output code: 0
INFO     testing         running test '66' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 66
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 66
INFO     testing         output code: 0
INFO     testing         running test '67' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 67
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 67
INFO     testing         output code: 0
INFO     testing         running test '68' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 68
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 68
INFO     testing         output code: 0
INFO     testing         running test '69' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 69
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 69
INFO     testing         output code: 0
INFO     testing         running test '70' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 70
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 70
INFO     testing         output code: 0
INFO     testing         running test '71' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 71
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 71
INFO     testing         output code: 0
INFO     testing         running test '72' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 72
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 72
INFO     testing         output code: 0
INFO     testing         running test '73' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 73
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 73
INFO     testing         output code: 0
INFO     testing         running test '74' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 74
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 74
INFO     testing         output code: 0
INFO     testing         running test '75' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 75
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 75
INFO     testing         output code: 0
INFO     testing         running test '76' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 76
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 76
INFO     testing         output code: 0
INFO     testing         running test '77' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 77
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 77
INFO     testing         output code: 0
INFO     testing         running test '78' of validation source
DEBUG    testing         ANGELIX_WORKDIR: /angelix-experiments/.angelix
DEBUG    testing         ANGELIX_TEST_ID: 78
DEBUG    testing         cwd: /angelix-experiments/.angelix/validation
DEBUG    testing         run: /angelix-experiments/.aux/libtiff/scripts/oracle-libtiff-sym 78
INFO     testing         output code: 0
DEBUG    repair          is_repaired: True
DEBUG    repair          pos: ['1', '2', '4', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '20', '21', '22', '24', '25', '26', '27', '28', '39', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '53', '54', '55', '56', '57', '58', '59', '60', '61', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78']
DEBUG    repair          neg: []
DEBUG    repair          last_level: alternatives
DEBUG    repair          original: ((tif->tif_rawcc > 0) && (tif->tif_rawcc != orig_rawcc))
DEBUG    repair          fix: {(346, 7, 346, 47): '((tif->tif_rawcc > 0) && (tif->tif_rawcc != 0))'}
INFO     repair          patch successfully generated in 31m 41s (see libtiff-2021-Oct19-182304.patch)
SUCCESS
